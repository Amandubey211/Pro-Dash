{"version":3,"file":"static/js/330.84f0a2f3.chunk.js","mappings":"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","sources":["Components/DashBoardComponents/ProfileImageSection.js","Components/DashBoardComponents/ProfileCard.js","Data/DashboardData/DashboardModelData.js","Components/DashBoardComponents/DashboardModal.js","Hooks/CustomTaskHooks/useDeleteTask.js","Components/DashBoardComponents/TaskList.js","Data/DashboardData/FilteringData.js","Components/DashBoardComponents/Statstics.js","Components/DashBoardComponents/MainSection.js","Hooks/CustomUserInfoHooks/useGetProfileCompletness.js","Components/DashBoardComponents/Dashboard.js","Assets/DashboardAssets/TaskListAsset/EmptyList.svg","Components/DashBoardComponents/EmptyList.js","Components/DashBoardComponents/PersonalInfoModal.js","Hooks/CustomUserInfoHooks/useManagePersonalPhoto.js","Components/DashBoardComponents/ProfilePhotoModal.js","Data/LoginData/LoginOption.js","Hooks/CustomTaskHooks/useGetTask.js","Hooks/CustomUserInfoHooks/useGetUserPersonalInfo.js","Utils/ImageUploader.js"],"sourcesContent":["import { Avatar } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { LoginOptions } from \"../../Data/LoginData/LoginOption\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfilePhotoModal from \"./ProfilePhotoModal\";\r\nimport { IoLogoLinkedin } from \"react-icons/io5\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\n\r\nconst ProfileImageSection = () => {\r\n  const PersonalInfo = useSelector((state) => state.user.userPersonalInfo);\r\n  const user = useSelector((state) => state.user.userDetails);\r\n  return (\r\n    <div className=\"flex flex-col gap-1 p-1 relative\">\r\n      <div className=\"absolute top-0 left-0 z-20\">\r\n        <ProfilePhotoModal prevState={PersonalInfo?.photoUrl || null} />\r\n      </div>\r\n      <div className=\"flex justify-center p-1 relative\">\r\n        <Avatar\r\n          size={{ base: \"2xl\", md: \"xl\", lg: \"2xl\", sm: \"2xl\" }}\r\n          name={\r\n            PersonalInfo?.firstName + PersonalInfo?.lastName || user?.userName\r\n          }\r\n          title=\"User Photo\"\r\n          src={PersonalInfo?.photoUrl}\r\n        />\r\n        <span className=\"absolute -bottom-1 left-1/3 transform -translate-x-1/2 \">\r\n          <a\r\n            href={PersonalInfo?.linkedin}\r\n            target=\"_blank\"\r\n            title=\"Linkedin Link\"\r\n          >\r\n            <IoLogoLinkedin className=\"lg:text-3xl text-2xl z-10 text-blue-500 bg-white rounded-full\" />\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileImageSection;\r\n","import { Button, Tooltip } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ProfileCardLogos, {\r\n  ProfileLinkLogo,\r\n} from \"../../Data/DashboardData/ProfileCardLogo.js\";\r\nimport {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PersonalInfoModal from \"./PersonalInfoModal.js\";\r\nimport { FaCopy, FaRegCopy } from \"react-icons/fa\";\r\nimport { GrAppsRounded } from \"react-icons/gr\";\r\nimport ProfileImageSection from \"./ProfileImageSection.js\";\r\nimport Navigation from \"../ResuableComponent/Navigation.js\";\r\n\r\nconst ProfileCard = () => {\r\n  const [copied, setCopied] = useState(false);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const PersonalInfo = useSelector((state) => state.user.userPersonalInfo);\r\n  const handleCopy = () => {\r\n    if (!PersonalInfo.firstName)\r\n      return toast.error(\"No Info\", { position: \"bottom-left\" });\r\n    setCopied(true);\r\n\r\n    const textToCopy = `Name: ${PersonalInfo.firstName} ${PersonalInfo.lastName}  an ${PersonalInfo.headline}  Mobile No: ${PersonalInfo.mobNumber} Email:${PersonalInfo.email} lives in ${PersonalInfo.city}  Linkedin Profile ${PersonalInfo.linkedin} About ${PersonalInfo.about} `;\r\n    navigator.clipboard\r\n      .writeText(textToCopy)\r\n      .then(() => {\r\n        toast.success(\"Task Copied\", { position: \"bottom-left\" });\r\n        const timeoutId = setTimeout(() => setCopied(false), 2000);\r\n        return () => clearTimeout(timeoutId);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to copy text:\", error);\r\n      });\r\n  };\r\n  return (\r\n    <div\r\n      style={{ backgroundColor: currentPalette.primary }}\r\n      className=\"grid grid-cols-10 ps-3 px-1 pb-1  shadow-2xl rounded-xl lg:rounded-2xl  gap-1  \"\r\n    >\r\n      <div className=\"lg:col-span-2 md:col-span-2 col-span-3  pt-3   \">\r\n        <ProfileImageSection />\r\n      </div>\r\n      <div className=\"lg:col-span-4  md:col-span-4 col-span-6 ms-3 \">\r\n        <div className=\"flex flex-col  p-2 gap-1 justify-center items-start\">\r\n          <div className=\"flex gap-1  items-center\">\r\n            <div className=\"lg:text-2xl text-md capitalize font-bold\">\r\n              {(PersonalInfo?.firstName || \"First \") + \" \"}\r\n              {PersonalInfo?.lastName || \"Last \"}\r\n            </div>{\" \"}\r\n            <div className=\"text-md font-bold capitalize mt-1\">\r\n              {PersonalInfo?.gender === \"Male\"\r\n                ? ProfileCardLogos?.male\r\n                : PersonalInfo?.gender === \"Female\"\r\n                ? ProfileCardLogos?.female\r\n                : PersonalInfo?.gender === \"Other\"\r\n                ? ProfileCardLogos?.other\r\n                : ProfileCardLogos?.male}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex gap-1 items-center lg:font-semibold\">\r\n            <span className=\"lg:text-md text-xs -mt-1  \">\r\n              {PersonalInfo?.headline || \"Profession\"}{\" \"}\r\n            </span>\r\n          </div>\r\n          <div className=\"flex flex-col gap-1 mt-5  text-[11px] \">\r\n            <div className=\"flex gap-1  items-center  \">\r\n              {\" \"}\r\n              {ProfileCardLogos?.location}{\" \"}\r\n              <span>{PersonalInfo?.city || \"Loaction\"}</span>\r\n            </div>\r\n            <div className=\"flex gap-1   items-center  \">\r\n              {\" \"}\r\n              {ProfileCardLogos?.call}{\" \"}\r\n              <span>{PersonalInfo?.mobNumber || \"+(91)-00000 00000\"}</span>\r\n            </div>\r\n\r\n            <div className=\"flex gap-1  items-center  \">\r\n              {\" \"}\r\n              {ProfileCardLogos?.email}{\" \"}\r\n              <span>{PersonalInfo?.email || \"xxx@gmail.com\"}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-span-1   lg:p-1 \">\r\n        <div\r\n          // style={{ backgroundColor: currentPalette.accent }}\r\n          className={`flex lg:rounded-2xl rounded-lg h-full py-2   flex-col items-center justify-between  gap-2 pe-1   bg-[${currentPalette.accent}]`}\r\n        >\r\n          <div className=\"flex flex-col justify-start gap-2 \">\r\n            <PersonalInfoModal />\r\n            <Tooltip label={copied ? \"Copied!\" : \"Copy Info\"}>\r\n              <Button\r\n                size=\"sm\"\r\n                title=\"Copy Personal information\"\r\n                onClick={handleCopy}\r\n              >\r\n                {copied ? <FaCopy /> : <FaRegCopy />}\r\n              </Button>\r\n            </Tooltip>\r\n          </div>\r\n          <div></div>\r\n\r\n          <div className=\"block lg:hidden md:hidden xl:hidden\">\r\n            <Popover>\r\n              <PopoverTrigger>\r\n                <Button title=\"Menu\" size=\"sm\">\r\n                  <GrAppsRounded />\r\n                </Button>\r\n              </PopoverTrigger>\r\n\r\n              <PopoverContent backgroundColor={currentPalette?.primary}>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverHeader>Navigation</PopoverHeader>\r\n                <PopoverBody>\r\n                  <Navigation />\r\n                </PopoverBody>\r\n              </PopoverContent>\r\n            </Popover>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* // will come back here */}\r\n      <div className=\"col-span-3 lg:block md:block hidden p-1  \">\r\n        <div\r\n          style={{ backgroundColor: currentPalette.accent }}\r\n          className=\"flex flex-wrap justify-center items-center shadow-2xl rounded-2xl p-3  gap-3 \"\r\n        >\r\n          {ProfileLinkLogo?.map((data) => {\r\n            return (\r\n              <div\r\n                className=\"flex flex-col md:gap-1 items-center\"\r\n                key={data.name}\r\n              >\r\n                <NavLink\r\n                  title={data?.name}\r\n                  to={`/${data?.name}`}\r\n                  key={data?.name}\r\n                  style={{ backgroundColor: currentPalette.accent2 }}\r\n                  className=\"border shadow-md hover:shadow-2xl rounded-lg transform hover:scale-110 transition-transform duration-300 p-1\"\r\n                >\r\n                  <Tooltip label={data?.name}>\r\n                    <span className=\"lg:text-3xl text-xl\">{data?.logo}</span>\r\n                  </Tooltip>\r\n                </NavLink>\r\n                <span className=\"text-[7px] capitalize\">{data?.name}</span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import { FcApproval, FcBullish, FcTodoList } from \"react-icons/fc\";\r\n\r\nconst DeskTopModalData = [\r\n  {\r\n    id: \"1\",\r\n    ModalTitle: \"Add a task\",\r\n    ModalLogo: <FcTodoList />,\r\n    ModalBody: \"TaskModal\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    ModalTitle: \"Add a Achivement\",\r\n    ModalLogo: <FcBullish />,\r\n    ModalBody: \"AchivementModal\",\r\n  },\r\n\r\n  {\r\n    id: \"4\",\r\n    ModalTitle: \"Add a project\",\r\n    ModalLogo: <FcApproval />,\r\n    ModalBody: \"PostModal\",\r\n  },\r\n];\r\n\r\nexport const MobileModalData = [\r\n  {\r\n    id: \"1\",\r\n    ModalTitle: \"Add a task\",\r\n    ModalLogo: <FcTodoList />,\r\n    ModalBody: \"TaskModal\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    ModalTitle: \"Add a Achivement\",\r\n    ModalLogo: <FcBullish />,\r\n    ModalBody: \"AchivementModal\",\r\n  },\r\n];\r\nexport default DeskTopModalData;\r\n","import React, { useState, lazy, Suspense } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n  Tooltip,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { MdDarkMode, MdOutlineLightMode } from \"react-icons/md\";\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo.js\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AwardModalBody = lazy(() => import(\"../ModalBodys/AwardModalBody.js\"));\r\nconst LazyTaskModalBody = lazy(() => import(\"../ModalBodys/TaskModalBody.js\"));\r\nconst LazyProjectModalBody = lazy(() =>\r\n  import(\"../ModalBodys/ProjectModalBody.js\")\r\n);\r\nconst DashboardModal = ({ id, Title, Logo, Body, Type, listState }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [createClicked, setCreateClicked] = useState(false);\r\n  const [updateClicked, setUpdateClicked] = useState(false);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n\r\n  const currentMode = useSelector((state) => state.themes.currentPalette);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const [Mode, setMode] = useState(currentMode);\r\n\r\n  const handleModalBg = () => {\r\n    setMode(Mode === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    setCreateClicked(true);\r\n    handleTimeout();\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    setUpdateClicked(true);\r\n    handleTimeout();\r\n  };\r\n\r\n  const handleTimeout = () => {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    const newTimeoutId = setTimeout(() => {\r\n      onClose();\r\n      setTimeoutId(null);\r\n    }, 100);\r\n    setTimeoutId(newTimeoutId);\r\n  };\r\n\r\n  const isTaskCreating = useSelector((state) => state.task.isTaskCreating);\r\n\r\n  return (\r\n    <div className=\"sub-topics gap-2 flex justify-center items-center \">\r\n      {Type === \"list\" ? (\r\n        <Tooltip label=\"edit\">\r\n          <Button\r\n            title=\"Edit Task\"\r\n            size={{ base: \"sm\", md: \"sm\", lg: \"sm\", sm: \"sm\" }}\r\n            type=\"submit\"\r\n            onClick={onOpen}\r\n            className=\"flex justify-end cursor-pointer transition duration-300 transform hover:scale-105\"\r\n          >\r\n            {ProfileCardLogos.edit}\r\n          </Button>\r\n        </Tooltip>\r\n      ) : (\r\n        <Button\r\n          title=\"update\"\r\n          onClick={onOpen}\r\n          color={currentMode === \"dark\" ? \"white\" : \"black\"}\r\n          backgroundColor={currentPalette.primary}\r\n          fontSize=\"sm\"\r\n          _hover={{\r\n            color: currentMode === \"dark\" ? \"black\" : \"white\",\r\n            backgroundColor: currentPalette.accent2,\r\n          }}\r\n          leftIcon={<span className=\"text-xl w-11\">{Logo}</span>}\r\n          variant=\"solid\"\r\n        >\r\n          <span className=\"text-xs\"> {Title}</span>\r\n        </Button>\r\n      )}\r\n\r\n      <Modal\r\n        colorScheme={currentPalette.colorScheme}\r\n        scrollBehavior=\"inside\"\r\n        size=\"xl\"\r\n        isCentered\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n        <ModalContent\r\n          borderRadius=\"1rem\"\r\n          backgroundColor={Mode === \"dark\" ? \"#121d24\" : \"white\"}\r\n          color={Mode === \"dark\" ? \"white\" : \"black\"}\r\n        >\r\n          <ModalHeader textTransform=\"capitalize\">\r\n            <div className=\"flex justify-between pe-9 items-center\">\r\n              {Title}\r\n              <Button title=\"theme mode\" size=\"xs\" onClick={handleModalBg}>\r\n                {Mode === \"dark\" ? <MdDarkMode /> : <MdOutlineLightMode />}\r\n              </Button>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <div>\r\n              {Body === \"TaskModal\" ? (\r\n                <Suspense\r\n                  fallback={\r\n                    <div className=\"flex justify-center h-full \">\r\n                      <Spinner />\r\n                    </div>\r\n                  }\r\n                >\r\n                  <LazyTaskModalBody\r\n                    Type=\"list\"\r\n                    setCreateClicked={setCreateClicked}\r\n                    createClicked={createClicked}\r\n                    updateClicked={updateClicked}\r\n                    setUpdateClicked={setUpdateClicked}\r\n                    listState={listState}\r\n                  />\r\n                </Suspense>\r\n              ) : Body === \"AchivementModal\" ? (\r\n                <>\r\n                  <AwardModalBody\r\n                    updateClicked={updateClicked}\r\n                    createClicked={createClicked}\r\n                    setUpdateClicked={setUpdateClicked}\r\n                    setCreateClicked={setCreateClicked}\r\n                    AwardState={null}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <LazyProjectModalBody\r\n                    updateClicked={updateClicked}\r\n                    createClicked={createClicked}\r\n                    setUpdateClicked={setUpdateClicked}\r\n                    setCreateClicked={setCreateClicked}\r\n                    ProjectState={null}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {Type === \"list\" ? (\r\n              <Button\r\n                title=\"update\"\r\n                size=\"sm\"\r\n                isLoading={isTaskCreating}\r\n                loadingText=\"Updating\"\r\n                colorScheme={currentPalette.colorScheme}\r\n                onClick={handleUpdate}\r\n              >\r\n                Update\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                title=\"create\"\r\n                size=\"sm\"\r\n                isLoading={isTaskCreating}\r\n                loadingText=\"Creating\"\r\n                colorScheme={currentPalette.colorScheme}\r\n                onClick={handleCreate}\r\n              >\r\n                Create\r\n              </Button>\r\n            )}\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardModal;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport useGetTask from \"./useGetTask\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setIsTaskDeleting } from \"../../Redux/Slices/TaskSlice\";\r\n\r\nconst useDeleteTask = () => {\r\n  const { getAllTask } = useGetTask();\r\n  const dispatch = useDispatch();\r\n  const deletTask = async (tid) => {\r\n    try {\r\n      dispatch(setIsTaskDeleting(true));\r\n      if (!tid) {\r\n        return toast.error(\"Please provide Id\");\r\n      }\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const { data } = await axios.delete(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/task/delete/${tid}`,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n      if (data.success) {\r\n        toast.success(data.message);\r\n        getAllTask();\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"something went wrong\");\r\n    } finally {\r\n      dispatch(setIsTaskDeleting(false));\r\n    }\r\n  };\r\n  return {\r\n    deletTask,\r\n  };\r\n};\r\n\r\nexport default useDeleteTask;\r\n","import {\r\n  Badge,\r\n  Button,\r\n  CircularProgress,\r\n  CircularProgressLabel,\r\n  Progress,\r\n  Spinner,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DashboardModal from \"./DashboardModal\";\r\nimport { MdDeleteOutline } from \"react-icons/md\";\r\nimport { FaCopy, FaRegCopy } from \"react-icons/fa\";\r\nimport { FcHighPriority, FcOk } from \"react-icons/fc\";\r\nimport toast from \"react-hot-toast\";\r\nimport useDeleteTask from \"../../Hooks/CustomTaskHooks/useDeleteTask\";\r\n\r\nconst TaskList = ({ item, index, deleteLoading }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const date = new Date(item.dueDate);\r\n  const formattedDate = date.toLocaleString(\"en-IN\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n    hour12: true,\r\n  });\r\n  const { deletTask } = useDeleteTask();\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const handleDelete = () => {\r\n    deletTask(item._id);\r\n  };\r\n  const handleCopy = () => {\r\n    setCopied(true);\r\n    const textToCopy = `Title: ${item.title},Description: ${item.description}`;\r\n    navigator.clipboard\r\n      .writeText(textToCopy)\r\n      .then(() => {\r\n        toast.success(\"Task Copied\", { position: \"bottom-left\" });\r\n        const timeoutId = setTimeout(() => setCopied(false), 2000);\r\n        return () => clearTimeout(timeoutId);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to copy text:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    // <div className=\"flex justify-center items-center \">\r\n    <div\r\n      key={item._id}\r\n      className=\"grid rounded-md p-1 h-30  px-2 shadow-lg grid-cols-10\"\r\n      style={{ backgroundColor: currentPalette.primary }}\r\n    >\r\n      <div className=\"lg:col-span-1 md:col-span-1 col-span-2\">\r\n        <div\r\n          className={`flex flex-col gap-1 h-full justify-center p-2 items-center `}\r\n        >\r\n          <CircularProgress\r\n            title=\"Progress-percentage\"\r\n            value={item.progressPercentage}\r\n            size={{ base: \"3.5rem\", md: \"4rem\", lg: \"4.2rem\", sm: \"3rem\" }}\r\n            color=\"green.400\"\r\n          >\r\n            <CircularProgressLabel>\r\n              {item.progressPercentage}%\r\n            </CircularProgressLabel>\r\n          </CircularProgress>\r\n          <div className=\"block  ms-2 lg:hidden md:hidden\">\r\n            <Badge\r\n              fontSize=\"xx-small\"\r\n              textTransform=\"capitalize\"\r\n              colorScheme={\r\n                item.taskPriority === \"medium\"\r\n                  ? \"yellow\"\r\n                  : item.taskPriority === \"high\"\r\n                  ? \"red\"\r\n                  : \"green\"\r\n              }\r\n            >\r\n              {item.taskPriority === \"medium\"\r\n                ? \"Mid Priority\"\r\n                : item.taskPriority === \"high\"\r\n                ? \"High Priority\"\r\n                : \"Low Priority\"}\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\" lg:col-span-7 md:col-span-6  col-span-7  lg:px-3 px-1 \">\r\n        <div className=\"flex gap-1  justify-center p-2 flex-col\">\r\n          <div className=\"flex gap-2 justify-between items-center \">\r\n            <div className=\"flex gap-2 items-center\">\r\n              <b className=\"lg:text-lg  text-md\">{index + 1}.</b>\r\n              <div className=\" rounded-lg flex gap-1 items-center justify-between lg:text-lg  text-sm capitalize font-semibold \">\r\n                {item.title}\r\n                {item.progressPercentage === 100 ? (\r\n                  <FcOk />\r\n                ) : (\r\n                  <FcHighPriority />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col gap-1   justify-start\">\r\n            <div className=\"text-xs min-h-6 lg:p-1 font-light capitalize\">\r\n              {item.description}\r\n            </div>\r\n\r\n            <div className=\"block lg:hidden md:hidden xl:hidden\">\r\n              <span className=\"text-xs\">{formattedDate}</span>\r\n            </div>\r\n\r\n            <div className=\" mt-1 hidden lg:block \">\r\n              <Progress\r\n                value={item.progressPercentage || 5}\r\n                size=\"sm\"\r\n                borderRadius=\"1rem\"\r\n                colorScheme=\"blue\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"lg:col-span-2 md:col-span-3  lg:block md:block col-span-1  \">\r\n        <div className=\"flex flex-col h-full items-end justify-center  lg:justify-start md:justify-start xl:justify-start   p-1  gap-2\">\r\n          <div className=\"hidden lg:block md:block xl:block\">\r\n            <div className=\"flex gap-1 \">\r\n              <Tooltip\r\n                colorScheme={currentPalette.colorScheme}\r\n                label={\r\n                  item.taskPriority === \"medium\"\r\n                    ? \"Medium priority\"\r\n                    : item.taskPriority === \"high\"\r\n                    ? \"High Priority\"\r\n                    : \"Low Priority\"\r\n                }\r\n              >\r\n                <div className=\"hover:cursor-pointer\">\r\n                  <div className=\" items-center flex\">\r\n                    <Badge\r\n                      textTransform=\"capitalize\"\r\n                      colorScheme={\r\n                        item.taskPriority === \"medium\"\r\n                          ? \"yellow\"\r\n                          : item.taskPriority === \"high\"\r\n                          ? \"red\"\r\n                          : \"green\"\r\n                      }\r\n                    >\r\n                      {item.taskPriority === \"medium\"\r\n                        ? \"Mid Priority\"\r\n                        : item.taskPriority === \"high\"\r\n                        ? \"High Priority\"\r\n                        : \"Low Priority\"}\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n              </Tooltip>\r\n              {item.progressPercentage === 100 ? (\r\n                <Badge textTransform=\"capitalize\" colorScheme=\"green\">\r\n                  Completed\r\n                </Badge>\r\n              ) : (\r\n                <Badge textTransform=\"capitalize\" colorScheme=\"red\">\r\n                  Due\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex gap-1   flex-col-reverse md:flex-row lg:flex-row    justify-center lg:justify-start md:justify-start xl:justify-start  items-end\">\r\n            <Tooltip label=\"Delete\">\r\n              <Button\r\n                title=\"Delete Task\"\r\n                size={{ base: \"sm\", md: \"sm\", lg: \"sm\", sm: \"sm\" }}\r\n                isLoading={deleteLoading}\r\n                onClick={handleDelete}\r\n                color=\"red\"\r\n                variant=\"outline\"\r\n              >\r\n                <MdDeleteOutline />\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip label={copied ? \"Copied!\" : \"Copy\"}>\r\n              <Button\r\n                title=\"Copy Task\"\r\n                size={{ base: \"sm\", md: \"sm\", lg: \"sm\", sm: \"sm\" }}\r\n                variant=\"outline\"\r\n                onClick={handleCopy}\r\n              >\r\n                {copied ? <FaCopy /> : <FaRegCopy />}\r\n              </Button>\r\n            </Tooltip>\r\n\r\n            <DashboardModal\r\n              listState={item}\r\n              Title=\"Update Task\"\r\n              Body=\"TaskModal\"\r\n              Type=\"list\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"hidden lg:block md:block xl:block\">\r\n            <div className=\"  flex justify-end rounded-sm text-[9px] font-semibold\">\r\n              <div fontSize=\"x-small\">{formattedDate}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","export const FilterLables = [\r\n  {\r\n    id: \"All\",\r\n    label: \"All\",\r\n    filterType: \"All\",\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"high\",\r\n    filterType: \"priority\",\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"medium\",\r\n    filterType: \"priority\",\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"low\",\r\n    filterType: \"priority\",\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"completed\",\r\n    filterType: \"progress\",\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"due\",\r\n    filterType: \"progress\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport {\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatGroup,\r\n  Progress,\r\n} from \"@chakra-ui/react\";\r\nimport { FcBullish } from \"react-icons/fc\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileOverview from \"./ProfileOverview\";\r\nimport useGetStats from \"../../Hooks/CustomUserInfoHooks/useGetStats\";\r\nconst Statstics = () => {\r\n  useGetStats();\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const UserStats = useSelector((store) => store.user.userStats);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-2  rounded-3xl\">\r\n        <ProfileOverview />\r\n        <div className=\"mt-7 p-2\">\r\n          <div className=\"flex gap-2 items-center\">\r\n            <FcBullish />\r\n            <b>Statstics</b>\r\n          </div>\r\n          <div\r\n            className=\"mt-3 p-2 ps-5\r\n            rounded-xl \"\r\n            style={{ backgroundColor: currentPalette.accent }}\r\n          >\r\n            <StatGroup>\r\n              <Stat>\r\n                <StatLabel>Completed</StatLabel>\r\n                <StatNumber>{UserStats?.totalCompletedTasks || 0}</StatNumber>\r\n              </Stat>\r\n\r\n              <Stat>\r\n                <StatLabel>Due</StatLabel>\r\n                <StatNumber>{UserStats.totalDueTasks || 0}</StatNumber>\r\n              </Stat>\r\n            </StatGroup>\r\n          </div>\r\n          <div\r\n            className=\"mt-3 p-2 flex gap-2 flex-col\r\n            rounded-xl \"\r\n            style={{ backgroundColor: currentPalette.accent }}\r\n          >\r\n            <p className=\"text-sm capitalize\">\r\n              precise Task Completion -{\" \"}\r\n              <b className=\"text-xs\">\r\n                ({UserStats.avgCompletionRate?.toFixed(1)}%)\r\n              </b>\r\n            </p>\r\n            <Progress\r\n              value={UserStats.avgCompletionRate || 0}\r\n              size=\"sm\"\r\n              borderRadius=\"1rem\"\r\n              colorScheme=\"blue\"\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className=\"mt-3 p-2 flex gap-2 flex-col\r\n            rounded-xl \"\r\n            style={{ backgroundColor: currentPalette.accent }}\r\n          >\r\n            <p className=\"text-sm capitalize\">\r\n              Task Completion -\r\n              <b className=\"text-xs\">\r\n                ({UserStats.overallCompletionPercentage?.toFixed(1)}%)\r\n              </b>\r\n            </p>\r\n            <Progress\r\n              value={UserStats.overallCompletionPercentage || 0}\r\n              size=\"sm\"\r\n              borderRadius=\"1rem\"\r\n              colorScheme=\"blue\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statstics;\r\n","import React, { useState } from \"react\";\r\nimport MainHeader from \"./MainHeader.js\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ProfileCard from \"./ProfileCard.js\";\r\nimport ModalData, {\r\n  MobileModalData,\r\n} from \"../../Data/DashboardData/DashboardModelData.js\";\r\nimport DashboardModal from \"./DashboardModal.js\";\r\nimport EmptyList from \"./EmptyList.js\";\r\nimport TaskList from \"./TaskList.js\";\r\nimport { FilterLables } from \"../../Data/DashboardData/FilteringData.js\";\r\nimport Statstics from \"./Statstics.js\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst MainSection = () => {\r\n  const [activeFilter, setActiveFilter] = useState(null);\r\n  const [filteredData, setFilteredData] = useState(null);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const AllTaskData = useSelector((state) => state.task.allTaskData);\r\n  const DeleteLoading = useSelector((store) => store.task.isTaskDeleting);\r\n\r\n  const handleFilter = (item) => {\r\n    try {\r\n      setActiveFilter(item?.label === activeFilter ? null : item.label);\r\n      if (item.filterType === \"All\") {\r\n        setFilteredData(null);\r\n      } else if (item.filterType === \"priority\") {\r\n        const filterData = AllTaskData.filter(\r\n          (task) => task.taskPriority === item.label\r\n        );\r\n        setFilteredData(filterData);\r\n      } else {\r\n        if (item.label === \"completed\") {\r\n          const filterData = AllTaskData.filter(\r\n            (task) => task.progressPercentage === 100\r\n          );\r\n          setFilteredData(filterData);\r\n        } else {\r\n          const filterData = AllTaskData.filter(\r\n            (task) => task.progressPercentage < 100\r\n          );\r\n          setFilteredData(filterData);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Not Found\", { position: \"bottom-left\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"lg:col-span-11 md:col-span-11  col-span-12  p-3  \">\r\n      <MainHeader />\r\n      <div className=\"grid gap-6 lg:p-4  lg:mt-1 mt-2 grid-cols-10   \">\r\n        <div className=\"lg:col-span-7 md:col-span-7  col-span-10  mainsection   rounded-2xl  \">\r\n          <ProfileCard />\r\n          <div>\r\n            <div className=\"hidden lg:block md:block xl:block\">\r\n              <div className=\"sub-topics flex justify-center items-center md:gap-1 lg:gap-2 lg:m-3 m-2 md:ps-2\">\r\n                {ModalData?.map((data) => (\r\n                  <DashboardModal\r\n                    key={data.id}\r\n                    Title={data.ModalTitle}\r\n                    Logo={data.ModalLogo}\r\n                    Body={data.ModalBody}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"block lg:hidden md:hidden xl:hidden\">\r\n              <div className=\"sub-topics flex justify-center items-center gap-2 lg:m-3 m-2\">\r\n                {MobileModalData?.map((data) => (\r\n                  <DashboardModal\r\n                    key={data.id}\r\n                    Title={data.ModalTitle}\r\n                    Logo={data.ModalLogo}\r\n                    Body={data.ModalBody}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex lg:justify-between justify-center lg:mt-1 md:mt-1 mt-2 mb-2 \">\r\n              <h6 className=\"my-2 lg:text-sm text-xs hidden lg:block\">\r\n                My Task <b> ({AllTaskData?.length || 0})</b>\r\n              </h6>\r\n              <div className=\"flex gap-1 items-center justify-center\">\r\n                {FilterLables.map((item) => (\r\n                  <button\r\n                    title={`filter button ${item}`}\r\n                    key={item.id}\r\n                    onClick={() => handleFilter(item)}\r\n                    className={`border hover:border-blue-500 rounded-md  lg:px-3 px-2 p-1 text-xs ${\r\n                      item.label === activeFilter\r\n                        ? \"bg-blue-500 text-white\"\r\n                        : \"\"\r\n                    }`}\r\n                  >\r\n                    {item.label}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex  flex-col gap-2 lg:p-2 p-1 \">\r\n              {!filteredData ? (\r\n                <>\r\n                  {!AllTaskData?.length ? (\r\n                    <EmptyList message=\"No Task Found! Please Create One\" />\r\n                  ) : (\r\n                    <>\r\n                      {AllTaskData\r\n                        ? [...AllTaskData]\r\n                            .reverse()\r\n                            .map((item, i) => (\r\n                              <TaskList key={i} item={item} index={i} />\r\n                            ))\r\n                        : null}\r\n                    </>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {filteredData.length === 0 ? (\r\n                    <div className=\" flex  justify-center items-center p-5\">\r\n                      <EmptyList message=\"No Task Found!\" />\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {filteredData.map((item, i) => (\r\n                        <TaskList\r\n                          deleteLoading={DeleteLoading}\r\n                          key={i}\r\n                          item={item}\r\n                          index={i}\r\n                        />\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ backgroundColor: currentPalette.primary }}\r\n          className=\"col-span-3  hidden lg:block md:block staticsection rounded-3xl \"\r\n        >\r\n          <Statstics />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainSection;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  setUserProfileCompletnessPercentage,\r\n  setUserProfileMissing,\r\n} from \"../../Redux/Slices/UserSlice\";\r\n\r\nconst useGetProfileCompletness = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const calculatePercentage = (completeness, maxCompleteness) => {\r\n    return (completeness / maxCompleteness) * 100;\r\n  };\r\n\r\n  const getProfileCompletness = async (userId) => {\r\n    try {\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n\r\n      if (!userId || !token) {\r\n        toast.error(\"Please Log In\", { position: \"bottom-left\" });\r\n        navigate(\"/\");\r\n      }\r\n      const { data } = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/user/stats/${userId}`,\r\n        { headers: { Authorization: token } }\r\n      );\r\n      if (data.success) {\r\n        const profilePercentage = calculatePercentage(\r\n          data?.profileStat?.completeness,\r\n          data?.profileStat?.outOf\r\n        );\r\n        dispatch(setUserProfileCompletnessPercentage(profilePercentage));\r\n        dispatch(setUserProfileMissing(data.profileStat.incompleteData));\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\", { position: \"bottom-left\" });\r\n    }\r\n  };\r\n\r\n  return {\r\n    getProfileCompletness,\r\n  };\r\n};\r\n\r\nexport default useGetProfileCompletness;\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../Layout/Layout.js\";\r\nimport SideBar from \"./SideBar.js\";\r\nimport MainSection from \"./MainSection.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useGetTask from \"../../Hooks/CustomTaskHooks/useGetTask.js\";\r\nimport useGetUserPersonalInfo from \"../../Hooks/CustomUserInfoHooks/useGetUserPersonalInfo.js\";\r\nimport useGetProfileCompletness from \"../../Hooks/CustomUserInfoHooks/useGetProfileCompletness.js\";\r\n\r\nconst Dashboard = () => {\r\n  const { getAllTask } = useGetTask();\r\n  const { getPersonalInfo } = useGetUserPersonalInfo();\r\n  const { getProfileCompletness } = useGetProfileCompletness();\r\n  const { userId } = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  useEffect(() => {\r\n    getPersonalInfo();\r\n    getAllTask();\r\n    getProfileCompletness(userId);\r\n  }, []);\r\n  // const memoizedGetAllTask = useMemo(() => getAllTask, [getAllTask]);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  return (\r\n    <Layout title=\"Pro-Dash \">\r\n      <div\r\n        style={{ backgroundColor: currentPalette.secondary }}\r\n        className=\"grid grid-cols-12 text-white min-h-svh\"\r\n      >\r\n        <SideBar />\r\n        <MainSection />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","var _ellipse, _circle, _circle2, _circle3, _circle4, _path, _path2, _path3, _path4, _path5, _circle5, _path6, _path7, _path8, _path9, _polygon, _path10, _circle6, _circle7, _circle8, _circle9;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEmptyList(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 797.5,\n    height: 834.5,\n    viewBox: \"0 0 797.5 834.5\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"void\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 308.5,\n    cy: 780,\n    rx: 308.5,\n    ry: 54.5,\n    fill: \"#3f3d56\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 496,\n    cy: 301.5,\n    r: 301.5,\n    fill: \"#3f3d56\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 496,\n    cy: 301.5,\n    r: 248.89787,\n    opacity: 0.05\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 496,\n    cy: 301.5,\n    r: 203.99362,\n    opacity: 0.05\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 496,\n    cy: 301.5,\n    r: 146.25957,\n    opacity: 0.05\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M398.42029,361.23224s-23.70394,66.72221-13.16886,90.42615,27.21564,46.52995,27.21564,46.52995S406.3216,365.62186,398.42029,361.23224Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#d0cde1\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M398.42029,361.23224s-23.70394,66.72221-13.16886,90.42615,27.21564,46.52995,27.21564,46.52995S406.3216,365.62186,398.42029,361.23224Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    opacity: 0.1\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415.10084,515.74682s-1.75585,16.68055-2.63377,17.55847.87792,2.63377,0,5.26754-1.75585,6.14547,0,7.02339-9.65716,78.13521-9.65716,78.13521-28.09356,36.8728-16.68055,94.81576l3.51169,58.82089s27.21564,1.75585,27.21564-7.90132c0,0-1.75585-11.413-1.75585-16.68055s4.38962-5.26754,1.75585-7.90131-2.63377-4.38962-2.63377-4.38962,4.38961-3.51169,3.51169-4.38962,7.90131-63.2105,7.90131-63.2105,9.65716-9.65716,9.65716-14.92471v-5.26754s4.38962-11.413,4.38962-12.29093,23.70394-54.43127,23.70394-54.43127l9.65716,38.62864,10.53509,55.3092s5.26754,50.04165,15.80262,69.356c0,0,18.4364,63.21051,18.4364,61.45466s30.72733-6.14547,29.84941-14.04678-18.4364-118.5197-18.4364-118.5197L533.62054,513.991Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#2f2e41\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M391.3969,772.97846s-23.70394,46.53-7.90131,48.2858,21.94809,1.75585,28.97148-5.26754c3.83968-3.83968,11.61528-8.99134,17.87566-12.87285a23.117,23.117,0,0,0,10.96893-21.98175c-.463-4.29531-2.06792-7.83444-6.01858-8.16366-10.53508-.87792-22.826-10.53508-22.826-10.53508Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#2f2e41\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M522.20753,807.21748s-23.70394,46.53-7.90131,48.28581,21.94809,1.75584,28.97148-5.26754c3.83968-3.83969,11.61528-8.99134,17.87566-12.87285a23.117,23.117,0,0,0,10.96893-21.98175c-.463-4.29531-2.06792-7.83444-6.01857-8.16367-10.53509-.87792-22.826-10.53508-22.826-10.53508Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#2f2e41\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 295.90488,\n    cy: 215.43252,\n    r: 36.90462,\n    fill: \"#ffb8b8\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M473.43048,260.30832S447.07,308.81154,444.9612,308.81154,492.41,324.62781,492.41,324.62781s13.70743-46.39439,15.81626-50.61206Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#ffb8b8\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M513.86726,313.3854s-52.67543-28.97148-57.943-28.09356-61.45466,50.04166-60.57673,70.2339,7.90131,53.55335,7.90131,53.55335,2.63377,93.05991,7.90131,93.93783-.87792,16.68055.87793,16.68055,122.90931,0,123.78724-2.63377S513.86726,313.3854,513.86726,313.3854Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#d0cde1\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M543.2777,521.89228s16.68055,50.91958,2.63377,49.16373-20.19224-43.89619-20.19224-43.89619Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#ffb8b8\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M498.50359,310.31267s-32.48318,7.02339-27.21563,50.91957,14.9247,87.79237,14.9247,87.79237l32.48318,71.11182,3.51169,13.16886,23.70394-6.14547L528.353,425.32067s-6.14547-108.86253-14.04678-112.37423A33.99966,33.99966,0,0,0,498.50359,310.31267Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#d0cde1\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"277.5 414.958 317.885 486.947 283.86 411.09 277.5 414.958\",\n    opacity: 0.1\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M533.896,237.31585l.122-2.82012,5.6101,1.39632a6.26971,6.26971,0,0,0-2.5138-4.61513l5.97581-.33413a64.47667,64.47667,0,0,0-43.1245-26.65136c-12.92583-1.87346-27.31837.83756-36.182,10.43045-4.29926,4.653-7.00067,10.57018-8.92232,16.60685-3.53926,11.11821-4.26038,24.3719,3.11964,33.40938,7.5006,9.18513,20.602,10.98439,32.40592,12.12114,4.15328.4,8.50581.77216,12.35457-.83928a29.721,29.721,0,0,0-1.6539-13.03688,8.68665,8.68665,0,0,1-.87879-4.15246c.5247-3.51164,5.20884-4.39635,8.72762-3.9219s7.74984,1.20031,10.062-1.49432c1.59261-1.85609,1.49867-4.559,1.70967-6.99575C521.28248,239.785,533.83587,238.70653,533.896,237.31585Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#2f2e41\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 559,\n    cy: 744.5,\n    r: 43,\n    fill: \"#6c63ff\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 54,\n    cy: 729.5,\n    r: 43,\n    fill: \"#6c63ff\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 54,\n    cy: 672.5,\n    r: 31,\n    fill: \"#6c63ff\"\n  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 54,\n    cy: 624.5,\n    r: 22,\n    fill: \"#6c63ff\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEmptyList);\nexport default __webpack_public_path__ + \"static/media/EmptyList.c788c5714e75190572683f329d0c04fa.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport emptyList from \"../../Assets/DashboardAssets/TaskListAsset/EmptyList.svg\";\r\nconst EmptyList = ({ message }) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-2 justify-center p-5 items-center\">\r\n      <img className=\"h-20 w-20\" src={emptyList} alt=\"empty task  banner\" />\r\n      <span className=\"text-sm font-light\">{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyList;\r\n","import React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n  Tooltip,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { MdDarkMode, MdOutlineLightMode } from \"react-icons/md\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo.js\";\r\nconst LazyUserInfoModal = lazy(() => import(\"../ModalBodys/UserInfoModal.js\"));\r\nconst PersonalInfoModal = () => {\r\n  const [personalInfoButtonClicked, setPersonalInfoButtonClicked] =\r\n    useState(false);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const currentMode = useSelector((state) => state.themes.currentPalette);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const [Mode, setMode] = useState(currentMode);\r\n  const isLoading = useSelector((state) => state.user.isLoading);\r\n  const handleModalBg = () => {\r\n    setMode(Mode === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    setPersonalInfoButtonClicked(true);\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    const newTimeoutId = setTimeout(() => {\r\n      onClose();\r\n      setTimeoutId(null);\r\n    }, 200);\r\n    setTimeoutId(newTimeoutId);\r\n  };\r\n  return (\r\n    <div className=\"sub-topics gap-2  flex justify-center items-center \">\r\n      <Tooltip label=\"Edit Info\">\r\n        <Button\r\n          size=\"sm\"\r\n          title=\"Edit Personal Info\"\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            onOpen();\r\n          }}\r\n          className=\"flex justify-end cursor-pointer transition duration-300 transform hover:scale-110\"\r\n        >\r\n          {ProfileCardLogos.edit}\r\n        </Button>\r\n      </Tooltip>\r\n      <Modal\r\n        colorScheme={currentPalette.colorScheme}\r\n        scrollBehavior=\"inside\"\r\n        size=\"xl\"\r\n        isCentered\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n        <ModalContent\r\n          borderRadius=\"1rem\"\r\n          backgroundColor={`${Mode === \"dark\" ? \"#121d24\" : \"white\"}`}\r\n          color={`${Mode === \"dark\" ? \"white\" : \"black\"}`}\r\n        >\r\n          <ModalHeader textTransform=\"capitalize\">\r\n            <div className=\"flex justify-between pe-9 items-center\">\r\n              Personal Information\r\n              <Button title=\"theme mode\" size=\"xs\" onClick={handleModalBg}>\r\n                {Mode === \"dark\" ? <MdDarkMode /> : <MdOutlineLightMode />}\r\n              </Button>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"flex justify-center h-full \">\r\n                  <Spinner />\r\n                </div>\r\n              }\r\n            >\r\n              <LazyUserInfoModal\r\n                setPersonalInfoButtonClicked={setPersonalInfoButtonClicked}\r\n                personalInfoButtonClicked={personalInfoButtonClicked}\r\n              />\r\n            </Suspense>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              title=\"create\"\r\n              onClick={handleCreate}\r\n              size=\"sm\"\r\n              isLoading={isLoading}\r\n              loadingText=\"Please wait\"\r\n              colorScheme={currentPalette.colorScheme}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default PersonalInfoModal;\r\n","import toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport uploadFile from \"../../Utils/ImageUploader\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserPersonalInfo } from \"../../Redux/Slices/UserSlice\";\r\n\r\nconst useManagePersonalPhoto = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const PersonalInfo = useSelector((store) => store.user.userPersonalInfo);\r\n  const managePersonalPhoto = async (photo) => {\r\n    try {\r\n      if (!PersonalInfo.firstName) {\r\n        return toast.error(\"Please fill the details first\", {\r\n          position: \"bottom-left\",\r\n        });\r\n      }\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const uid = JSON.parse(localStorage.getItem(\"user\"))?.userId;\r\n      if (!uid) {\r\n        toast.error(\"Please Log In\", { position: \"bottom-left\" });\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      if (!photo) return;\r\n      const photoUrl = await uploadFile(photo, \"personal\");\r\n      const { data } = await axios.put(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/info/photo/${uid}`,\r\n        { photoUrl },\r\n        { headers: { Authorization: token } }\r\n      );\r\n      if (data.success) {\r\n        toast.success(data.message, { position: \"bottom-left\" });\r\n        dispatch(setUserPersonalInfo(data.updatedProfile));\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\", { position: \"bottom-left\" });\r\n    }\r\n  };\r\n  return {\r\n    managePersonalPhoto,\r\n  };\r\n};\r\n\r\nexport default useManagePersonalPhoto;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MdDarkMode, MdOutlineLightMode } from \"react-icons/md\";\r\nimport { FcCancel, FcLandscape } from \"react-icons/fc\";\r\nimport useManagePersonalPhoto from \"../../Hooks/CustomUserInfoHooks/useManagePersonalPhoto\";\r\nimport EmptyImage from \"../../Assets/ErrorAssets/ImageNotFound.png\";\r\nconst ProfilePhotoModal = ({ prevState }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const { managePersonalPhoto } = useManagePersonalPhoto();\r\n  const currentMode = useSelector((state) => state.themes.currentPalette);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const fileInputRef = useRef(null);\r\n  const [Mode, setMode] = useState(currentMode);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n  const handleModalBg = () => {\r\n    setMode(Mode === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n  const [photo, setPhoto] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const handlePhotoChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setPhoto(file);\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleIconClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleClearPhoto = () => {\r\n    setPhoto(null);\r\n    setPreview(\"\");\r\n    fileInputRef.current.value = \"\";\r\n  };\r\n  useEffect(() => {\r\n    if (prevState) {\r\n      setPreview(prevState);\r\n    }\r\n  }, [prevState]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (photo) {\r\n      managePersonalPhoto(photo);\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n      const newTimeoutId = setTimeout(() => {\r\n        onClose();\r\n        setTimeoutId(null);\r\n      }, 200);\r\n      setTimeoutId(newTimeoutId);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Tooltip label=\"Edit Photo\">\r\n        <button\r\n          size=\"xs\"\r\n          title=\"Edit photo\"\r\n          type=\"submit\"\r\n          onClick={onOpen}\r\n          className=\"flex justify-end cursor-pointer transition duration-300 transform hover:scale-110\"\r\n        >\r\n          {ProfileCardLogos.edit}\r\n        </button>\r\n      </Tooltip>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent\r\n          borderRadius=\"1rem\"\r\n          backgroundColor={`${Mode === \"dark\" ? \"#121d24\" : \"white\"}`}\r\n          color={`${Mode === \"dark\" ? \"white\" : \"black\"}`}\r\n        >\r\n          <ModalHeader textTransform=\"capitalize\">\r\n            <div className=\"flex justify-between pe-9 items-center\">\r\n              Change Photo\r\n              <Button title=\"Theme Mode\" size=\"xs\" onClick={handleModalBg}>\r\n                {Mode === \"dark\" ? <MdDarkMode /> : <MdOutlineLightMode />}\r\n              </Button>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <div className=\"border-2 border-dashed border-gray-500 rounded-xl h-96 w-full relative\">\r\n              {!preview && (\r\n                <Tooltip hasArrow label=\"Upload Image\">\r\n                  <div onClick={handleIconClick}>\r\n                    <FcLandscape\r\n                      className=\"text-6xl transition-transform duration-300 transform hover:scale-110\"\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        position: \"absolute\",\r\n                        top: \"50%\",\r\n                        left: \"50%\",\r\n                        transform: \"translate(-50%, -50%)\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              )}\r\n\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handlePhotoChange}\r\n                style={{ display: \"none\" }}\r\n              />\r\n              {preview && (\r\n                <div className=\"relative w-full h-full\">\r\n                  <div\r\n                    className=\"flex justify-center\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={preview || EmptyImage}\r\n                      alt=\"Preview\"\r\n                      className=\" rounded-xl h-full object-fill\"\r\n                    />\r\n                  </div>\r\n                  <Tooltip label=\"Clear Image\">\r\n                    <button\r\n                      title=\"clear photo\"\r\n                      className=\"absolute top-2 right-2 bg-gray-200 rounded-full p-1\"\r\n                      onClick={handleClearPhoto}\r\n                    >\r\n                      <FcCancel\r\n                        className=\"text-2xl\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    </button>\r\n                  </Tooltip>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              title=\"save\"\r\n              size=\"sm\"\r\n              colorScheme={currentPalette.colorScheme}\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePhotoModal;\r\n","import {\r\n  FaGooglePlusG,\r\n  FaFacebookF,\r\n  FaGithub,\r\n  FaLinkedinIn,\r\n} from \"react-icons/fa\";\r\n\r\nexport const LoginOptions = [\r\n  {\r\n    Name: \"Google\",\r\n    Logo: <FaGooglePlusG />,\r\n  },\r\n  {\r\n    Name: \"FaceBook\",\r\n    Logo: <FaFacebookF />,\r\n  },\r\n  {\r\n    Name: \"GitHub\",\r\n    Logo: <FaGithub />,\r\n  },\r\n  {\r\n    Name: \"Linkedin\",\r\n    Logo: <FaLinkedinIn />,\r\n  },\r\n];\r\n","import { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAllTask } from \"../../Redux/Slices/TaskSlice\";\r\n\r\nconst useGetTask = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const getAllTask = async () => {\r\n    try {\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n      if (!user || !token) {\r\n        toast.error(\"Please Log In\", { position: \"bottom-left\" });\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      const uid = user?.userId;\r\n      const { data } = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/task/mytask/${uid}`,\r\n        { headers: { Authorization: token } }\r\n      );\r\n\r\n      if (data.success) {\r\n        dispatch(setAllTask(data.tasks));\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Server Error\", { position: \"bottom-left \" });\r\n    }\r\n  };\r\n\r\n  return { getAllTask };\r\n};\r\n\r\nexport default useGetTask;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setUserPersonalInfo } from \"../../Redux/Slices/UserSlice\";\r\n\r\nconst useGetUserPersonalInfo = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const getPersonalInfo = async () => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const uid = user?.userId;\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      if (!token || !uid) {\r\n        toast.error(\"No user found\", { position: \"bottom-left\" });\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/info/${uid}`,\r\n        { headers: { Authorization: token } }\r\n      );\r\n\r\n      if (data.success) {\r\n        dispatch(setUserPersonalInfo(data.userInfo));\r\n      }\r\n    } catch (error) {\r\n      console.info(\"Error fetching user information:\");\r\n    }\r\n  };\r\n\r\n  return { getPersonalInfo };\r\n};\r\n\r\nexport default useGetUserPersonalInfo;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nconst uploadFile = async (asset, type) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", asset);\r\n\r\n  if (type === \"personal\") {\r\n    // Add background removal option\r\n    // data.append(\"background_removal\", \"auto:remove_background\");\r\n    data.append(\"upload_preset\", \"ProfileImage\");\r\n  } else {\r\n    data.append(\"upload_preset\", \"Pro-Dash\");\r\n  }\r\n\r\n  if (!asset) return;\r\n  try {\r\n    const res = await axios.post(\r\n      `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUDNAME}/image/upload`,\r\n      data\r\n    );\r\n    return res?.data?.secure_url;\r\n  } catch (error) {\r\n    toast.error(\"Error In Uploading \");\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default uploadFile;\r\n"],"names":["ProfileImageSection","PersonalInfo","useSelector","state","user","userPersonalInfo","userDetails","_jsxs","className","children","_jsx","ProfilePhotoModal","prevState","photoUrl","Avatar","size","base","md","lg","sm","name","firstName","lastName","userName","title","src","href","linkedin","target","IoLogoLinkedin","ProfileCard","copied","setCopied","useState","currentPalette","themes","palettes","style","backgroundColor","primary","gender","ProfileCardLogos","male","female","other","headline","location","city","call","mobNumber","email","concat","accent","PersonalInfoModal","Tooltip","label","Button","onClick","handleCopy","toast","error","position","textToCopy","about","navigator","clipboard","writeText","then","success","timeoutId","setTimeout","clearTimeout","catch","console","FaCopy","FaRegCopy","Popover","PopoverTrigger","GrAppsRounded","PopoverContent","PopoverArrow","PopoverCloseButton","PopoverHeader","PopoverBody","Navigation","ProfileLinkLogo","map","data","NavLink","to","accent2","logo","DeskTopModalData","id","ModalTitle","ModalLogo","FcTodoList","ModalBody","FcBullish","FcApproval","MobileModalData","AwardModalBody","lazy","LazyTaskModalBody","LazyProjectModalBody","_ref","Title","Logo","Body","Type","listState","isOpen","onOpen","onClose","useDisclosure","createClicked","setCreateClicked","updateClicked","setUpdateClicked","setTimeoutId","currentMode","Mode","setMode","handleTimeout","newTimeoutId","isTaskCreating","task","type","edit","color","fontSize","_hover","leftIcon","variant","Modal","colorScheme","scrollBehavior","isCentered","ModalContent","borderRadius","ModalHeader","textTransform","handleModalBg","MdDarkMode","MdOutlineLightMode","ModalCloseButton","Suspense","fallback","Spinner","_Fragment","AwardState","ProjectState","ModalFooter","isLoading","loadingText","handleUpdate","handleCreate","useDeleteTask","getAllTask","useGetTask","dispatch","useDispatch","deletTask","async","setIsTaskDeleting","tid","token","JSON","parse","localStorage","getItem","axios","delete","process","headers","Authorization","message","item","index","deleteLoading","formattedDate","Date","dueDate","toLocaleString","year","month","day","hour","minute","second","hour12","CircularProgress","value","progressPercentage","CircularProgressLabel","Badge","taskPriority","FcOk","FcHighPriority","description","Progress","handleDelete","_id","MdDeleteOutline","DashboardModal","FilterLables","filterType","Statstics","_UserStats$avgComplet","_UserStats$overallCom","useGetStats","UserStats","store","userStats","ProfileOverview","StatGroup","Stat","StatLabel","StatNumber","totalCompletedTasks","totalDueTasks","avgCompletionRate","toFixed","overallCompletionPercentage","MainSection","activeFilter","setActiveFilter","filteredData","setFilteredData","AllTaskData","allTaskData","DeleteLoading","isTaskDeleting","MainHeader","ModalData","length","filterData","filter","handleFilter","EmptyList","i","TaskList","reverse","useGetProfileCompletness","navigate","useNavigate","getProfileCompletness","userId","get","_data$profileStat","_data$profileStat2","profilePercentage","completeness","profileStat","maxCompleteness","outOf","setUserProfileCompletnessPercentage","setUserProfileMissing","incompleteData","calculatePercentage","Dashboard","getPersonalInfo","useGetUserPersonalInfo","useEffect","Layout","secondary","SideBar","emptyList","alt","LazyUserInfoModal","personalInfoButtonClicked","setPersonalInfoButtonClicked","useManagePersonalPhoto","managePersonalPhoto","_JSON$parse","uid","photo","uploadFile","put","setUserPersonalInfo","updatedProfile","fileInputRef","useRef","setPhoto","preview","setPreview","ModalOverlay","hasArrow","handleIconClick","current","click","FcLandscape","cursor","top","left","transform","ref","accept","onChange","e","file","files","reader","FileReader","onloadend","result","readAsDataURL","display","width","height","overflow","EmptyImage","handleClearPhoto","FcCancel","LoginOptions","Name","FaGooglePlusG","FaFacebookF","FaGithub","FaLinkedinIn","setAllTask","tasks","userInfo","info","asset","FormData","append","_res$data","res","post","secure_url"],"sourceRoot":""}