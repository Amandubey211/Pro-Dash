{"version":3,"file":"static/js/582.d4a98acb.chunk.js","mappings":"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","sources":["Components/DashBoardComponents/PersonalInfoModal.js","Hooks/CustomUserInfoHooks/useManagePersonalPhoto.js","Components/DashBoardComponents/ProfilePhotoModal.js","Components/PersonalComponent/PersonalInfoPage.js","Utils/ImageUploader.js"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n  Tooltip,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { MdDarkMode, MdOutlineLightMode } from \"react-icons/md\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo.js\";\r\nconst LazyUserInfoModal = lazy(() => import(\"../ModalBodys/UserInfoModal.js\"));\r\nconst PersonalInfoModal = () => {\r\n  const [personalInfoButtonClicked, setPersonalInfoButtonClicked] =\r\n    useState(false);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const currentMode = useSelector((state) => state.themes.currentPalette);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const [Mode, setMode] = useState(currentMode);\r\n  const isLoading = useSelector((state) => state.user.isLoading);\r\n  const handleModalBg = () => {\r\n    setMode(Mode === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    setPersonalInfoButtonClicked(true);\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    const newTimeoutId = setTimeout(() => {\r\n      onClose();\r\n      setTimeoutId(null);\r\n    }, 200);\r\n    setTimeoutId(newTimeoutId);\r\n  };\r\n  return (\r\n    <div className=\"sub-topics gap-2  flex justify-center items-center \">\r\n      <Tooltip label=\"Edit Info\">\r\n        <Button\r\n          size=\"sm\"\r\n          title=\"Edit Personal Info\"\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            onOpen();\r\n          }}\r\n          className=\"flex justify-end cursor-pointer transition duration-300 transform hover:scale-110\"\r\n        >\r\n          {ProfileCardLogos.edit}\r\n        </Button>\r\n      </Tooltip>\r\n      <Modal\r\n        colorScheme={currentPalette.colorScheme}\r\n        scrollBehavior=\"inside\"\r\n        size=\"xl\"\r\n        isCentered\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n        <ModalContent\r\n          borderRadius=\"1rem\"\r\n          backgroundColor={`${Mode === \"dark\" ? \"#121d24\" : \"white\"}`}\r\n          color={`${Mode === \"dark\" ? \"white\" : \"black\"}`}\r\n        >\r\n          <ModalHeader textTransform=\"capitalize\">\r\n            <div className=\"flex justify-between pe-9 items-center\">\r\n              Personal Information\r\n              <Button title=\"theme mode\" size=\"xs\" onClick={handleModalBg}>\r\n                {Mode === \"dark\" ? <MdDarkMode /> : <MdOutlineLightMode />}\r\n              </Button>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"flex justify-center h-full \">\r\n                  <Spinner />\r\n                </div>\r\n              }\r\n            >\r\n              <LazyUserInfoModal\r\n                setPersonalInfoButtonClicked={setPersonalInfoButtonClicked}\r\n                personalInfoButtonClicked={personalInfoButtonClicked}\r\n              />\r\n            </Suspense>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              title=\"create\"\r\n              onClick={handleCreate}\r\n              size=\"sm\"\r\n              isLoading={isLoading}\r\n              loadingText=\"Please wait\"\r\n              colorScheme={currentPalette.colorScheme}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default PersonalInfoModal;\r\n","import toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport uploadFile from \"../../Utils/ImageUploader\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserPersonalInfo } from \"../../Redux/Slices/UserSlice\";\r\n\r\nconst useManagePersonalPhoto = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const PersonalInfo = useSelector((store) => store.user.userPersonalInfo);\r\n  const managePersonalPhoto = async (photo) => {\r\n    try {\r\n      if (!PersonalInfo.firstName) {\r\n        return toast.error(\"Please fill the details first\", {\r\n          position: \"bottom-left\",\r\n        });\r\n      }\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const uid = JSON.parse(localStorage.getItem(\"user\"))?.userId;\r\n      if (!uid) {\r\n        toast.error(\"Please Log In\", { position: \"bottom-left\" });\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      if (!photo) return;\r\n      const photoUrl = await uploadFile(photo, \"personal\");\r\n      const { data } = await axios.put(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/info/photo/${uid}`,\r\n        { photoUrl },\r\n        { headers: { Authorization: token } }\r\n      );\r\n      if (data.success) {\r\n        toast.success(data.message, { position: \"bottom-left\" });\r\n        dispatch(setUserPersonalInfo(data.updatedProfile));\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\", { position: \"bottom-left\" });\r\n    }\r\n  };\r\n  return {\r\n    managePersonalPhoto,\r\n  };\r\n};\r\n\r\nexport default useManagePersonalPhoto;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MdDarkMode, MdOutlineLightMode } from \"react-icons/md\";\r\nimport { FcCancel, FcLandscape } from \"react-icons/fc\";\r\nimport useManagePersonalPhoto from \"../../Hooks/CustomUserInfoHooks/useManagePersonalPhoto\";\r\nimport EmptyImage from \"../../Assets/ErrorAssets/ImageNotFound.png\";\r\nconst ProfilePhotoModal = ({ prevState }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const { managePersonalPhoto } = useManagePersonalPhoto();\r\n  const currentMode = useSelector((state) => state.themes.currentPalette);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const fileInputRef = useRef(null);\r\n  const [Mode, setMode] = useState(currentMode);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n  const handleModalBg = () => {\r\n    setMode(Mode === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n  const [photo, setPhoto] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const handlePhotoChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setPhoto(file);\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleIconClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleClearPhoto = () => {\r\n    setPhoto(null);\r\n    setPreview(\"\");\r\n    fileInputRef.current.value = \"\";\r\n  };\r\n  useEffect(() => {\r\n    if (prevState) {\r\n      setPreview(prevState);\r\n    }\r\n  }, [prevState]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (photo) {\r\n      managePersonalPhoto(photo);\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n      const newTimeoutId = setTimeout(() => {\r\n        onClose();\r\n        setTimeoutId(null);\r\n      }, 200);\r\n      setTimeoutId(newTimeoutId);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Tooltip label=\"Edit Photo\">\r\n        <button\r\n          size=\"xs\"\r\n          title=\"Edit photo\"\r\n          type=\"submit\"\r\n          onClick={onOpen}\r\n          className=\"flex justify-end cursor-pointer transition duration-300 transform hover:scale-110\"\r\n        >\r\n          {ProfileCardLogos.edit}\r\n        </button>\r\n      </Tooltip>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent\r\n          borderRadius=\"1rem\"\r\n          backgroundColor={`${Mode === \"dark\" ? \"#121d24\" : \"white\"}`}\r\n          color={`${Mode === \"dark\" ? \"white\" : \"black\"}`}\r\n        >\r\n          <ModalHeader textTransform=\"capitalize\">\r\n            <div className=\"flex justify-between pe-9 items-center\">\r\n              Change Photo\r\n              <Button title=\"Theme Mode\" size=\"xs\" onClick={handleModalBg}>\r\n                {Mode === \"dark\" ? <MdDarkMode /> : <MdOutlineLightMode />}\r\n              </Button>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <div className=\"border-2 border-dashed border-gray-500 rounded-xl h-96 w-full relative\">\r\n              {!preview && (\r\n                <Tooltip hasArrow label=\"Upload Image\">\r\n                  <div onClick={handleIconClick}>\r\n                    <FcLandscape\r\n                      className=\"text-6xl transition-transform duration-300 transform hover:scale-110\"\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        position: \"absolute\",\r\n                        top: \"50%\",\r\n                        left: \"50%\",\r\n                        transform: \"translate(-50%, -50%)\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              )}\r\n\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handlePhotoChange}\r\n                style={{ display: \"none\" }}\r\n              />\r\n              {preview && (\r\n                <div className=\"relative w-full h-full\">\r\n                  <div\r\n                    className=\"flex justify-center\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={preview || EmptyImage}\r\n                      alt=\"Preview\"\r\n                      className=\" rounded-xl h-full object-fill\"\r\n                    />\r\n                  </div>\r\n                  <Tooltip label=\"Clear Image\">\r\n                    <button\r\n                      title=\"clear photo\"\r\n                      className=\"absolute top-2 right-2 bg-gray-200 rounded-full p-1\"\r\n                      onClick={handleClearPhoto}\r\n                    >\r\n                      <FcCancel\r\n                        className=\"text-2xl\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    </button>\r\n                  </Tooltip>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              title=\"save\"\r\n              size=\"sm\"\r\n              colorScheme={currentPalette.colorScheme}\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePhotoModal;\r\n","import React from \"react\";\r\nimport Layout from \"../../Layout/Layout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SideBar from \"../DashBoardComponents/SideBar\";\r\nimport MainHeader from \"../DashBoardComponents/MainHeader\";\r\nimport { Badge, Button } from \"@chakra-ui/react\";\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo\";\r\nimport PersonalInfoModal from \"../DashBoardComponents/PersonalInfoModal\";\r\nimport Navigation from \"../ResuableComponent/Navigation\";\r\nimport EmptyImage from \"../../Assets/ErrorAssets/ImageNotFound.png\";\r\nimport { IoLogoLinkedin } from \"react-icons/io5\";\r\nimport ProfilePhotoModal from \"../DashBoardComponents/ProfilePhotoModal\";\r\n\r\nconst PersonalInfoPage = () => {\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const PersonalInfo = useSelector((store) => store.user.userPersonalInfo);\r\n\r\n  return (\r\n    <Layout\r\n      title=\"Personal Info Page\"\r\n      keywords=\"personal,photo, mobileno, gender,linkedin link, intrests, info,data,seo,\"\r\n    >\r\n      <div\r\n        className=\"md:grid md:grid-cols-12 text-white min-h-svh\"\r\n        style={{ backgroundColor: currentPalette.secondary }}\r\n      >\r\n        <SideBar />\r\n        <div className=\"md:col-span-11 p-3\">\r\n          <MainHeader />\r\n          <div>\r\n            <Badge className=\"font-bold my-4 \">Personal Info</Badge>\r\n            <div className=\"grid gap-3 md:grid-cols-10 \">\r\n              <div className=\"md:col-span-3 relative\">\r\n                <div className=\"block  lg:hidden md:hidden xl:hidden\">\r\n                  <Navigation />\r\n                </div>\r\n                <div className=\"block lg:hidden xl:hidden\"></div>\r\n                <div className=\"flex lg:justify-start   justify-end mb-2\">\r\n                  <ProfilePhotoModal prevState={PersonalInfo?.photoUrl} />\r\n                </div>\r\n                <div className=\"flex flex-col gap-2 justify-center items-center\">\r\n                  <img\r\n                    className=\"h-52 rounded-md\"\r\n                    title=\"user Image\"\r\n                    src={PersonalInfo.photoUrl || EmptyImage}\r\n                    alt=\"Personal Image\"\r\n                  />\r\n\r\n                  <div className=\"absolute bottom-0 left-0 mb-2 ml-2\">\r\n                    <Button\r\n                      title=\"linkedin Link\"\r\n                      size=\"sm\"\r\n                      leftIcon={<IoLogoLinkedin className=\"text-xl\" />}\r\n                    >\r\n                      <a\r\n                        alt=\"social links\"\r\n                        target=\"_blank\"\r\n                        href={PersonalInfo.linkedin}\r\n                      >\r\n                        Linkedin\r\n                      </a>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                className=\"md:col-span-7 rounded-xl shadow-2xl lg:me-7 m-1 \"\r\n                style={{ backgroundColor: currentPalette.primary }}\r\n              >\r\n                <div className=\"flex flex-col w-full md:flex-row justify-s  \">\r\n                  <div className=\"flex flex-col  w-full px-6 pt-2 gap-1 justify-center items-start \">\r\n                    <div className=\"flex  w-full justify-between pe-2\">\r\n                      <div className=\"text-2xl capitalize font-bold\">\r\n                        {(PersonalInfo?.firstName || \"Full \") + \" \"}\r\n                        {PersonalInfo?.lastName || \"Name \"}\r\n                      </div>{\" \"}\r\n                      <div className=\"block lg:hidden xl:hidden md:hidden\">\r\n                        <div className=\"flex justify-end\">\r\n                          <PersonalInfoModal />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-1 items-center font-semibold\">\r\n                      <span className=\"text-md -mt-1\">\r\n                        {PersonalInfo?.headline || \"Profession\"}{\" \"}\r\n                      </span>\r\n                      <span className=\"text-[12px] capitalize\">\r\n                        {PersonalInfo?.gender === \"Male\"\r\n                          ? ProfileCardLogos?.male\r\n                          : PersonalInfo?.gender === \"Female\"\r\n                          ? ProfileCardLogos?.female\r\n                          : PersonalInfo?.gender === \"Other\"\r\n                          ? ProfileCardLogos?.other\r\n                          : \" gender\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex flex-col gap-1 text-[11px]\">\r\n                      <div className=\"flex gap-1 mt-2 items-center\">\r\n                        {\" \"}\r\n                        {ProfileCardLogos?.call}{\" \"}\r\n                        <span>\r\n                          {PersonalInfo?.mobNumber || \"+(91)-00000-00000\"}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex gap-1 items-center\">\r\n                        {\" \"}\r\n                        {ProfileCardLogos?.location}{\" \"}\r\n                        <span>{PersonalInfo?.city || \"xxxx\"}</span>\r\n                      </div>\r\n                      <div className=\"flex gap-1 items-center\">\r\n                        {\" \"}\r\n                        {ProfileCardLogos?.email}{\" \"}\r\n                        <span>{PersonalInfo?.email || \"xxx@gmail.com\"}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"hidden  lg:block md:block xl:block\">\r\n                    <div className=\"flex flex-col  gap-2\">\r\n                      <div className=\"flex justify-end p-1\">\r\n                        <PersonalInfoModal />\r\n                      </div>\r\n\r\n                      <Navigation size=\"4\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"lg:px-5 px-2  pt-2\">\r\n                  <Badge fontSize=\"x-small\">interests </Badge>\r\n                  <div>\r\n                    <b className=\"capitalize text-sm\">\r\n                      {PersonalInfo.interests || \"No Interest Available\"}\r\n                    </b>\r\n                  </div>\r\n                  <Badge fontSize=\"x-small\">About </Badge>\r\n                  <div\r\n                    className=\"p-1 m-1 rounded-md shadow-inner overflow-hidden h-16\"\r\n                    style={{\r\n                      overflowY: \"auto\",\r\n                    }}\r\n                  >\r\n                    <p className=\"text-sm overflow-hidden\">\r\n                      {PersonalInfo.about}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalInfoPage;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nconst uploadFile = async (asset, type) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", asset);\r\n\r\n  if (type === \"personal\") {\r\n    // Add background removal option\r\n    // data.append(\"background_removal\", \"auto:remove_background\");\r\n    data.append(\"upload_preset\", \"ProfileImage\");\r\n  } else {\r\n    data.append(\"upload_preset\", \"Pro-Dash\");\r\n  }\r\n\r\n  if (!asset) return;\r\n  try {\r\n    const res = await axios.post(\r\n      `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUDNAME}/image/upload`,\r\n      data\r\n    );\r\n    return res?.data?.secure_url;\r\n  } catch (error) {\r\n    toast.error(\"Error In Uploading \");\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default uploadFile;\r\n"],"names":["LazyUserInfoModal","lazy","PersonalInfoModal","personalInfoButtonClicked","setPersonalInfoButtonClicked","useState","timeoutId","setTimeoutId","isOpen","onOpen","onClose","useDisclosure","currentMode","useSelector","state","themes","currentPalette","palettes","Mode","setMode","isLoading","user","_jsxs","className","children","_jsx","Tooltip","label","Button","size","title","type","onClick","ProfileCardLogos","edit","Modal","colorScheme","scrollBehavior","isCentered","ModalContent","borderRadius","backgroundColor","concat","color","ModalHeader","textTransform","handleModalBg","MdDarkMode","MdOutlineLightMode","ModalCloseButton","ModalBody","Suspense","fallback","Spinner","ModalFooter","handleCreate","clearTimeout","newTimeoutId","setTimeout","loadingText","useManagePersonalPhoto","navigate","useNavigate","dispatch","useDispatch","PersonalInfo","store","userPersonalInfo","managePersonalPhoto","async","_JSON$parse","firstName","toast","error","position","token","JSON","parse","localStorage","getItem","uid","userId","photo","photoUrl","uploadFile","data","axios","put","process","headers","Authorization","success","message","setUserPersonalInfo","updatedProfile","_ref","prevState","fileInputRef","useRef","setPhoto","preview","setPreview","useEffect","_Fragment","ModalOverlay","hasArrow","handleIconClick","current","click","FcLandscape","style","cursor","top","left","transform","ref","accept","onChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","display","width","height","overflow","src","EmptyImage","alt","handleClearPhoto","value","FcCancel","PersonalInfoPage","Layout","keywords","secondary","SideBar","MainHeader","Badge","Navigation","ProfilePhotoModal","leftIcon","IoLogoLinkedin","href","linkedin","primary","lastName","headline","gender","male","female","other","call","mobNumber","location","city","email","fontSize","interests","overflowY","about","asset","FormData","append","_res$data","res","post","secure_url"],"sourceRoot":""}