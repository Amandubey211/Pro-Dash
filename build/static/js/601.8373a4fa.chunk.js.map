{"version":3,"file":"static/js/601.8373a4fa.chunk.js","mappings":"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","sources":["Data/DashboardData/HeaderLogos.js","Hooks/CustomAuthHooks/useGetUser.js","Components/ResuableComponent/ThemeComponent.js","Components/DrawerBody/StatsBody.js","Components/DashBoardComponents/MainHeader.js","Components/DashBoardComponents/ProfileOverview.js","Components/DashBoardComponents/SideBar.js","Components/ResuableComponent/Navigation.js","Data/DashboardData/ProfileCardLogo.js","Data/ThemeData/ThemeColors.js","Hooks/CustomAuthHooks/useSignOut.js","Hooks/CustomUserInfoHooks/useGetStats.js","Layout/Layout.js"],"sourcesContent":["import { IoIosSunny } from \"react-icons/io\";\r\nimport { TbSunset2 } from \"react-icons/tb\";\r\nimport { FcLandscape } from \"react-icons/fc\";\r\nimport { FcNightLandscape } from \"react-icons/fc\";\r\nimport { IoNotifications } from \"react-icons/io5\";\r\nexport const HeaderLogos = {\r\n  morning: <FcLandscape />,\r\n  afterNoon: <IoIosSunny className=\"text-yellow-300 custom-spin\" />,\r\n  evening: <TbSunset2 className=\"text-orange-400\" />,\r\n  night: <FcNightLandscape />,\r\n  notification: <IoNotifications className=\"text-xs lg:text-xl \" />,\r\n};\r\n","import axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserDetails } from \"../../Redux/Slices/UserSlice\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useGetUser = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const UserDetails = useSelector((store) => store.user.userDetails);\r\n  const getUser = useCallback(async () => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      if (!user || !user.userId || !token) {\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      const uid = user?.userId;\r\n\r\n      const { data } = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/user/${uid}`,\r\n        { headers: { Authorization: token } }\r\n      );\r\n\r\n      if (data.success) {\r\n        dispatch(setUserDetails(data.user));\r\n        // toast.success(data.message,  { position: \"bottom-left\" });\r\n      } else {\r\n        navigate(\"/\");\r\n        throw new Error(\"Failed to fetch user details\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user details:\", error);\r\n      toast.error(\"Something went wrong\", { position: \"bottom-left\" });\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!UserDetails.id) {\r\n      getUser().catch((error) => {\r\n        console.error(\"Error fetching user details:\", error);\r\n        toast.error(\"Failed to fetch user details\", {\r\n          position: \"bottom-left\",\r\n        });\r\n        navigate(\"/\");\r\n      });\r\n    }\r\n  }, [getUser, UserDetails, navigate]);\r\n\r\n  // No need to return anything from the custom hook\r\n};\r\n\r\nexport default useGetUser;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nimport {\r\n  Button,\r\n  Portal,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { FcEngineering } from \"react-icons/fc\";\r\nimport ThemeColors from \"../../Data/ThemeData/ThemeColors.js\";\r\nimport { selectPalette } from \"../../Redux/Slices/ThemeSlice.js\";\r\nimport { IoColorPalette } from \"react-icons/io5\";\r\n\r\nconst ThemeComponent = ({ mobile }) => {\r\n  const currentTheme = useSelector((store) => store.themes.currentPalette);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Popover placement={mobile ? \"auto\" : \"right-end\"}>\r\n      <PopoverTrigger>\r\n        <button>\r\n          <IoColorPalette title=\"theme\" className=\"text-2xl cursor-pointer\" />\r\n        </button>\r\n      </PopoverTrigger>\r\n\r\n      <Portal>\r\n        <PopoverContent\r\n        //  bg={currentPalette.primary}\r\n        >\r\n          <PopoverArrow />\r\n          <PopoverHeader>\r\n            <div className=\"text-center font-bold\">Choose Palette Color</div>\r\n          </PopoverHeader>\r\n          <PopoverCloseButton />\r\n          <PopoverBody>\r\n            <div className=\"flex gap-2 justify-center items-center\">\r\n              {ThemeColors.map((data) => {\r\n                return (\r\n                  <div\r\n                    key={data.id}\r\n                    className=\"flex gap-1 justify-center items-center flex-col\"\r\n                  >\r\n                    <button\r\n                      onClick={() => {\r\n                        dispatch(selectPalette(data.palette));\r\n                        toast.success(`Palette set to \"${data.palette}\"`, {\r\n                          position: \"bottom-left\",\r\n                        });\r\n                      }}\r\n                      className={` h-9 w-8 hover:border-blue-700 border-2 rounded-lg ${\r\n                        data.palette === currentTheme &&\r\n                        \"scale-125  border-black border-2\"\r\n                      } `}\r\n                      style={{ backgroundColor: `${data.color}` }}\r\n                    ></button>\r\n                    <span className=\"text-[9px]\">{data.palette}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </PopoverBody>\r\n          <PopoverFooter>\r\n            {\" \"}\r\n            <div className=\"text-red-500 text-center\"> Optimizing it soon</div>\r\n          </PopoverFooter>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default ThemeComponent;\r\n","import React from \"react\";\r\nimport {\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatGroup,\r\n  Progress,\r\n} from \"@chakra-ui/react\";\r\nimport { FcBullish } from \"react-icons/fc\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useGetStats from \"../../Hooks/CustomUserInfoHooks/useGetStats\";\r\nimport ProfileOverview from \"../DashBoardComponents/ProfileOverview\";\r\n\r\nconst StatsBody = () => {\r\n  useGetStats();\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const UserStats = useSelector((store) => store.user.userStats);\r\n  return (\r\n    <div className=\"p-2  rounded-3xl\">\r\n      <ProfileOverview />\r\n      <div className=\"mt-7 p-2\">\r\n        <div className=\"flex gap-2 items-center\">\r\n          <FcBullish />\r\n          <b>Statstics</b>\r\n        </div>\r\n        <div\r\n          className=\"mt-3 p-2 ps-5\r\n            rounded-xl \"\r\n          style={{ backgroundColor: currentPalette.accent }}\r\n        >\r\n          <StatGroup>\r\n            <Stat>\r\n              <StatLabel>Completed</StatLabel>\r\n              <StatNumber>{UserStats?.totalCompletedTasks || 0}</StatNumber>\r\n            </Stat>\r\n\r\n            <Stat>\r\n              <StatLabel>Due</StatLabel>\r\n              <StatNumber>{UserStats.totalDueTasks || 0}</StatNumber>\r\n            </Stat>\r\n          </StatGroup>\r\n        </div>\r\n        <div\r\n          className=\"mt-3 p-2 flex gap-2 flex-col\r\n            rounded-xl \"\r\n          style={{ backgroundColor: currentPalette.accent }}\r\n        >\r\n          <p className=\"text-sm capitalize\">\r\n            precise Task Completion -{\" \"}\r\n            <b className=\"text-xs\">\r\n              ({UserStats.avgCompletionRate?.toFixed(1)}%)\r\n            </b>\r\n          </p>\r\n          <Progress\r\n            value={UserStats.avgCompletionRate || 0}\r\n            size=\"sm\"\r\n            borderRadius=\"1rem\"\r\n            colorScheme=\"blue\"\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"mt-3 p-2 flex gap-2 flex-col\r\n            rounded-xl \"\r\n          style={{ backgroundColor: currentPalette.accent }}\r\n        >\r\n          <p className=\"text-sm capitalize\">\r\n            Task Completion -\r\n            <b className=\"text-xs\">\r\n              ({UserStats.overallCompletionPercentage?.toFixed(1)}%)\r\n            </b>\r\n          </p>\r\n          <Progress\r\n            value={UserStats.overallCompletionPercentage || 0}\r\n            size=\"sm\"\r\n            borderRadius=\"1rem\"\r\n            colorScheme=\"blue\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsBody;\r\n","import { Button, Tooltip } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\nimport { HeaderLogos } from \"../../Data/DashboardData/HeaderLogos.js\";\r\nimport useGetUser from \"../../Hooks/CustomAuthHooks/useGetUser.js\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  Avatar,\r\n  CircularProgress,\r\n  CircularProgressLabel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport ThemeComponent from \"../ResuableComponent/ThemeComponent.js\";\r\nimport StatsBody from \"../DrawerBody/StatsBody.js\";\r\nimport { TbLogout } from \"react-icons/tb\";\r\nimport useSignOut from \"../../Hooks/CustomAuthHooks/useSignOut.js\";\r\nconst MainHeader = () => {\r\n  useGetUser();\r\n  const User = useSelector((store) => store.user.userDetails);\r\n  const [timeOfDay, setTimeOfDay] = useState(\"\");\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = React.useRef();\r\n  const PersonalInfo = useSelector((state) => state.user.userPersonalInfo);\r\n  const ProfileCompletness = useSelector(\r\n    (store) => store.user.userProfileCompletnessPercentage\r\n  );\r\n  const { signOut } = useSignOut();\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  useEffect(() => {\r\n    const currentTime = new Date().getHours();\r\n\r\n    if (currentTime < 12) {\r\n      setTimeOfDay(\"morning\");\r\n    } else if (currentTime < 17) {\r\n      setTimeOfDay(\"afternoon\");\r\n    } else if (currentTime < 20) {\r\n      setTimeOfDay(\"evening\");\r\n    } else {\r\n      setTimeOfDay(\"night\"); // Otherwise, set time of day to night\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\" flex justify-between items-center  w-full  lg:px-5 px-1  \">\r\n      <div className=\"flex  gap-2   items-center\">\r\n        <div className=\"lg:text-4xl  text-2xl \">\r\n          {timeOfDay === \"morning\"\r\n            ? HeaderLogos.morning\r\n            : timeOfDay === \"afternoon\"\r\n            ? HeaderLogos.afterNoon\r\n            : timeOfDay === \"evening\"\r\n            ? HeaderLogos.evening\r\n            : HeaderLogos.night}\r\n        </div>\r\n        <div className=\"flex flex-col  items-start  \">\r\n          <span className=\"font-bold lg:text-lg text-sm  capitalize\">\r\n            <span className=\"text-md\">\r\n              {timeOfDay === \"morning\"\r\n                ? \"Good Morning, \"\r\n                : timeOfDay === \"afternoon\"\r\n                ? \"Good Afternoon,\"\r\n                : timeOfDay === \"evening\"\r\n                ? \"Good Evening,\"\r\n                : \"Good Night,\"}\r\n            </span>\r\n            <span className=\"lg:text-lg text-sm\"> {User?.userName}</span>\r\n          </span>\r\n          <span className=\"text-[10px] mt-[-3px] font-semibold\">\r\n            lets see how are you doing\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-end gap-1 md:gap-2 items-center \">\r\n        <div className=\"block lg:hidden md:hidden xl:hidden\">\r\n          <Tooltip hasArrow label=\"Theme\">\r\n            <ThemeComponent mobile={true} />\r\n          </Tooltip>\r\n        </div>\r\n        <div className=\"hidden lg:block md:block xl:block\">\r\n          <Tooltip hasArrow label=\"Alerts\">\r\n            <Button\r\n              size={{ base: \"xs\", md: \"sm\", lg: \"sm\", sm: \"xs\" }} // Adjust size for desktop\r\n              title=\"alerts\"\r\n              onClick={() =>\r\n                toast.success(\"will be added soon\", {\r\n                  position: \"bottom-left \",\r\n                })\r\n              }\r\n            >\r\n              {HeaderLogos.notification}\r\n            </Button>\r\n          </Tooltip>\r\n        </div>\r\n\r\n        <div className=\"block md:hidden lg:hidden xl:hidden\">\r\n          <CircularProgress\r\n            color=\"green.400\"\r\n            size=\"2rem\"\r\n            value={ProfileCompletness}\r\n          >\r\n            <CircularProgressLabel>\r\n              <Avatar\r\n                ref={btnRef}\r\n                onClick={onOpen}\r\n                size=\"xs\"\r\n                name={PersonalInfo?.firsName}\r\n                src={PersonalInfo?.photoUrl}\r\n              />{\" \"}\r\n            </CircularProgressLabel>\r\n          </CircularProgress>\r\n          <Drawer\r\n            isOpen={isOpen}\r\n            placement=\"right\"\r\n            onClose={onClose}\r\n            finalFocusRef={btnRef}\r\n            zIndex={5} // Adjust the z-index here\r\n          >\r\n            <DrawerOverlay />\r\n            <DrawerContent\r\n              color=\"white\"\r\n              backgroundColor={currentPalette.secondary}\r\n            >\r\n              <DrawerCloseButton />\r\n              <DrawerHeader>Progress Report</DrawerHeader>\r\n\r\n              <DrawerBody>\r\n                <StatsBody />\r\n              </DrawerBody>\r\n\r\n              <DrawerFooter display=\"flex\" justifyContent=\"space-between\">\r\n                <Tooltip\r\n                  size=\"xs\"\r\n                  hasArrow\r\n                  bg={currentPalette.accent}\r\n                  label=\"Log Out\"\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"hover:cursor-pointer\"\r\n                    onClick={signOut}\r\n                  >\r\n                    <TbLogout type=\"\" onClick={signOut} className=\"text-lg\" />\r\n                  </button>\r\n                </Tooltip>\r\n                {/* <Button onClick={onClose}></Button> */}\r\n                <Button onClick={onClose}>Close</Button>\r\n              </DrawerFooter>\r\n            </DrawerContent>\r\n          </Drawer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport { FcDoughnutChart, FcHighPriority } from \"react-icons/fc\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Badge,\r\n  CircularProgress,\r\n  CircularProgressLabel,\r\n  Portal,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ProfileOverview = () => {\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const ProfileCompletness = useSelector(\r\n    (store) => store.user.userProfileCompletnessPercentage\r\n  );\r\n  const missingProfileData = useSelector(\r\n    (store) => store.user.userProfileMissing\r\n  );\r\n  return (\r\n    <div\r\n      className=\"p-2 rounded-2xl\"\r\n      style={{ backgroundColor: currentPalette.accent }}\r\n    >\r\n      <div className=\"flex gap-1  items-center\">\r\n        <FcDoughnutChart />\r\n        <div>Profile Overview </div>\r\n      </div>\r\n      <div className=\"mt-1 flex gap-2 items-center justify-center\">\r\n        <div className=\"flex p-1 flex-col items-center justify-center gap-2 \">\r\n          <CircularProgress\r\n            color=\"green.400\"\r\n            size=\"8rem\"\r\n            value={ProfileCompletness || 5}\r\n          >\r\n            <CircularProgressLabel>\r\n              {ProfileCompletness ? ProfileCompletness.toFixed(1) : 5}%\r\n            </CircularProgressLabel>\r\n          </CircularProgress>\r\n          <Badge colorScheme={currentPalette.colorScheme} fontSize=\"x-small\">\r\n            Profile Score\r\n          </Badge>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-xs capitalize pt-2 \">\r\n        {ProfileCompletness !== 100 && (\r\n          <Popover zIndex={50}>\r\n            <PopoverTrigger>\r\n              <div className=\"flex items-center cursor-pointer hover:underline gap-1 justify-center \">\r\n                <FcHighPriority className=\"text-md\" />\r\n                <span className=\"text-red-300\"> Discover what's missing</span>\r\n              </div>\r\n            </PopoverTrigger>\r\n            <Portal>\r\n              <PopoverContent>\r\n                <PopoverArrow />\r\n\r\n                <PopoverCloseButton />\r\n                <PopoverBody>\r\n                  <div className=\"flex  flex-col justify-center items-center gap-2 \">\r\n                    {missingProfileData.map((data, i) => {\r\n                      return (\r\n                        <Badge colorScheme=\"red\" key={i}>\r\n                          {data}\r\n                        </Badge>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </PopoverBody>\r\n              </PopoverContent>\r\n            </Portal>\r\n          </Popover>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileOverview;\r\n","import React from \"react\";\r\nimport { TbLogout } from \"react-icons/tb\";\r\nimport { BsPeople } from \"react-icons/bs\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { IoSettingsOutline } from \"react-icons/io5\";\r\nimport { Avatar, Button, Portal, Tooltip } from \"@chakra-ui/react\";\r\nimport useSignOut from \"../../Hooks/CustomAuthHooks/useSignOut.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { FcEngineering } from \"react-icons/fc\";\r\nimport ThemeColors from \"../../Data/ThemeData/ThemeColors.js\";\r\nimport { selectPalette } from \"../../Redux/Slices/ThemeSlice.js\";\r\nimport toast from \"react-hot-toast\";\r\nconst SideBar = () => {\r\n  const { signOut } = useSignOut();\r\n  const currentPalette = useSelector(\r\n    (store) => store.themes.palettes[store.themes.currentPalette]\r\n  );\r\n  const currentTheme = useSelector((store) => store.themes.currentPalette);\r\n  const dispatch = useDispatch();\r\n  const PersonalInfo = useSelector((state) => state.user.userPersonalInfo);\r\n  const user = useSelector((store) => store.user.userDetails);\r\n  return (\r\n    <div\r\n      style={{ backgroundColor: currentPalette.primary }}\r\n      className={`lg:col-span-1 md:col-span-1 md:block  hidden    lg:block p-1`}\r\n    >\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"flex flex-col  h-full lg:fixed  left-8 py-3 gap-4 justify-between items-center\">\r\n          <div className=\"flex flex-col gap-5  mt-6\">\r\n            <NavLink to=\"/dash\" title=\"dashboard page\">\r\n              <Avatar\r\n                size=\"xs\"\r\n                name={user?.userName}\r\n                src={PersonalInfo?.photoUrl}\r\n              />{\" \"}\r\n            </NavLink>\r\n            <NavLink title=\"dashboard\">\r\n              <BsPeople\r\n                onClick={() =>\r\n                  toast.success(\"Planning to add more functionality\", {\r\n                    position: \"bottom-left\",\r\n                  })\r\n                }\r\n                className=\"text-xl\"\r\n              />\r\n            </NavLink>\r\n\r\n            <Popover placement=\"right-end\">\r\n              <PopoverTrigger>\r\n                <button>\r\n                  <FcEngineering\r\n                    title=\"theme\"\r\n                    className=\"text-xl cursor-pointer\"\r\n                  />\r\n                </button>\r\n              </PopoverTrigger>\r\n\r\n              <Portal>\r\n                <PopoverContent\r\n                //  bg={currentPalette.primary}\r\n                >\r\n                  <PopoverArrow />\r\n                  <PopoverHeader>\r\n                    <div className=\"text-center font-bold\">\r\n                      Choose Theme Color\r\n                    </div>\r\n                  </PopoverHeader>\r\n                  <PopoverCloseButton />\r\n                  <PopoverBody>\r\n                    <div className=\"flex gap-2 justify-center items-center\">\r\n                      {ThemeColors.map((data) => {\r\n                        return (\r\n                          <div\r\n                            key={data.id}\r\n                            className=\"flex gap-1 justify-center items-center flex-col\"\r\n                          >\r\n                            <button\r\n                              onClick={() => {\r\n                                dispatch(selectPalette(data.palette));\r\n                                toast.success(\r\n                                  `Palette set to \"${data.palette}\"`,\r\n                                  { position: \"bottom-left\" }\r\n                                );\r\n                              }}\r\n                              className={` h-9 w-8 hover:border-blue-700 border-2 rounded-lg ${\r\n                                data.palette === currentTheme &&\r\n                                \"scale-125  border-black border-2\"\r\n                              } `}\r\n                              style={{ backgroundColor: `${data.color}` }}\r\n                            ></button>\r\n                            <span className=\"text-[9px]\">{data.palette}</span>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </PopoverBody>\r\n                  <PopoverFooter>\r\n                    {\" \"}\r\n                    <div className=\"text-red-500 text-center\">\r\n                      {\" \"}\r\n                      Optimizing it soon\r\n                    </div>\r\n                  </PopoverFooter>\r\n                </PopoverContent>\r\n              </Portal>\r\n            </Popover>\r\n          </div>\r\n          <Tooltip\r\n            size=\"xs\"\r\n            hasArrow\r\n            bg={currentPalette.accent}\r\n            label=\"Log Out\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"hover:cursor-pointer\"\r\n              onClick={signOut}\r\n            >\r\n              <TbLogout type=\"\" onClick={signOut} className=\"text-lg\" />\r\n            </button>\r\n          </Tooltip>\r\n        </div>{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { Tooltip } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ProfileLinkLogo } from \"../../Data/DashboardData/ProfileCardLogo\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Navigation = ({ size }) => {\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-end flex-wrap lg:gap-3 gap-1 lg:p-3 p-1  \">\r\n      {ProfileLinkLogo?.map((data) => {\r\n        return (\r\n          <div className=\"flex flex-col items-center\" key={data.name}>\r\n            <NavLink\r\n              title={data?.name}\r\n              to={`/${data?.name}`}\r\n              key={data?.name}\r\n              style={{ backgroundColor: currentPalette.accent2 }}\r\n              className=\"border shadow-md lg:rounded-lg rounded-md transform hover:scale-110 transition-transform duration-300 lg:p-1 p-1\"\r\n            >\r\n              <Tooltip label={data?.name}>\r\n                <span\r\n                  className={`lg:text-4xl text-lg ${\r\n                    window.location.pathname === `/${data?.name}`\r\n                      ? ` scale-105 font-semibold  `\r\n                      : ` capitalize`\r\n                  }`}\r\n                >\r\n                  {data?.logo}\r\n                </span>\r\n              </Tooltip>\r\n            </NavLink>\r\n            <span\r\n              className={`capitalize lg:text-sm text-[10px]  ${\r\n                window.location.pathname === `/${data?.name}`\r\n                  ? `  font-semibold   scale-105 block text-blue-500  `\r\n                  : ` capitalize  text-[7px]`\r\n              }`}\r\n            >\r\n              {data?.name}\r\n            </span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import {\r\n  IoCallOutline,\r\n  IoLocationOutline,\r\n  IoMailOutline,\r\n} from \"react-icons/io5\";\r\nimport {\r\n  FcApproval,\r\n  FcTodoList,\r\n  FcAddImage,\r\n  FcBusiness,\r\n  FcDiploma1,\r\n  FcGraduationCap,\r\n  FcManager,\r\n  FcHome,\r\n} from \"react-icons/fc\";\r\nimport {\r\n  IoIosMale,\r\n  IoIosHappy,\r\n  IoIosFemale,\r\n  IoIosTransgender,\r\n} from \"react-icons/io\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nconst ProfileCardLogos = {\r\n  call: <IoCallOutline />,\r\n  location: <IoLocationOutline className=\"font-bold\" />,\r\n  email: <IoMailOutline />,\r\n  edit: <FaRegEdit />,\r\n  add: <FcTodoList />,\r\n  post: <FcAddImage />,\r\n  male: <IoIosMale className=\"font-bold\" />,\r\n  female: <IoIosFemale className=\"font-bold\" />,\r\n  other: <IoIosTransgender className=\"font-bold\" />,\r\n  intrest: <IoIosHappy />,\r\n};\r\n\r\nexport const ProfileLinkLogo = [\r\n  {\r\n    name: \"dash\",\r\n    logo: <FcHome />,\r\n  },\r\n\r\n  {\r\n    name: \"personal\",\r\n    logo: <FcManager />,\r\n  },\r\n\r\n  {\r\n    name: \"experience\",\r\n    logo: <FcBusiness />,\r\n  },\r\n\r\n  {\r\n    name: \"achivements\",\r\n    logo: <FcDiploma1 />,\r\n  },\r\n  {\r\n    name: \"projects\",\r\n    logo: <FcApproval />,\r\n  },\r\n  {\r\n    name: \"education\",\r\n    logo: <FcGraduationCap />,\r\n  },\r\n];\r\n\r\nexport default ProfileCardLogos;\r\n","const ThemeColors = [\r\n  {\r\n    id: 1,\r\n    color: \"#ffff\",\r\n    palette: \"light\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"#293645\",\r\n    palette: \"dark\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"#25D366\",\r\n    palette: \"whatsapp\",\r\n  },\r\n  {\r\n    id: 4,\r\n    color: \"#833AB4\",\r\n    palette: \"instagram\",\r\n  },\r\n\r\n  {\r\n    id: 5,\r\n    color: \"#0088cc\",\r\n    palette: \"telegram\",\r\n  },\r\n];\r\n\r\nexport default ThemeColors;\r\n","import toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setUserDetails } from \"../../Redux/Slices/UserSlice\";\r\n\r\nconst useSignOut = () => {\r\n  const Navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const signOut = () => {\r\n    localStorage.removeItem(\"jwt_Token\");\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"refresh_Token\");\r\n    dispatch(setUserDetails({}));\r\n    Navigate(\"/\");\r\n    toast.success(\"SignOut Successfully\", { position: \"bottom-left\" });\r\n  };\r\n\r\n  return {\r\n    signOut,\r\n  };\r\n};\r\n\r\nexport default useSignOut;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUserStats } from \"../../Redux/Slices/UserSlice\";\r\n\r\nconst useGetStats = () => {\r\n  const allTaskData = useSelector((state) => state.task.allTaskData);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const calculateStats = () => {\r\n      let totalCompletedTasks = 0;\r\n      let totalDueTasks = 0;\r\n      let totalProgressPercentage = 0;\r\n      let totalTasks = allTaskData?.length;\r\n\r\n      allTaskData?.forEach((task) => {\r\n        if (task?.completionStatus) {\r\n          totalCompletedTasks++;\r\n        } else {\r\n          totalDueTasks++;\r\n        }\r\n\r\n        totalProgressPercentage += task?.progressPercentage;\r\n      });\r\n\r\n      const avgCompletionRate =\r\n        totalTasks > 0 ? totalProgressPercentage / totalTasks : 0;\r\n      const overallCompletionPercentage =\r\n        totalTasks > 0 ? (totalCompletedTasks / totalTasks) * 100 : 0;\r\n\r\n      const userStats = {\r\n        avgCompletionRate,\r\n        totalCompletedTasks,\r\n        totalDueTasks,\r\n        overallCompletionPercentage,\r\n      };\r\n\r\n      dispatch(setUserStats(userStats)); // Dispatch action to update userStats in Redux store\r\n    };\r\n\r\n    calculateStats();\r\n  }, [allTaskData, dispatch]);\r\n\r\n  return null; // Return null since we are dispatching an action and not returning anything\r\n};\r\n\r\nexport default useGetStats;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nconst Layout = ({ children, title, description, keywords, author }) => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"keywords\" content={keywords} />\r\n        <meta name=\"author\" content={author} />\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {/* <Header /> */}\r\n      <main style={{ minHeight: \"70vh\" }}>\r\n        <Toaster />\r\n\r\n        {children}\r\n      </main>\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["HeaderLogos","morning","_jsx","FcLandscape","afterNoon","IoIosSunny","className","evening","TbSunset2","night","FcNightLandscape","notification","IoNotifications","useGetUser","dispatch","useDispatch","navigate","useNavigate","UserDetails","useSelector","store","user","userDetails","getUser","useCallback","async","JSON","parse","localStorage","getItem","token","userId","uid","data","axios","get","concat","process","headers","Authorization","success","Error","setUserDetails","error","console","toast","position","useEffect","id","catch","_ref","mobile","currentTheme","themes","currentPalette","_jsxs","Popover","placement","children","PopoverTrigger","IoColorPalette","title","Portal","PopoverContent","PopoverArrow","PopoverHeader","PopoverCloseButton","PopoverBody","ThemeColors","map","onClick","selectPalette","palette","style","backgroundColor","color","PopoverFooter","StatsBody","_UserStats$avgComplet","_UserStats$overallCom","useGetStats","state","palettes","UserStats","userStats","ProfileOverview","FcBullish","accent","StatGroup","Stat","StatLabel","StatNumber","totalCompletedTasks","totalDueTasks","avgCompletionRate","toFixed","Progress","value","size","borderRadius","colorScheme","overallCompletionPercentage","MainHeader","User","timeOfDay","setTimeOfDay","useState","isOpen","onOpen","onClose","useDisclosure","btnRef","React","PersonalInfo","userPersonalInfo","ProfileCompletness","userProfileCompletnessPercentage","signOut","useSignOut","currentTime","Date","getHours","userName","Tooltip","hasArrow","label","ThemeComponent","Button","base","md","lg","sm","CircularProgress","CircularProgressLabel","Avatar","ref","name","firsName","src","photoUrl","Drawer","finalFocusRef","zIndex","DrawerOverlay","DrawerContent","secondary","DrawerCloseButton","DrawerHeader","DrawerBody","DrawerFooter","display","justifyContent","bg","type","TbLogout","missingProfileData","userProfileMissing","FcDoughnutChart","Badge","fontSize","FcHighPriority","i","SideBar","primary","NavLink","to","BsPeople","FcEngineering","ProfileLinkLogo","accent2","window","location","pathname","logo","ProfileCardLogos","call","IoCallOutline","IoLocationOutline","email","IoMailOutline","edit","FaRegEdit","add","FcTodoList","post","FcAddImage","male","IoIosMale","female","IoIosFemale","other","IoIosTransgender","intrest","IoIosHappy","FcHome","FcManager","FcBusiness","FcDiploma1","FcApproval","FcGraduationCap","Navigate","removeItem","allTaskData","task","calculateStats","totalProgressPercentage","totalTasks","length","forEach","completionStatus","progressPercentage","setUserStats","description","keywords","author","Helmet","charSet","content","minHeight","Toaster"],"sourceRoot":""}