{"version":3,"file":"static/js/358.b8e338de.chunk.js","mappings":"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","sources":["Components/ProjectComponent/ProjectModal.js","Hooks/CustomProjectHooks/useDeleteProject.js","Components/ProjectComponent/DescriptionModal.js","Components/ProjectComponent/ProjectCardDetail.js","Components/ProjectComponent/ProjectCard.js","Data/ProjectData/FilteringData.js","Components/ProjectComponent/ProjectPage.js","Hooks/CustomProjectHooks/useGetAllProjects.js","Utils/Formatter.js"],"sourcesContent":["import React, { useState, lazy, Suspense } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n  Tooltip,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { MdDarkMode, MdOutlineLightMode } from \"react-icons/md\";\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FcPlus } from \"react-icons/fc\";\r\n\r\n// Lazy load the ProjectModalBody component\r\nconst ProjectModalBody = lazy(() =>\r\n  import(\"../ModalBodys/ProjectModalBody.js\")\r\n);\r\n\r\nconst ProjectModal = ({ ProjectState, type }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure(); // Modal hook\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  // Toggle theme mode\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n  const [createClicked, setCreateClicked] = useState(false);\r\n  const [updateClicked, setUpdateClicked] = useState(false);\r\n  const isCreating = useSelector((store) => store.project.isProjectCreating);\r\n\r\n  const isUploading = useSelector((store) => store.project.isProjectUpdating);\r\n\r\n  const handleModalBg = () => {\r\n    setIsDarkMode((prev) => !prev);\r\n  };\r\n  const handleCreate = () => {\r\n    setCreateClicked(true);\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n\r\n    // Set new timeout\r\n    const newTimeoutId = setTimeout(() => {\r\n      onClose();\r\n      setTimeoutId(null); // Clear the timeout ID after closing the modal\r\n    }, 2000); // Adjust the delay time as needed\r\n  };\r\n  const handleUpdate = () => {\r\n    setUpdateClicked(true);\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    const newTimeoutId = setTimeout(() => {\r\n      onClose();\r\n      setTimeoutId(null); // Clear the timeout ID after closing the modal\r\n    }, 100); // Adjust the delay time as needed\r\n  };\r\n\r\n  return (\r\n    <div className=\"sub-topics gap-2 flex justify-center items-center\">\r\n      <Tooltip label={type === \"create\" ? \"Edit\" : \"Update\"}>\r\n        <Button\r\n          variant={type === \"create\" ? \"outline\" : \"solid\"}\r\n          color={type === \"create\" ? \"white\" : \"black\"}\r\n          _hover={type === \"create\" ? \"black\" : \"white\"}\r\n          p={type === \"create\" && \"1rem 1.5rem\"}\r\n          fontSize={type === \"create\" && \"1rem\"}\r\n          // backgroundColor={currentPalette.accent}\r\n          size=\"xs\"\r\n          onClick={onOpen}\r\n        >\r\n          {type === \"create\" ? (\r\n            <div className=\"flex gap-2 items-center\">\r\n              <span className=\"text-white text-sm lg:text-lg \"> Add </span>\r\n              <FcPlus />\r\n            </div>\r\n          ) : (\r\n            <span>{ProfileCardLogos.edit}</span>\r\n          )}\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <Modal\r\n        scrollBehavior=\"inside\"\r\n        size=\"xl\"\r\n        isCentered\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n        <ModalContent\r\n          borderRadius=\"1rem\"\r\n          backgroundColor={isDarkMode ? \"#293645\" : \"white\"}\r\n          color={isDarkMode ? \"white\" : \"black\"}\r\n        >\r\n          <ModalHeader textTransform=\"capitalize\">\r\n            <div className=\"flex justify-between pe-9 items-center\">\r\n              {type === \"create\" ? \"Add Project\" : \"Update Project\"}\r\n              <Button size=\"xs\" onClick={handleModalBg}>\r\n                {isDarkMode ? <MdDarkMode /> : <MdOutlineLightMode />}\r\n              </Button>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"flex justify-center h-full \">\r\n                  <Spinner />\r\n                </div>\r\n              }\r\n            >\r\n              <ProjectModalBody\r\n                createClicked={createClicked}\r\n                updateClicked={updateClicked}\r\n                setCreateClicked={setCreateClicked}\r\n                setUpdateClicked={setUpdateClicked}\r\n                ProjectState={ProjectState}\r\n                type={type}\r\n              />\r\n            </Suspense>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {type === \"create\" ? (\r\n              <Button\r\n                size=\"sm\"\r\n                isLoading={isCreating}\r\n                loadingText=\"Creating\"\r\n                colorScheme={currentPalette.colorScheme}\r\n                onClick={handleCreate}\r\n              >\r\n                Create\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                size=\"sm\"\r\n                isLoading={isUploading}\r\n                loadingText=\"Updating\"\r\n                colorScheme={currentPalette.colorScheme}\r\n                onClick={handleUpdate}\r\n              >\r\n                Update\r\n              </Button>\r\n            )}\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectModal;\r\n","import axios from \"axios\";\r\nimport useGetAllProject from \"./useGetAllProjects\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setIsProjectDeleting } from \"../../Redux/Slices/ProjectSlice\";\r\n\r\nconst useDeleteProject = () => {\r\n  const { getAllProject } = useGetAllProject();\r\n  const dispatch = useDispatch();\r\n  const deleteProject = async (pid) => {\r\n    try {\r\n      dispatch(setIsProjectDeleting(true));\r\n      if (!pid) {\r\n        return toast.error(\"Please provide Id\", { position: \"bottom-left\" });\r\n      }\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const { data } = await axios.delete(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/project/delete/${pid}`,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n      if (data.success) {\r\n        toast.success(data.message, { position: \"bottom-left\" });\r\n        getAllProject();\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"something went wrong\", { position: \"bottom-left\" });\r\n    } finally {\r\n      dispatch(setIsProjectDeleting(false));\r\n    }\r\n  };\r\n\r\n  return {\r\n    deleteProject,\r\n  };\r\n};\r\n\r\nexport default useDeleteProject;\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Tooltip,\r\n  Button,\r\n  Badge,\r\n} from \"@chakra-ui/react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FcInfo } from \"react-icons/fc\";\r\n\r\nfunction ProjectDescriptionModal({ description, skillsUsed }) {\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const OverlayOne = () => (\r\n    <ModalOverlay\r\n      bg=\"blackAlpha.300\"\r\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n    />\r\n  );\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [overlay, setOverlay] = React.useState(<OverlayOne />);\r\n\r\n  return (\r\n    <>\r\n      <Tooltip fontSize=\"xs\" label=\"Description\">\r\n        <Button\r\n          borderRadius=\"4px\"\r\n          leftIcon={<FcInfo className=\"hover:cursor-pointer text-sm lg:text-lg\" />}\r\n          size={{ base: \"xs\", md: \"sm\", lg: \"sm\", sm: \"sm\" }}\r\n          fontSize=\"smaller\"\r\n          onClick={() => {\r\n            setOverlay(<OverlayOne />);\r\n            onOpen();\r\n          }}\r\n        >\r\n          Project Details\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <Modal\r\n        isCentered\r\n        isOpen={isOpen}\r\n        scrollBehavior=\"inside\"\r\n        onClose={onClose}\r\n        size=\"xl\"\r\n      >\r\n        {overlay}\r\n        <ModalContent>\r\n          <ModalHeader>About Project</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <div className=\"flex flex-col gap-1\">\r\n              <Badge>Skills Used</Badge>\r\n              <div className=\"flex gap-1 p-3 \">\r\n                {skillsUsed?.map((item) => {\r\n                  return <Badge colorScheme=\"blue\">{item}</Badge>;\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n              <Badge>Description</Badge>\r\n\r\n              <p className=\"min-h-28 p-2\">{description}</p>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button colorScheme={currentPalette.colorScheme} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectDescriptionModal;\r\n","import {\r\n  Badge,\r\n  CircularProgress,\r\n  CircularProgressLabel,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { formatDate } from \"../../Utils/Formatter\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProjectCardDetail = ({ data }) => {\r\n  const formattedStarDate = formatDate(data?.startDate);\r\n  const formattedendDate = formatDate(data?.endDate);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"flex justify-between items-center px-2 \"\r\n        // style={{ backgroundColor: currentPalette.primary }}\r\n      >\r\n        <div className=\"p-1\">\r\n          <b className=\"text-xl capitalize\">{data?.title}</b>\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          <Badge\r\n          fontSize=\"x-small\"\r\n            colorScheme={\r\n              data?.size === \"large\"\r\n                ? \"red\"\r\n                : data?.size === \"medium\"\r\n                ? \"yellow\"\r\n                : \"green\"\r\n            }\r\n          >\r\n            {data?.size === \"large\"\r\n              ? \"Enterprise-scale \"\r\n              : data?.size === \"medium\"\r\n              ? \"Medium-scale \"\r\n              : \"Small-scale \"}\r\n          </Badge>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"flex px-2 justify-between  p-2 items-center\"\r\n        style={{ backgroundColor: currentPalette.accent }}\r\n      >\r\n        <div className=\"flex flex-col \">\r\n          <div className=\"flex justify-start\">\r\n            <Badge fontSize=\"xx-small\">Created By,</Badge>\r\n          </div>\r\n\r\n          <b className=\"lg:text-md text-sm capitalize\">{data?.createdBy?.substring(0,16)}</b>\r\n          <div>\r\n            <p className=\"text-[10px]\">\r\n              {formattedStarDate} - {formattedendDate}\r\n            </p>\r\n          </div>\r\n          <p className=\"text-[11px] capitalize\">role: {data?.role}</p>\r\n        </div>\r\n        <div className=\"flex-col gap-1 items-center justify-center  flex \">\r\n          <CircularProgress\r\n            value={data?.progressPercentage}\r\n            size=\"4rem\"\r\n            color=\"green.400\"\r\n          >\r\n            <CircularProgressLabel>\r\n              {data?.progressPercentage}%\r\n            </CircularProgressLabel>\r\n          </CircularProgress>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectCardDetail;\r\n","import React, { useState } from \"react\";\r\nimport ProjectModal from \"./ProjectModal\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  CircularProgress,\r\n  CircularProgressLabel,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport { FaCopy, FaGithub, FaLink, FaRegCopy } from \"react-icons/fa\";\r\nimport ImageNotFound from \"../../Assets/ImageNotFound.png\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { formatDate } from \"../../Utils/Formatter\";\r\nimport useDeleteProject from \"../../Hooks/CustomProjectHooks/useDeleteProject\";\r\nimport { MdOutlineDelete } from \"react-icons/md\";\r\nimport toast from \"react-hot-toast\";\r\nimport ProjectDescriptionModal from \"./DescriptionModal\";\r\nimport ProjectCardDetail from \"./ProjectCardDetail\";\r\nconst ProjectCard = ({ data }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n\r\n  const { deleteProject } = useDeleteProject();\r\n  const formattedStarDate = formatDate(data?.startDate);\r\n  const formattedendDate = formatDate(data?.endDate);\r\n  const isDeleting = useSelector((store) => store.project.isProjectDeleteing);\r\n  const handleCopy = () => {\r\n    setCopied(true);\r\n    const textToCopy = `Title: ${data?.title} CreatedBy:${data?.createdBy} From${formattedStarDate} to ${formattedendDate} Skills Used ${data?.skillsUsed},Description: ${data?.description}`;\r\n    navigator.clipboard\r\n      .writeText(textToCopy)\r\n      .then(() => {\r\n        toast.success(\"Task Copied\", { position: \"bottom-left\" });\r\n        const timeoutId = setTimeout(() => setCopied(false), 2000);\r\n        return () => clearTimeout(timeoutId);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to copy text:\", error);\r\n      });\r\n  };\r\n  return (\r\n    <div\r\n      className=\"relative h-[25rem] md:w-[20rem] lg:w-[23rem] w-full rounded-2xl shadow-xl \"\r\n      style={{ backgroundColor: currentPalette.primary }}\r\n    >\r\n      <div className=\"flex flex-col \">\r\n        <div className=\"overflow-hidden rounded-t-xl\">\r\n          <img\r\n            className=\"h-[100%] rounded-t-xl border transition-transform duration-300 transform hover:scale-105\"\r\n            src={data?.projectPhotoURL || ImageNotFound}\r\n            alt=\"Image\"\r\n          />\r\n        </div>\r\n        <div className=\"absolute top-0 right-0 m-2\">\r\n          <div className=\"flex justify-end gap-1 p-1 rounded-2xl items-center\">\r\n            <Tooltip label={copied ? \"Copied!\" : \"Copy Details\"}>\r\n              <Button size=\"xs\" onClick={handleCopy}>\r\n                {copied ? <FaCopy /> : <FaRegCopy />}\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip label=\"Delete \">\r\n              <Button\r\n                size=\"xs\"\r\n                colorScheme=\"red\"\r\n                onClick={() => deleteProject(data?._id)}\r\n              >\r\n                <MdOutlineDelete className=\"cursor-pointer\" />\r\n              </Button>\r\n            </Tooltip>\r\n            <ProjectModal ProjectState={data} />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between px-1 py-2 items-center\">\r\n          <div className=\"flex justify-start gap-1 items-center\">\r\n            <ProjectDescriptionModal\r\n              skillsUsed={data?.skillsUsed}\r\n              description={data?.description}\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-center  gap-1 items-center\">\r\n            <Button\r\n              size=\"xs\"\r\n              leftIcon={<FaLink />}\r\n              colorScheme=\"gray\"\r\n              variant=\"solid\"\r\n            >\r\n              <a className=\"text-xs\" target=\"_blank\" href={data?.liveDemoLink}>\r\n                Live Demo\r\n              </a>\r\n            </Button>\r\n            <Button\r\n              size=\"xs\"\r\n              colorScheme=\"gray\"\r\n              variant=\"solid\"\r\n              isLoading={isDeleting}\r\n              loadingText=\"Deletig\"\r\n            >\r\n              <a className=\"text-xs\" target=\"_blank\" href={data?.githubLink}>\r\n                <FaGithub />\r\n              </a>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <ProjectCardDetail data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","export const ProjectFilterLables = [\r\n  {\r\n    id: \"8999s\",\r\n    label: \"All\",\r\n    filterType: \"All\",\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"large\",\r\n    filterType: \"size\",\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"medium\",\r\n    filterType: \"size\",\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"small\",\r\n    filterType: \"size\",\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"completed\",\r\n    filterType: \"progressPercentage\",\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"due\",\r\n    filterType: \"progressPercentage\",\r\n  },\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../Layout/Layout\";\r\nimport SideBar from \"../DashBoardComponents/SideBar\";\r\nimport MainHeader from \"../DashBoardComponents/MainHeader\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navigation from \"../ResuableComponent/Navigation\";\r\nimport ProjectModal from \"./ProjectModal\";\r\nimport useGetAllProject from \"../../Hooks/CustomProjectHooks/useGetAllProjects\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport EmptyList from \"../DashBoardComponents/EmptyList\";\r\nimport { ProjectFilterLables } from \"../../Data/ProjectData/FilteringData\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst ProjectPage = () => {\r\n  const { getAllProject } = useGetAllProject();\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const [activeFilter, setActiveFilter] = useState(null);\r\n  const [filteredData, setFilteredData] = useState(null);\r\n\r\n  const allProjectData = useSelector((store) => store.project.allProject);\r\n\r\n  useEffect(() => {\r\n    getAllProject();\r\n  }, []);\r\n\r\n  const handleFilter = (item) => {\r\n    try {\r\n      setActiveFilter(item?.label === activeFilter ? null : item.label);\r\n      if (item.filterType === \"All\") {\r\n        setFilteredData(null);\r\n      } else if (item.filterType === \"size\") {\r\n        const filtered = allProjectData.filter(\r\n          (project) => project.size === item.label\r\n        );\r\n        setFilteredData(filtered);\r\n      } else {\r\n        const filtered =\r\n          item.label === \"completed\"\r\n            ? allProjectData.filter(\r\n                (project) => project.progressPercentage === 100\r\n              )\r\n            : allProjectData.filter(\r\n                (project) => project.progressPercentage < 100\r\n              );\r\n        setFilteredData(filtered);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Project Not Found\", { position: \"bottom-left\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      title=\"Project Page\"\r\n      keywords=\"Project, project link, github link, role, timing info, Description, data, seo\"\r\n    >\r\n      <div\r\n        style={{ backgroundColor: currentPalette.secondary }}\r\n        className=\"grid grid-cols-12 text-white min-h-svh\"\r\n      >\r\n        <SideBar />\r\n        <div className=\"col-span-11 lg:p-3 w-screen md:w-full  lg:w-full  \">\r\n          <MainHeader />\r\n          <div className=\"lg:p-3 p-1   w-full\">\r\n            <div className=\"flex justify-between items-center lg:px-12 px-1\">\r\n              <ProjectModal type=\"create\" />\r\n              <Navigation size=\"4\" />\r\n            </div>\r\n            <div className=\"flex justify-center lg:justify-between md:justify-between p-2 items-center\">\r\n              <div className=\"hidden lg:block md:block xl:block\">\r\n                My Projects ({allProjectData?.length || 0})\r\n              </div>\r\n              <div className=\"flex justify-center gap-1 items-center\">\r\n                {ProjectFilterLables.map((item) => (\r\n                  <button\r\n                    key={item.id}\r\n                    onClick={() => handleFilter(item)}\r\n                    className={`border hover:border-blue-500 rounded-md px-2 lg:px-3 p-1 text-xs font-light ${\r\n                      item.label === activeFilter\r\n                        ? \"bg-blue-500 text-white font-semibold\"\r\n                        : \"\"\r\n                    }`}\r\n                  >\r\n                    {item.label}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"p-1\">\r\n              {!filteredData ? (\r\n                <>\r\n                  {!allProjectData?.length ? (\r\n                    <div className=\"flex justify-center h-56 w-full\">\r\n                      <div className=\"flex gap-1 flex-col justify-center items-center\">\r\n                        <EmptyList message=\"No Data found! Add Project Info\" />\r\n                        <ProjectModal type=\"create\" />\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex gap-5 justify-center flex-wrap\">\r\n                      {allProjectData\r\n                        ? [...allProjectData]\r\n                            .reverse()\r\n                            .map((data, i) => (\r\n                              <ProjectCard key={i} data={data} />\r\n                            ))\r\n                        : null}\r\n                    </div>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {filteredData.length === 0 ? (\r\n                    <div className=\"flex justify-center h-56 w-full\">\r\n                      <div className=\"flex gap-1 flex-col justify-center items-center\">\r\n                        <EmptyList message=\"No Data found! Add Project Info\" />\r\n                        <ProjectModal type=\"create\" />\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex gap-5 justify-center flex-wrap\">\r\n                      {filteredData.map((data, i) => (\r\n                        <ProjectCard key={i} data={data} />\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAllProject } from \"../../Redux/Slices/ProjectSlice\";\r\n\r\nconst API_BASE_URL = \"${process.env.REACT_APP_BACKEND_ORIGIN}/api\";\r\n\r\nconst useGetAllProject = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  //   const AllTaskData = useSelector((store) => store.project.allProject);\r\n  const getAllProject = async () => {\r\n    try {\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n      if (!user || !token) {\r\n        navigate(\"/\");\r\n        return toast.error(\"Please Log In\", { position: \"bottom-left\" });\r\n      }\r\n\r\n      const uid = user?.userId;\r\n      // const url = `${API_BASE_URL}/project/user/${uid}`;\r\n\r\n      const { data } = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/project/user/${uid}`,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        dispatch(setAllProject(data?.data));\r\n      } else {\r\n        toast.error(data.message, { position: \"bottom-left\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching projects:\", error);\r\n      toast.error(\"Server Errddor\", { position: \"bottom-left\" });\r\n    }\r\n  };\r\n\r\n  return { getAllProject };\r\n};\r\n\r\nexport default useGetAllProject;\r\n","export const formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const options = { day: \"2-digit\", month: \"short\", year: \"2-digit\" };\r\n  const formattedDate = date.toLocaleDateString(\"en-US\", options);\r\n  const [month, day, year] = formattedDate.split(\" \");\r\n  return `${day}${month}-${year}`;\r\n};\r\n"],"names":["ProjectModalBody","lazy","_ref","ProjectState","type","isOpen","onOpen","onClose","useDisclosure","currentPalette","useSelector","state","themes","palettes","isDarkMode","setIsDarkMode","useState","timeoutId","setTimeoutId","createClicked","setCreateClicked","updateClicked","setUpdateClicked","isCreating","store","project","isProjectCreating","isUploading","isProjectUpdating","_jsxs","className","children","_jsx","Tooltip","label","Button","variant","color","_hover","p","fontSize","size","onClick","FcPlus","ProfileCardLogos","edit","Modal","scrollBehavior","isCentered","ModalContent","borderRadius","backgroundColor","ModalHeader","textTransform","handleModalBg","prev","MdDarkMode","MdOutlineLightMode","ModalCloseButton","ModalBody","Suspense","fallback","Spinner","ModalFooter","isLoading","loadingText","colorScheme","handleCreate","clearTimeout","setTimeout","handleUpdate","useDeleteProject","getAllProject","useGetAllProject","dispatch","useDispatch","deleteProject","async","setIsProjectDeleting","pid","toast","error","position","token","JSON","parse","localStorage","getItem","data","axios","delete","concat","process","headers","Authorization","success","message","description","skillsUsed","OverlayOne","ModalOverlay","bg","backdropFilter","overlay","setOverlay","React","_Fragment","leftIcon","FcInfo","base","md","lg","sm","Badge","map","item","_data$createdBy","formattedStarDate","formatDate","startDate","formattedendDate","endDate","title","style","accent","createdBy","substring","role","CircularProgress","value","progressPercentage","CircularProgressLabel","copied","setCopied","isDeleting","isProjectDeleteing","primary","src","projectPhotoURL","ImageNotFound","alt","handleCopy","textToCopy","navigator","clipboard","writeText","then","catch","console","FaCopy","FaRegCopy","_id","MdOutlineDelete","ProjectModal","ProjectDescriptionModal","FaLink","target","href","liveDemoLink","githubLink","FaGithub","ProjectCardDetail","ProjectFilterLables","id","filterType","ProjectPage","activeFilter","setActiveFilter","filteredData","setFilteredData","allProjectData","allProject","useEffect","Layout","keywords","secondary","SideBar","MainHeader","Navigation","length","filtered","filter","handleFilter","EmptyList","i","ProjectCard","reverse","navigate","useNavigate","user","uid","userId","get","setAllProject","dateString","formattedDate","Date","toLocaleDateString","day","month","year","split"],"sourceRoot":""}