{"version":3,"file":"static/js/326.e428b540.chunk.js","mappings":"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","sources":["Hooks/CustomAuthHooks/useGetServerInfo.js","Components/LoginComponents/LoginSidePanel.js","Components/LoginComponents/PasswordInput.js","Data/LoginData/InputInfo.js","Components/LoginComponents/LoginInfoModal.js","Hooks/CustomAuthHooks/useSignUp.js","Hooks/CustomAuthHooks/useSignIn.js","Components/LoginComponents/Form.js","Hooks/CustomAuthHooks/useAutoLoginWithToken .js","Components/LoginComponents/Login.js","Data/LoginData/LoginOption.js","Layout/Layout.js","Utils/AuthHelper.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useGetServerInfo = () => {\r\n  const [serverRunning, setServerRunning] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [serverFetched, setServerFetched] = useState(false); // New state variable\r\n\r\n  useEffect(() => {\r\n    const checkServer = async () => {\r\n      try {\r\n        // Check if the server status has already been fetched successfully\r\n        if (!serverFetched) {\r\n          const response = await axios.get(\r\n            `${process.env.REACT_APP_BACKEND_ORIGIN}`\r\n          );\r\n          setServerRunning(response.data.success);\r\n          setServerFetched(true); // Update serverFetched state to true\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error checking server status:\", error);\r\n        // If the error is due to being offline, update the state accordingly\r\n        if (!navigator.onLine) {\r\n          setServerRunning(false);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Initial check when component mounts\r\n    checkServer();\r\n\r\n    // Periodically check server status every 5 seconds if the browser is online\r\n    const intervalId = setInterval(() => {\r\n      if (navigator.onLine) {\r\n        checkServer();\r\n      }\r\n    }, 5000);\r\n\r\n    // Cleanup function to clear interval when component unmounts\r\n    return () => clearInterval(intervalId);\r\n  }, [serverFetched]); // Include serverFetched in the dependency array\r\n\r\n  return { serverRunning, loading };\r\n};\r\n\r\nexport default useGetServerInfo;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useGetServerInfo from \"../../Hooks/CustomAuthHooks/useGetServerInfo\";\r\nimport { FcApproval } from \"react-icons/fc\";\r\nimport { ImSpinner2 } from \"react-icons/im\";\r\nconst LoginSidePanel = ({ loginPage, HandlePage }) => {\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n\r\n  const { serverRunning } = useGetServerInfo();\r\n  return (\r\n    <div\r\n      style={{ backgroundColor: currentPalette.primary }}\r\n      className={`${\r\n        !loginPage\r\n          ? \" lg:rounded-r-[6rem] lg:rounded-l-3xl rounded-b-2xl    flex flex-col gap-5 justify-center items-center p-5 \"\r\n          : \"  lg:rounded-l-[6rem] lg:rounded-r-3xl rounded-b-2xl   flex flex-col gap-5 justify-center items-center p-5 \"\r\n      } relative pb-9 lg:pb-2`}\r\n    >\r\n      <b className=\"text-white lg:text-3xl font-bold\">\r\n        {loginPage ? \"Hello, Friend!\" : \"Welcome Back!\"}\r\n      </b>\r\n      <div className=\"flex justify-center text-center \">\r\n        <p className=\"text-white text-xs\">\r\n          {loginPage\r\n            ? \"Register with your personal details to use all of site features\"\r\n            : \"Enter your personal details to use all of site features \"}\r\n        </p>\r\n      </div>\r\n      <button\r\n        title={loginPage ? \"Sign Up\" : \"Sign In\"}\r\n        onClick={() => HandlePage()}\r\n        className=\"border-white text-white p-1 px-7 rounded-md border hover:bg-white hover:text-black uppercase font-semibold\"\r\n      >\r\n        {loginPage ? \"Sign Up\" : \"Sign In\"}\r\n      </button>\r\n\r\n      <div\r\n        className={`absolute bottom-0   mx-4 mb-4 ${\r\n          !loginPage ? \" right-0 lg:left-0\" : \"right-0\"\r\n        }`}\r\n      >\r\n        {!serverRunning ? (\r\n          <div className=\"flex items-center  gap-1  \">\r\n            <span className=\"text-white text-xs  \">Server staring</span>\r\n            <ImSpinner2 className=\"animate-spin text-white\" />\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex items-center gap-1  \">\r\n            <span className=\"text-white \">Server </span>\r\n            <FcApproval className=\"text-md lg:text-xl mt-1\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginSidePanel;\r\n","import {\r\n  Button,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { RiEyeCloseFill, RiEyeFill } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nfunction PasswordInput({ onPasswordChange, passwordValue }) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const HandleChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    onPasswordChange(newPassword);\r\n  };\r\n\r\n  return (\r\n    <InputGroup size=\"md\">\r\n      <Input\r\n        name=\"Password\"\r\n        title=\"password\"\r\n        focusBorderColor={currentPalette.primary} //not dyanamic\r\n        value={passwordValue}\r\n        onChange={HandleChange}\r\n        variant=\"filled\"\r\n        autoComplete=\"off\"\r\n        pr=\"4.5rem\"\r\n        type={show ? \"text\" : \"password\"}\r\n        placeholder=\"password\"\r\n      />\r\n      <InputRightElement width=\"4.5rem\">\r\n        <Tooltip fontSize=\"sm\" label={!show ? \"show\" : \"hide\"}>\r\n          <Button\r\n            title=\"toogleview\"\r\n            h=\"1.75rem\"\r\n            size=\"sm\"\r\n            name=\"toggleview\"\r\n            onClick={handleClick}\r\n          >\r\n            {show ? <RiEyeFill /> : <RiEyeCloseFill />}\r\n          </Button>\r\n        </Tooltip>\r\n      </InputRightElement>\r\n    </InputGroup>\r\n  );\r\n}\r\nexport default PasswordInput;\r\n","export const passwordValidationInfo = [\r\n  \"At least one lowercase letter.\",\r\n  \"At least one uppercase letter.\",\r\n  \"At least one digit.\",\r\n  \"At least one special character.\",\r\n  \"Minimum length of 8 characters\",\r\n];\r\n\r\n// passwordd\r\n// At least one lowercase letter.\r\n// At least one uppercase letter.\r\n// At least one digit.\r\n// At least one special character.\r\n// Minimum length of 8 characters.\r\n\r\n//userName\r\n// Username should contain only alphanumeric characters and underscores\r\n\r\n//email\r\n//  The email address must follow the basic format of \"username@domain.com\".\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Tooltip,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { FcInfo } from \"react-icons/fc\";\r\nimport { passwordValidationInfo } from \"../../Data/LoginData/InputInfo\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LoginInfoModal({ loginPage }) {\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const OverlayOne = () => (\r\n    <ModalOverlay\r\n      bg=\"blackAlpha.300\"\r\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n    />\r\n  );\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [overlay, setOverlay] = React.useState(<OverlayOne />);\r\n\r\n  return (\r\n    <>\r\n      <Tooltip fontSize=\"sm\" label=\"Guidlines\">\r\n        <Button\r\n          title=\"guidelines\"\r\n          name=\"guidelines\"\r\n          size=\"xs\"\r\n          onClick={() => {\r\n            setOverlay(<OverlayOne />);\r\n            onOpen();\r\n          }}\r\n        >\r\n          <FcInfo className=\"hover:cursor-pointer text-lg\" />\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <Modal\r\n        isCentered\r\n        isOpen={isOpen}\r\n        scrollBehavior=\"inside\"\r\n        onClose={onClose}\r\n        size=\"xl\"\r\n      >\r\n        {overlay}\r\n        <ModalContent>\r\n          <ModalHeader>Follow GuideLines</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <>\r\n              {!loginPage && (\r\n                <>\r\n                  <div className=\"flex items-center gap-1\">\r\n                    {\" \"}\r\n                    <FcInfo />\r\n                    <b className=\"text-[15px]\">User Name </b>\r\n                  </div>\r\n                  <div className=\"flex flex-col gap-1 \">\r\n                    <span className=\"text-[10px] ps-2\">\r\n                      Username should be between <b> 3 </b> - <b>20</b>{\" \"}\r\n                      character, contain only <b>alphanumeric characters </b>{\" \"}\r\n                      and\r\n                      <b> underscores</b>\r\n                    </span>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div className=\"flex  gap-1 items-center \">\r\n                {\" \"}\r\n                <FcInfo />\r\n                <b className=\"text-[15px]\">Email </b>\r\n              </div>\r\n              <div className=\"flex flex-col gap-1 \">\r\n                <span className=\"text-[10px] ps-2\">\r\n                  The email address must follow the basic format of\r\n                  <b> username@domain.com </b>\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center gap-1\">\r\n                {\" \"}\r\n                <FcInfo />\r\n                <b className=\"text-[13px]\">Password </b>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col gap-1 \">\r\n                {passwordValidationInfo.map((data, i) => {\r\n                  return (\r\n                    <span key={i} className=\"text-[10px] ps-2\">\r\n                      {data}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              title=\"close\"\r\n              colorScheme={currentPalette.colorScheme}\r\n              onClick={onClose}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginInfoModal;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport {\r\n  validateEmail,\r\n  validatePassword,\r\n  validateUsername,\r\n} from \"../../Utils/AuthHelper\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useCallback } from \"react\";\r\nimport { setIsLoginPage, setSignUpLoading } from \"../../Redux/Slices/AuthSlice\";\r\n\r\nconst useSignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const signUp = useCallback(\r\n    async (userName, email, password) => {\r\n      // Validation\r\n\r\n      if (!userName || !email || !password) {\r\n        toast.error(\"Please fill all the required details\", {\r\n          position: \"bottom-left \",\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (!validateEmail(email)) {\r\n        toast.error(\"Email is invalid\", { position: \"bottom-left\" });\r\n        return;\r\n      }\r\n\r\n      if (!validatePassword(password)) {\r\n        toast.error(\"Password is invalid\", { position: \"bottom-left\" });\r\n        return;\r\n      }\r\n\r\n      if (!validateUsername(userName)) {\r\n        toast.error(\"Username is invalid\", { position: \"bottom-left\" });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Sending signup request\r\n        dispatch(setSignUpLoading(true));\r\n        const { data } = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_ORIGIN}/api/auth/signup`,\r\n          {\r\n            userName,\r\n            email,\r\n            password,\r\n          }\r\n        );\r\n\r\n        // Handling response\r\n        if (data.success) {\r\n          toast.success(data.message, { position: \"bottom-left\" });\r\n\r\n          dispatch(setIsLoginPage(true));\r\n        } else {\r\n          toast.error(data.message, { position: \"bottom-left\" });\r\n        }\r\n      } catch (error) {\r\n        // Error handling\r\n        if (error.response) {\r\n          toast.error(error.response.data.message, { position: \"bottom-left\" });\r\n        } else {\r\n          toast.error(\"An unexpected error occurred. Please try again later.\", {\r\n            position: \"bottom-left \",\r\n          });\r\n        }\r\n      } finally {\r\n        dispatch(setSignUpLoading(false));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    signUp,\r\n  };\r\n};\r\n\r\nexport default useSignUp;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { validateEmail, validatePassword } from \"../../Utils/AuthHelper\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setIsSignedIn, setSignInLoading } from \"../../Redux/Slices/AuthSlice\";\r\nimport { setUserDetails } from \"../../Redux/Slices/UserSlice\";\r\n\r\nconst useSignIn = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const signIn = useCallback(\r\n    async (email, password) => {\r\n      if (!email || !password) {\r\n        toast.error(\"Please fill all the required details\", {\r\n          position: \"bottom-left\",\r\n        });\r\n        return;\r\n      }\r\n      if (!validateEmail(email)) {\r\n        toast.error(\"Email is invalid\", { position: \"bottom-left\" });\r\n        return;\r\n      }\r\n      if (!validatePassword(password)) {\r\n        toast.error(\"Password is invalid\", { position: \"bottom-left\" });\r\n        return;\r\n      }\r\n      try {\r\n        dispatch(setSignInLoading(true));\r\n        const { data } = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_ORIGIN}/api/auth/signin`,\r\n          { email, password }\r\n        );\r\n        if (data.success) {\r\n          toast.success(data.message, { position: \"bottom-left\" });\r\n          dispatch(setUserDetails(data.user));\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n          localStorage.setItem(\"jwt_Token\", JSON.stringify(data.accessToken));\r\n          localStorage.setItem(\r\n            \"refresh_Token\",\r\n            JSON.stringify(data.refreshToken)\r\n          );\r\n\r\n          navigate(\"/dash\");\r\n          dispatch(setIsSignedIn(true));\r\n        } else {\r\n          toast.error(data.message, { position: \"bottom-left\" });\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          toast.error(error.response.data.message, { position: \"bottom-left\" });\r\n        } else {\r\n          toast.error(\"An unexpected error occurred. Please try again later.\", {\r\n            position: \"bottom-left \",\r\n          });\r\n        }\r\n      } finally {\r\n        dispatch(setSignInLoading(false));\r\n      }\r\n    },\r\n    [dispatch, navigate]\r\n  );\r\n  return {\r\n    signIn,\r\n  };\r\n};\r\nexport default useSignIn;\r\n","import { Button, Input } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport PasswordInput from \"./PasswordInput\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LoginInfoModal from \"./LoginInfoModal\";\r\nimport { LoginOptions } from \"../../Data/LoginData/LoginOption\";\r\nimport { useSelector } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\nimport useSignUp from \"../../Hooks/CustomAuthHooks/useSignUp\";\r\nimport useSignIn from \"../../Hooks/CustomAuthHooks/useSignIn\";\r\nconst Form = ({\r\n  email,\r\n  setEmail,\r\n  password,\r\n  setPassword,\r\n  userName,\r\n  setUserName,\r\n  handleClearForm,\r\n}) => {\r\n  const { signUp } = useSignUp();\r\n  const { signIn } = useSignIn();\r\n  const signUpLoading = useSelector((store) => store.auth.signUpLoading);\r\n  const signInLoading = useSelector((store) => store.auth.signInLoading);\r\n  const isLoginPage = useSelector((store) => store.auth.isLoginPage);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const HandlePasswordChange = (newPassword) => {\r\n    setPassword(newPassword);\r\n  };\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (isLoginPage) {\r\n        signIn(email, password);\r\n      } else {\r\n        signUp(userName, email, password);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"something went wrong\", { position: \"bottom-left\" });\r\n    } finally {\r\n      handleClearForm();\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={`${\r\n        !isLoginPage\r\n          ? \"flex py-5 px-3 flex-col  gap-2 items-center justify-center lg:order-2\"\r\n          : \"flex py-5 px-3 flex-col  gap-2 items-center justify-center \"\r\n      }`}\r\n    >\r\n      <h1 className=\"lg:text-3xl sm:text-xl font-bold\">\r\n        {isLoginPage ? \"Sign in\" : \"Create Account\"}\r\n      </h1>\r\n      <div className=\"Login Options  p-1 flex gap-1 justify-center\">\r\n        {LoginOptions?.map((data) => {\r\n          return (\r\n            <span\r\n              onClick={() =>\r\n                toast.success(\"this feature will be added soon\", {\r\n                  position: \"bottom-left\",\r\n                })\r\n              }\r\n              key={data.Name}\r\n              className=\"p-2 hover:cursor-pointer  border-black border-[1px] rounded-md shadow-lg \"\r\n            >\r\n              {data.Logo}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"flex gap-1 justify-center items-center\">\r\n        <p className=\"text-xs capitalize\">\r\n          {isLoginPage\r\n            ? \"sign in with your email and password\"\r\n            : \"Create your email and password\"}\r\n        </p>\r\n        <LoginInfoModal loginPage={isLoginPage} />\r\n      </div>\r\n      <form onSubmit={HandleSubmit} className=\"flex flex-col my-3 gap-2\">\r\n        {!isLoginPage && (\r\n          <Input\r\n            name=\"UserName\"\r\n            focusBorderColor={currentPalette.primary}\r\n            variant=\"filled\"\r\n            value={userName}\r\n            autoComplete=\"off\"\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            placeholder=\"User Name\"\r\n          />\r\n        )}\r\n        <Input\r\n          name=\"Email\"\r\n          variant=\"filled\"\r\n          focusBorderColor={currentPalette.primary}\r\n          errorBorderColor=\"crimson\"\r\n          value={email}\r\n          autoComplete=\"off\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n        />\r\n        <PasswordInput\r\n          onPasswordChange={HandlePasswordChange}\r\n          passwordValue={password}\r\n        />\r\n\r\n        <div className=\"flex justify-center\">\r\n          <Button\r\n            type=\"submit\"\r\n            title=\"subbmit\"\r\n            className=\"uppercase\"\r\n            onClick={HandleSubmit}\r\n            isLoading={signUpLoading || signInLoading}\r\n            loadingText={isLoginPage ? \"verifying\" : \"Siginning Up\"}\r\n            colorScheme={currentPalette.colorScheme}\r\n          >\r\n            {isLoginPage ? \"Sign In\" : \" Sign Up\"}\r\n          </Button>\r\n        </div>\r\n\r\n        <NavLink\r\n          title=\"forget password\"\r\n          onClick={() =>\r\n            toast.success(\"will be adding soon\", { position: \"bottom-left\" })\r\n          }\r\n          className=\"text-center mt-3 hover:underline hover:text-blue-500 text-xs\"\r\n        >\r\n          Forget your Password?\r\n        </NavLink>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Form;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setIsSignedIn } from \"../../Redux/Slices/AuthSlice\";\r\n\r\nconst useAutomaticLogin = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch the cookie from document.cookie\r\n    // const getCookie = (name) => {\r\n    //   const cookieValue = document.cookie\r\n    //     .split(\"; \")\r\n    //     .find((cookie) => cookie.startsWith(name + \"=\"));\r\n    //   if (cookieValue) {\r\n    //     console.log(\"yes cooke\");\r\n    //   } else {\r\n    //     console.log(\"no cookie\");\r\n    //   }\r\n    //   return cookieValue ? cookieValue.split(\"=\")[1] : null;\r\n    // };\r\n\r\n    // // Retrieve the 'aman' cookie\r\n    // const cookieValue = getCookie(\"aman\");\r\n    // console.log(cookieValue);\r\n\r\n    const loginWithToken = async (token) => {\r\n      try {\r\n        if (!token) {\r\n          throw new Error(\"No token found\");\r\n        }\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        const uid = user?.userId;\r\n        const { data } = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_ORIGIN}/api/auth/verify/${uid}`,\r\n          { token }\r\n        );\r\n\r\n        if (data?.success) {\r\n          // Dispatch user details if needed\r\n          dispatch(setIsSignedIn(true));\r\n          navigate(\"/dash\");\r\n        } else {\r\n          throw new Error(\"Invalid token\");\r\n        }\r\n      } catch (error) {\r\n        return null;\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n    if (!token) return;\r\n    loginWithToken(token);\r\n  }, [navigate, dispatch]);\r\n};\r\n\r\nexport default useAutomaticLogin;\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../../Layout/Layout\";\r\nimport LoginSidePanel from \"./LoginSidePanel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setIsLoginPage } from \"../../Redux/Slices/AuthSlice\";\r\nimport Form from \"./Form\";\r\nimport useAutomaticLogin from \"../../Hooks/CustomAuthHooks/useAutoLoginWithToken \";\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const isLoginPage = useSelector((store) => store.auth.isLoginPage);\r\n  const dispatch = useDispatch();\r\n\r\n  useAutomaticLogin();\r\n  const handleClearForm = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setUserName(\"\");\r\n  };\r\n\r\n  const HandlePage = () => {\r\n    handleClearForm();\r\n    dispatch(setIsLoginPage(!isLoginPage));\r\n  };\r\n\r\n  return (\r\n    <Layout title={isLoginPage ? \"Login Page\" : \"Register Page\"}>\r\n      <div className=\"h-screen lg:h-screen flex justify-center items-center m-2  lg:m-0   \">\r\n        <div className=\"lg:w-[65%] sm:w-[95%] lg:h-[87%]   border shadow-2xl grid lg:grid-cols-2  sm:grid-cols-1  gap-2 rounded-3xl \">\r\n          <Form\r\n            email={email}\r\n            setEmail={setEmail}\r\n            password={password}\r\n            setPassword={setPassword}\r\n            userName={userName}\r\n            setUserName={setUserName}\r\n            handleClearForm={handleClearForm}\r\n          />\r\n          <LoginSidePanel loginPage={isLoginPage} HandlePage={HandlePage} />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  FaGooglePlusG,\r\n  FaFacebookF,\r\n  FaGithub,\r\n  FaLinkedinIn,\r\n} from \"react-icons/fa\";\r\n\r\nexport const LoginOptions = [\r\n  {\r\n    Name: \"Google\",\r\n    Logo: <FaGooglePlusG />,\r\n  },\r\n  {\r\n    Name: \"FaceBook\",\r\n    Logo: <FaFacebookF />,\r\n  },\r\n  {\r\n    Name: \"GitHub\",\r\n    Logo: <FaGithub />,\r\n  },\r\n  {\r\n    Name: \"Linkedin\",\r\n    Logo: <FaLinkedinIn />,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nconst Layout = ({ children, title, description, keywords, author }) => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"keywords\" content={keywords} />\r\n        <meta name=\"author\" content={author} />\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {/* <Header /> */}\r\n      <main style={{ minHeight: \"70vh\" }}>\r\n        <Toaster />\r\n\r\n        {children}\r\n      </main>\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","// emailvalidation\r\nexport const validateEmail = (email) => {\r\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return re.test(email);\r\n};\r\n\r\n//password Validation\r\nexport const validatePassword = (password) => {\r\n  return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()\\-_=+{};:,<.>]).{8,}$/.test(\r\n    password\r\n  );\r\n};\r\n\r\nexport const validateMobileNumber = (mobileNumber) => {\r\n  return /^\\d{10}$/.test(mobileNumber);\r\n};\r\n//user name validation\r\nexport const validateUsername = (userName) => {\r\n  return /^[a-zA-Z0-9_]{3,20}$/.test(userName);\r\n};\r\n"],"names":["useGetServerInfo","serverRunning","setServerRunning","useState","loading","setLoading","serverFetched","setServerFetched","useEffect","checkServer","async","response","axios","get","concat","process","data","success","error","console","navigator","onLine","intervalId","setInterval","clearInterval","_ref","loginPage","HandlePage","currentPalette","useSelector","state","themes","palettes","_jsxs","style","backgroundColor","primary","className","children","_jsx","title","onClick","FcApproval","ImSpinner2","onPasswordChange","passwordValue","show","setShow","InputGroup","size","Input","name","focusBorderColor","value","onChange","e","newPassword","target","variant","autoComplete","pr","type","placeholder","InputRightElement","width","Tooltip","fontSize","label","Button","h","handleClick","RiEyeFill","RiEyeCloseFill","passwordValidationInfo","OverlayOne","ModalOverlay","bg","backdropFilter","isOpen","onOpen","onClose","useDisclosure","overlay","setOverlay","React","_Fragment","FcInfo","Modal","isCentered","scrollBehavior","ModalContent","ModalHeader","ModalCloseButton","ModalBody","map","i","ModalFooter","colorScheme","useSignUp","dispatch","useDispatch","signUp","useCallback","userName","email","password","validateEmail","validatePassword","validateUsername","setSignUpLoading","post","toast","message","position","setIsLoginPage","useSignIn","navigate","useNavigate","signIn","setSignInLoading","setUserDetails","user","localStorage","setItem","JSON","stringify","accessToken","refreshToken","setIsSignedIn","setEmail","setPassword","setUserName","handleClearForm","signUpLoading","store","auth","signInLoading","isLoginPage","HandleSubmit","preventDefault","LoginOptions","Logo","Name","LoginInfoModal","onSubmit","errorBorderColor","PasswordInput","isLoading","loadingText","NavLink","useAutomaticLogin","token","parse","getItem","Error","uid","userId","loginWithToken","Login","Layout","Form","LoginSidePanel","FaGooglePlusG","FaFacebookF","FaGithub","FaLinkedinIn","description","keywords","author","Helmet","charSet","content","minHeight","Toaster","test","validateMobileNumber","mobileNumber"],"sourceRoot":""}