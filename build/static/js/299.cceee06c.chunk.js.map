{"version":3,"file":"static/js/299.cceee06c.chunk.js","mappings":"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","sources":["Components/AwardsComponent/AwardModal.js","Hooks/CustomAwardHooks/useDeleteAward.js","Components/AwardsComponent/AwardCard.js","Components/AwardsComponent/AwardPage.js","Hooks/CustomAwardHooks/usGetAward.js","Utils/Formatter.js"],"sourcesContent":["import React, { lazy, useState, Suspense } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n  Tooltip,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { MdDarkMode } from \"react-icons/md\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MdOutlineLightMode } from \"react-icons/md\";\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo\";\r\nimport { FcPlus } from \"react-icons/fc\";\r\nconst AwardModalBody = React.lazy(() => import(\"../ModalBodys/AwardModalBody\"));\r\nconst AwardModal = ({ type, awardState }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure(); //modal use\r\n  const [updateClicked, setUpdateClicked] = useState(false);\r\n  const [createClicked, setCreateClicked] = useState(false);\r\n\r\n  //theme use\r\n  const currentMode = useSelector((state) => state.themes.currentPalette);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const [Mode, setMode] = useState(currentMode);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n\r\n  //isLoading\r\n  const isCreating = useSelector((store) => store.award.isAwardCreating);\r\n  const isUpdating = useSelector((store) => store.award.isAwardUpdating);\r\n\r\n  const handleModalBg = () => {\r\n    if (currentMode === \"light\" || Mode === \"light\") {\r\n      setMode(\"dark\");\r\n    } else {\r\n      setMode(\"light\");\r\n    }\r\n  };\r\n  const handleCreate = () => {\r\n    setCreateClicked(true);\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    const newTimeoutId = setTimeout(() => {\r\n      onClose();\r\n      setTimeoutId(null);\r\n    }, 100);\r\n  };\r\n  const handleUpdate = () => {\r\n    setUpdateClicked(true);\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n\r\n    const newTimeoutId = setTimeout(() => {\r\n      onClose();\r\n      setTimeoutId(null);\r\n    }, 100);\r\n  };\r\n  return (\r\n    <div className=\"sub-topics gap-2 flex justify-between items-center \">\r\n      {type === \"create\" ? (\r\n        <Tooltip label=\"Edit\">\r\n          <button\r\n            type=\"button\"\r\n            title=\"Add Achivement\"\r\n            onClick={() => {\r\n              onOpen();\r\n            }}\r\n            style={{ backgroundColor: currentPalette.accent }}\r\n            className=\"  p-1 rounded-md lg:px-4 px-2 font-semibold uppercase gap-3 flex items-center justify-center cursor-pointer transition duration-300 transform hover:scale-105\"\r\n          >\r\n            <span className=\"text-white text-sm lg:text-lg \"> Add </span>\r\n            <FcPlus />\r\n          </button>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip label=\"Update\">\r\n          <Button\r\n            size=\"sm\"\r\n            type=\"button\"\r\n            title=\"update Achivement\"\r\n            onClick={() => {\r\n              onOpen();\r\n            }}\r\n            className=\"  rounded-lg font-bold uppercase gap-3 flex items-center justify-center cursor-pointer transition duration-300 transform hover:scale-105\"\r\n          >\r\n            {ProfileCardLogos.edit}\r\n          </Button>\r\n        </Tooltip>\r\n      )}\r\n\r\n      <Modal\r\n        colorScheme={currentPalette.colorScheme}\r\n        scrollBehavior=\"inside\"\r\n        size=\"xl\"\r\n        isCentered\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n        <ModalContent\r\n          borderRadius=\"1rem\"\r\n          backgroundColor={`${Mode === \"dark\" ? \"#293645\" : \"white\"}`}\r\n          color={`${Mode === \"dark\" ? \"white\" : \"black\"}`}\r\n        >\r\n          <ModalHeader textTransform=\"capitalize\">\r\n            <div className=\"flex justify-between pe-9 items-center\">\r\n              {type === \"create\" ? \"Add Achivement\" : \"Update Achivement\"}\r\n              <Button title=\"theme mode\" size=\"xs\" onClick={handleModalBg}>\r\n                {Mode === \"dark\" ? <MdDarkMode /> : <MdOutlineLightMode />}\r\n              </Button>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"flex justify-center h-full \">\r\n                  <Spinner />\r\n                </div>\r\n              }\r\n            >\r\n              <AwardModalBody\r\n                setCreateClicked={setCreateClicked}\r\n                createClicked={createClicked}\r\n                updateClicked={updateClicked}\r\n                AwardState={awardState}\r\n                setUpdateClicked={setUpdateClicked}\r\n              />\r\n            </Suspense>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {type === \"create\" ? (\r\n              <Button\r\n                title=\"Create\"\r\n                size=\"sm\"\r\n                isLoading={isCreating}\r\n                loadingText=\"Saving\"\r\n                onClick={handleCreate}\r\n                colorScheme={currentPalette.colorScheme}\r\n              >\r\n                Create\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                size=\"sm\"\r\n                title=\"Update\"\r\n                isLoading={isUpdating}\r\n                loadingText=\"Updating\"\r\n                onClick={handleUpdate}\r\n                colorScheme={currentPalette.colorScheme}\r\n              >\r\n                Update\r\n              </Button>\r\n            )}\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AwardModal;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useGetAward from \"./usGetAward\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAwardIsDeleting } from \"../../Redux/Slices/AwardSlice\";\r\nconst useDeleteAward = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { getAllAward } = useGetAward();\r\n  const deleteAward = async (aid) => {\r\n    try {\r\n      dispatch(setAwardIsDeleting(true));\r\n      if (!aid) {\r\n        throw new Error(\"Please Provide ID\");\r\n      }\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const uid = user?.userId;\r\n      if (!token || !uid) {\r\n        navigate(\"/\");\r\n        return toast.error(\"Please Log In\", { position: \"bottom-left\" });\r\n      }\r\n\r\n      const { data } = await axios.delete(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/awards/${uid}/delete/${aid}`,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        toast.success(data.message, { position: \"bottom-left\" });\r\n        getAllAward();\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\", { position: \"bottom-left\" });\r\n    } finally {\r\n      dispatch(setAwardIsDeleting(false));\r\n    }\r\n  };\r\n\r\n  return {\r\n    deleteAward,\r\n  };\r\n};\r\n\r\nexport default useDeleteAward;\r\n","import React, { useState } from \"react\";\r\nimport { formatDate } from \"../../Utils/Formatter\";\r\nimport { Badge, Button, Tooltip } from \"@chakra-ui/react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaCopy, FaRegCopy } from \"react-icons/fa\";\r\nimport { MdDeleteOutline } from \"react-icons/md\";\r\nimport toast from \"react-hot-toast\";\r\nimport AwardModal from \"./AwardModal\";\r\nimport useDeleteAward from \"../../Hooks/CustomAwardHooks/useDeleteAward\";\r\nimport { FcApproval } from \"react-icons/fc\";\r\nconst AwardCard = ({ data }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const isDeleting = useSelector((store) => store.award.isAwardDeleting);\r\n  const dateReceived = formatDate(data.dateReceived);\r\n  const { deleteAward } = useDeleteAward();\r\n  const handleCopy = () => {\r\n    setCopied(true);\r\n    const textToCopy = `Company: ${data.companyOrInstitute},Role:${data.role} Receveing date  : ${dateReceived}, Description: ${data.description} `;\r\n    navigator.clipboard\r\n      .writeText(textToCopy)\r\n      .then(() => {\r\n        toast.success(\"Task Copied\", { position: \"bottom-left\" });\r\n        const timeoutId = setTimeout(() => setCopied(false), 2000);\r\n        return () => clearTimeout(timeoutId);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to copy text:\", error);\r\n      });\r\n  };\r\n  const handleDelete = () => {\r\n    deleteAward(data._id);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"h-64  p-2 lg:w-96  w-full  shadow-2xl rounded-xl\"\r\n      style={{ backgroundColor: currentPalette.primary }}\r\n    >\r\n      <div className=\"flex px-2 py-1 justify-between items-center\">\r\n        <div className=\"flex gap-1 items-center\">\r\n          <span className=\"font-semibold text-md lg:text-lg uppercase\">\r\n            {data.role}\r\n          </span>\r\n\r\n          <FcApproval />\r\n        </div>\r\n\r\n        <div className=\"flex gap-1    justify-start items-center\">\r\n          <Tooltip label=\"Delete\">\r\n            <Button\r\n              title=\"delete\"\r\n              size=\"sm\"\r\n              isLoading={isDeleting}\r\n              onClick={handleDelete}\r\n              color=\"red\"\r\n            >\r\n              <MdDeleteOutline className=\"\" />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip label={copied ? \"Copied!\" : \"Copy\"}>\r\n            <Button title=\"copy\" size=\"sm\" onClick={handleCopy}>\r\n              {copied ? <FaCopy /> : <FaRegCopy />}\r\n            </Button>\r\n          </Tooltip>\r\n          <AwardModal type=\"update\" awardState={data} />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"flex p-2 gap-2 flex-col\">\r\n        <div className=\"flex justify-between items-center  \">\r\n          <span className=\"capitalize text-md\">\r\n            {data.companyOrInstitute.substring(0, 20)}\r\n          </span>\r\n          <Badge fontSize=\"x-small\">{dateReceived}</Badge>\r\n        </div>\r\n        <div\r\n          className=\"p-2 rounded-md shadow-inner overflow-hidden h-32\"\r\n          style={{ backgroundColor: currentPalette.accent, overflowY: \"auto\" }}\r\n        >\r\n          <p\r\n            className=\"text-sm\"\r\n            style={{\r\n              scrollbarWidth: \"none\",\r\n              msOverflowStyle: \"none\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {data.description}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AwardCard;\r\n","import React, { useEffect } from \"react\";\r\nimport Layout from \"../../Layout/Layout\";\r\nimport SideBar from \"../DashBoardComponents/SideBar\";\r\nimport MainHeader from \"../DashBoardComponents/MainHeader\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navigation from \"../ResuableComponent/Navigation\";\r\nimport AwardModal from \"./AwardModal\";\r\nimport useGetAward from \"../../Hooks/CustomAwardHooks/usGetAward\";\r\nimport AwardCard from \"./AwardCard\";\r\n\r\nconst AwardPage = () => {\r\n  const { getAllAward } = useGetAward();\r\n  const allAwards = useSelector((store) => store.award.myAwards);\r\n  useEffect(() => {\r\n    getAllAward();\r\n  }, []);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  return (\r\n    <Layout\r\n      title=\"Achivement  Page\"\r\n      keywords=\"Achivements, role, certificates,grade, info,data,seo,\"\r\n    >\r\n      <div\r\n        style={{ backgroundColor: currentPalette.secondary }}\r\n        className=\"grid grid-cols-12 text-white min-h-svh\"\r\n      >\r\n        <SideBar />\r\n        <div className=\"col-span-11 lg:p-3 w-screen md:w-full  lg:w-full  \">\r\n          <MainHeader />\r\n          <div className=\"lg:p-3 p-1   w-full\">\r\n            <div className=\"flex justify-between shadow-2xl rounded-2xl items-center lg:px-12 px-1\">\r\n              <AwardModal type=\"create\" />\r\n              <Navigation size=\"4\" />\r\n            </div>\r\n            <div className=\"flex w-full  flex-wrap gap-3 justify-center items-center  p-4 \">\r\n              {allAwards.map((data, i) => {\r\n                return <AwardCard key={i} data={data} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AwardPage;\r\n","import axios from \"axios\"; // Assuming axios is installed and imported\r\nimport toast from \"react-hot-toast\"; // Assuming toast is imported correctly\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setMyAwards } from \"../../Redux/Slices/AwardSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst useGetAward = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const getAllAward = async () => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const uid = user?.userId;\r\n      if (!uid || !token) {\r\n        toast.error(\"Please Log In\", { position: \"bottom-left\" });\r\n        return navigate(\"/\");\r\n      }\r\n      const { data } = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/awards/${uid}`,\r\n        { headers: { Authorization: token } }\r\n      );\r\n      if (data.success) {\r\n        dispatch(setMyAwards(data.awards));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error in fetching the award :\", error);\r\n      toast.error(\"Something went wrong\", { position: \"bottom-left\" });\r\n    }\r\n  };\r\n\r\n  return {\r\n    getAllAward,\r\n  };\r\n};\r\n\r\nexport default useGetAward;\r\n","export const formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const options = { day: \"2-digit\", month: \"short\", year: \"2-digit\" };\r\n  const formattedDate = date.toLocaleDateString(\"en-US\", options);\r\n  const [month, day, year] = formattedDate.split(\" \");\r\n  return `${day}${month}-${year}`;\r\n};\r\n"],"names":["AwardModalBody","React","_ref","type","awardState","isOpen","onOpen","onClose","useDisclosure","updateClicked","setUpdateClicked","useState","createClicked","setCreateClicked","currentMode","useSelector","state","themes","currentPalette","palettes","Mode","setMode","timeoutId","setTimeoutId","isCreating","store","award","isAwardCreating","isUpdating","isAwardUpdating","_jsxs","className","children","_jsx","Tooltip","label","title","onClick","style","backgroundColor","accent","FcPlus","Button","size","ProfileCardLogos","edit","Modal","colorScheme","scrollBehavior","isCentered","ModalContent","borderRadius","concat","color","ModalHeader","textTransform","handleModalBg","MdDarkMode","MdOutlineLightMode","ModalCloseButton","ModalBody","Suspense","fallback","Spinner","AwardState","ModalFooter","isLoading","loadingText","handleCreate","clearTimeout","setTimeout","handleUpdate","useDeleteAward","navigate","useNavigate","dispatch","useDispatch","getAllAward","useGetAward","deleteAward","async","setAwardIsDeleting","aid","Error","user","JSON","parse","localStorage","getItem","token","uid","userId","toast","error","position","data","axios","delete","process","headers","Authorization","success","message","copied","setCopied","isDeleting","isAwardDeleting","dateReceived","formatDate","primary","role","FcApproval","handleDelete","_id","MdDeleteOutline","handleCopy","textToCopy","companyOrInstitute","description","navigator","clipboard","writeText","then","catch","console","FaCopy","FaRegCopy","AwardModal","substring","Badge","fontSize","overflowY","scrollbarWidth","msOverflowStyle","overflow","AwardPage","allAwards","myAwards","useEffect","Layout","keywords","secondary","SideBar","MainHeader","Navigation","map","i","AwardCard","get","setMyAwards","awards","dateString","formattedDate","Date","toLocaleDateString","day","month","year","split"],"sourceRoot":""}