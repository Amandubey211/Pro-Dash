{"version":3,"file":"static/js/617.f81cb7a6.chunk.js","mappings":"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","sources":["Assets/DashboardAssets/TaskListAsset/EmptyList.svg","Components/DashBoardComponents/EmptyList.js","Components/ExperienceComponent/ExperienceModal.js","Hooks/CustomExperienceHooks/useDeleteExperience.js","Components/ExperienceComponent/ExperienceCard.js","Components/ExperienceComponent/ExperiencePage.js","Hooks/CustomExperienceHooks/useGetExperience.js","Utils/Formatter.js"],"sourcesContent":["var _ellipse, _circle, _circle2, _circle3, _circle4, _path, _path2, _path3, _path4, _path5, _circle5, _path6, _path7, _path8, _path9, _polygon, _path10, _circle6, _circle7, _circle8, _circle9;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEmptyList(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 797.5,\n    height: 834.5,\n    viewBox: \"0 0 797.5 834.5\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"void\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 308.5,\n    cy: 780,\n    rx: 308.5,\n    ry: 54.5,\n    fill: \"#3f3d56\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 496,\n    cy: 301.5,\n    r: 301.5,\n    fill: \"#3f3d56\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 496,\n    cy: 301.5,\n    r: 248.89787,\n    opacity: 0.05\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 496,\n    cy: 301.5,\n    r: 203.99362,\n    opacity: 0.05\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 496,\n    cy: 301.5,\n    r: 146.25957,\n    opacity: 0.05\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M398.42029,361.23224s-23.70394,66.72221-13.16886,90.42615,27.21564,46.52995,27.21564,46.52995S406.3216,365.62186,398.42029,361.23224Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#d0cde1\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M398.42029,361.23224s-23.70394,66.72221-13.16886,90.42615,27.21564,46.52995,27.21564,46.52995S406.3216,365.62186,398.42029,361.23224Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    opacity: 0.1\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415.10084,515.74682s-1.75585,16.68055-2.63377,17.55847.87792,2.63377,0,5.26754-1.75585,6.14547,0,7.02339-9.65716,78.13521-9.65716,78.13521-28.09356,36.8728-16.68055,94.81576l3.51169,58.82089s27.21564,1.75585,27.21564-7.90132c0,0-1.75585-11.413-1.75585-16.68055s4.38962-5.26754,1.75585-7.90131-2.63377-4.38962-2.63377-4.38962,4.38961-3.51169,3.51169-4.38962,7.90131-63.2105,7.90131-63.2105,9.65716-9.65716,9.65716-14.92471v-5.26754s4.38962-11.413,4.38962-12.29093,23.70394-54.43127,23.70394-54.43127l9.65716,38.62864,10.53509,55.3092s5.26754,50.04165,15.80262,69.356c0,0,18.4364,63.21051,18.4364,61.45466s30.72733-6.14547,29.84941-14.04678-18.4364-118.5197-18.4364-118.5197L533.62054,513.991Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#2f2e41\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M391.3969,772.97846s-23.70394,46.53-7.90131,48.2858,21.94809,1.75585,28.97148-5.26754c3.83968-3.83968,11.61528-8.99134,17.87566-12.87285a23.117,23.117,0,0,0,10.96893-21.98175c-.463-4.29531-2.06792-7.83444-6.01858-8.16366-10.53508-.87792-22.826-10.53508-22.826-10.53508Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#2f2e41\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M522.20753,807.21748s-23.70394,46.53-7.90131,48.28581,21.94809,1.75584,28.97148-5.26754c3.83968-3.83969,11.61528-8.99134,17.87566-12.87285a23.117,23.117,0,0,0,10.96893-21.98175c-.463-4.29531-2.06792-7.83444-6.01857-8.16367-10.53509-.87792-22.826-10.53508-22.826-10.53508Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#2f2e41\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 295.90488,\n    cy: 215.43252,\n    r: 36.90462,\n    fill: \"#ffb8b8\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M473.43048,260.30832S447.07,308.81154,444.9612,308.81154,492.41,324.62781,492.41,324.62781s13.70743-46.39439,15.81626-50.61206Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#ffb8b8\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M513.86726,313.3854s-52.67543-28.97148-57.943-28.09356-61.45466,50.04166-60.57673,70.2339,7.90131,53.55335,7.90131,53.55335,2.63377,93.05991,7.90131,93.93783-.87792,16.68055.87793,16.68055,122.90931,0,123.78724-2.63377S513.86726,313.3854,513.86726,313.3854Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#d0cde1\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M543.2777,521.89228s16.68055,50.91958,2.63377,49.16373-20.19224-43.89619-20.19224-43.89619Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#ffb8b8\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M498.50359,310.31267s-32.48318,7.02339-27.21563,50.91957,14.9247,87.79237,14.9247,87.79237l32.48318,71.11182,3.51169,13.16886,23.70394-6.14547L528.353,425.32067s-6.14547-108.86253-14.04678-112.37423A33.99966,33.99966,0,0,0,498.50359,310.31267Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#d0cde1\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"277.5 414.958 317.885 486.947 283.86 411.09 277.5 414.958\",\n    opacity: 0.1\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M533.896,237.31585l.122-2.82012,5.6101,1.39632a6.26971,6.26971,0,0,0-2.5138-4.61513l5.97581-.33413a64.47667,64.47667,0,0,0-43.1245-26.65136c-12.92583-1.87346-27.31837.83756-36.182,10.43045-4.29926,4.653-7.00067,10.57018-8.92232,16.60685-3.53926,11.11821-4.26038,24.3719,3.11964,33.40938,7.5006,9.18513,20.602,10.98439,32.40592,12.12114,4.15328.4,8.50581.77216,12.35457-.83928a29.721,29.721,0,0,0-1.6539-13.03688,8.68665,8.68665,0,0,1-.87879-4.15246c.5247-3.51164,5.20884-4.39635,8.72762-3.9219s7.74984,1.20031,10.062-1.49432c1.59261-1.85609,1.49867-4.559,1.70967-6.99575C521.28248,239.785,533.83587,238.70653,533.896,237.31585Z\",\n    transform: \"translate(-201.25 -32.75)\",\n    fill: \"#2f2e41\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 559,\n    cy: 744.5,\n    r: 43,\n    fill: \"#6c63ff\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 54,\n    cy: 729.5,\n    r: 43,\n    fill: \"#6c63ff\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 54,\n    cy: 672.5,\n    r: 31,\n    fill: \"#6c63ff\"\n  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 54,\n    cy: 624.5,\n    r: 22,\n    fill: \"#6c63ff\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEmptyList);\nexport default __webpack_public_path__ + \"static/media/EmptyList.c788c5714e75190572683f329d0c04fa.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport emptyList from \"../../Assets/DashboardAssets/TaskListAsset/EmptyList.svg\";\r\nconst EmptyList = ({ message }) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-2 justify-center p-5 items-center\">\r\n      <img className=\"h-20 w-20\" src={emptyList} alt=\"empty task  banner\" />\r\n      <span className=\"text-sm font-light\">{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyList;\r\n","import React, { lazy, useState, Suspense } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n  Tooltip,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { MdDarkMode } from \"react-icons/md\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MdOutlineLightMode } from \"react-icons/md\";\r\n\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo.js\";\r\nimport { FcPlus } from \"react-icons/fc\";\r\n\r\nconst ExperienceModal = ({ type, experiencState }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure(); //modal use\r\n  const ExperienceModalBody = React.lazy(() =>\r\n    import(\"../ModalBodys/ExperienceModalBody.js\")\r\n  );\r\n  const [updateClicked, setUpdateClicked] = useState(false);\r\n  const [createClicked, setCreateClicked] = useState(false);\r\n\r\n  //theme use\r\n  const currentMode = useSelector((state) => state.themes.currentPalette);\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const [Mode, setMode] = useState(currentMode);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n\r\n  //isLoading\r\n\r\n  const handleModalBg = () => {\r\n    if (currentMode === \"light\" || Mode === \"light\") {\r\n      setMode(\"dark\");\r\n    } else {\r\n      setMode(\"light\");\r\n    }\r\n  };\r\n  const handleCreate = () => {\r\n    setCreateClicked(true);\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    const newTimeoutId = setTimeout(() => {\r\n      onClose();\r\n      setTimeoutId(null);\r\n    }, 100);\r\n  };\r\n  const handleUpdate = () => {\r\n    setUpdateClicked(true);\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n\r\n    const newTimeoutId = setTimeout(() => {\r\n      onClose();\r\n      setTimeoutId(null);\r\n    }, 100);\r\n  };\r\n  return (\r\n    <div className=\"sub-topics gap-2 flex justify-center items-center \">\r\n      {type === \"create\" ? (\r\n        <Tooltip label=\"Edit\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onOpen();\r\n            }}\r\n            style={{ backgroundColor: currentPalette.accent }}\r\n            className=\"  p-1 rounded-md lg:px-4 px-2 font-semibold uppercase gap-3 flex items-center justify-center cursor-pointer transition duration-300 transform hover:scale-105\"\r\n          >\r\n            <span className=\"text-white text-sm lg:text-lg \"> Add </span>\r\n            <FcPlus />\r\n          </button>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip label=\"Update\">\r\n          <Button\r\n            size=\"sm\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onOpen();\r\n            }}\r\n            className=\"  rounded-lg font-bold uppercase gap-3 flex items-center justify-center cursor-pointer transition duration-300 transform hover:scale-105\"\r\n          >\r\n            {ProfileCardLogos.edit}\r\n          </Button>\r\n        </Tooltip>\r\n      )}\r\n\r\n      <Modal\r\n        colorScheme={currentPalette.colorScheme}\r\n        scrollBehavior=\"inside\"\r\n        size=\"xl\"\r\n        isCentered\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n        <ModalContent\r\n          borderRadius=\"1rem\"\r\n          backgroundColor={`${Mode === \"dark\" ? \"#293645\" : \"white\"}`}\r\n          color={`${Mode === \"dark\" ? \"white\" : \"black\"}`}\r\n        >\r\n          <ModalHeader textTransform=\"capitalize\">\r\n            <div className=\"flex justify-between pe-9 items-center\">\r\n              {type === \"create\" ? \"Add experience\" : \"Update Experience\"}\r\n              <Button title=\"theme mode\" size=\"xs\" onClick={handleModalBg}>\r\n                {Mode === \"dark\" ? <MdDarkMode /> : <MdOutlineLightMode />}\r\n              </Button>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"flex justify-center h-full \">\r\n                  <Spinner />\r\n                </div>\r\n              }\r\n            >\r\n              <ExperienceModalBody\r\n                updateClicked={updateClicked}\r\n                setUpdateClicked={setUpdateClicked}\r\n                setCreateClicked={setCreateClicked}\r\n                createClicked={createClicked}\r\n                experienceState={experiencState}\r\n              />\r\n            </Suspense>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {type === \"create\" ? (\r\n              <Button\r\n                title=\"create\"\r\n                size=\"sm\"\r\n                loadingText=\"Saving\"\r\n                onClick={handleCreate}\r\n                colorScheme={currentPalette.colorScheme}\r\n              >\r\n                Create\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                size=\"sm\"\r\n                title=\"Update\"\r\n                loadingText=\"Updating\"\r\n                onClick={handleUpdate}\r\n                colorScheme={currentPalette.colorScheme}\r\n              >\r\n                Update\r\n              </Button>\r\n            )}\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceModal;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useGetExperience from \"./useGetExperience\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setIsExperienceDeleting } from \"../../Redux/Slices/ExperienceSlice\";\r\n\r\nconst useDeleteExperience = () => {\r\n  const navigate = useNavigate();\r\n  const { getExperience } = useGetExperience();\r\n  const dispatch = useDispatch();\r\n  const deleteExperience = async (eid) => {\r\n    try {\r\n      dispatch(setIsExperienceDeleting(true));\r\n      if (!eid) {\r\n        throw new Error(\"Please Provide ID\");\r\n      }\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const uid = user?.userId;\r\n      if (!token || !uid) {\r\n        navigate(\"/\");\r\n        return toast.error(\"Please Log In\", { position: \"bottom-left\" });\r\n      }\r\n\r\n      const { data } = await axios.delete(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/experience/${uid}/delete/${eid}`,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        toast.success(data.message, { position: \"bottom-left\" });\r\n        getExperience();\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\", { position: \"bottom-left\" });\r\n    } finally {\r\n      dispatch(setIsExperienceDeleting(false));\r\n    }\r\n  };\r\n\r\n  return {\r\n    deleteExperience,\r\n  };\r\n};\r\n\r\nexport default useDeleteExperience;\r\n","import React, { useState } from \"react\";\r\nimport { formatDate } from \"../../Utils/Formatter\";\r\nimport { Badge, Button, Tooltip } from \"@chakra-ui/react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaCopy, FaRegCopy } from \"react-icons/fa\";\r\nimport { MdDeleteOutline } from \"react-icons/md\";\r\nimport ExperienceModal from \"./ExperienceModal\";\r\nimport toast from \"react-hot-toast\";\r\nimport useDeleteExperience from \"../../Hooks/CustomExperienceHooks/useDeleteExperience\";\r\nimport { FcApproval } from \"react-icons/fc\";\r\n\r\nconst ExperienceCard = ({ data }) => {\r\n  const startDate = formatDate(data.startDate);\r\n  const endDate = formatDate(data.endDate);\r\n  const [copied, setCopied] = useState(false);\r\n  const { deleteExperience } = useDeleteExperience();\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n\r\n  const handleCopy = () => {\r\n    setCopied(true);\r\n    const textToCopy = `Company: ${data.company},Role:${\r\n      data.role\r\n    } From : ${startDate}- ${endDate}, Description: ${\r\n      data.description\r\n    } skills Used : ${data.skillsUsed.map((data) => {\r\n      return data;\r\n    })}`;\r\n    navigator.clipboard\r\n      .writeText(textToCopy)\r\n      .then(() => {\r\n        toast.success(\"Task Copied\", { position: \"bottom-left\" });\r\n        const timeoutId = setTimeout(() => setCopied(false), 2000);\r\n        return () => clearTimeout(timeoutId);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to copy text:\", error);\r\n      });\r\n  };\r\n  const handleDelete = () => {\r\n    deleteExperience(data._id);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"h-80  p-2 lg:w-96 w-full  shadow-2xl rounded-xl\"\r\n      style={{ backgroundColor: currentPalette.primary }}\r\n    >\r\n      <div className=\"flex px-2 py-1 justify-between items-center\">\r\n        <span className=\"font-semibold text-lg uppercase\">{data.company}</span>\r\n\r\n        <div className=\"flex gap-1    justify-start items-center\">\r\n          <Tooltip label=\"Delete\">\r\n            <Button\r\n              title=\"delete  Experience\"\r\n              size=\"sm\"\r\n              onClick={handleDelete}\r\n              color=\"red\"\r\n            >\r\n              <MdDeleteOutline className=\"\" />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip label={copied ? \"Copied!\" : \"Copy\"}>\r\n            <Button title=\"copy Experience Info\" size=\"sm\" onClick={handleCopy}>\r\n              {copied ? <FaCopy /> : <FaRegCopy />}\r\n            </Button>\r\n          </Tooltip>\r\n          <ExperienceModal type=\"update\" experiencState={data} />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"flex p-2 gap-2 flex-col\">\r\n        <div className=\"flex justify-between items-center  \">\r\n          <div className=\"flex gap-1 items-center\">\r\n            <span className=\"font-semibold  capitalize text-md\">\r\n              {\" \"}\r\n              {data.role.substring(0, 20)}\r\n            </span>\r\n\r\n            <FcApproval />\r\n          </div>\r\n          <span className=\"text-xs\">\r\n            {startDate} - {endDate}\r\n          </span>\r\n        </div>\r\n        <div className=\"flex justify-start \">\r\n          {\" \"}\r\n          <Badge fontSize=\"xx-small\">Description</Badge>\r\n        </div>\r\n\r\n        <div\r\n          className=\"p-2 rounded-md shadow-inner overflow-hidden h-32\"\r\n          style={{ backgroundColor: currentPalette.accent, overflowY: \"auto\" }}\r\n        >\r\n          <p\r\n            className=\"text-sm\"\r\n            style={{\r\n              scrollbarWidth: \"none\",\r\n              msOverflowStyle: \"none\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {data.description}\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <div className=\"flex flex-col   \">\r\n          <div className=\"flex justify-start\">\r\n            <b className=\"text-sm\">Skills Used</b>\r\n          </div>\r\n          <div className=\"flex items-center  flex-wrap py-2 gap-2 px-4 \">\r\n            {data?.skillsUsed.length === 0 && (\r\n              <div className=\"text-center\">No Data Found</div>\r\n            )}\r\n            {data?.skillsUsed.map((data, i) => {\r\n              return (\r\n                <Badge fontSize=\"x-small\" key={i}>\r\n                  {data}\r\n                </Badge>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceCard;\r\n","import React, { useEffect } from \"react\";\r\nimport Layout from \"../../Layout/Layout\";\r\nimport MainHeader from \"../DashBoardComponents/MainHeader\";\r\nimport SideBar from \"../DashBoardComponents/SideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navigation from \"../ResuableComponent/Navigation\";\r\nimport ProfessionalInfoModal from \"./ExperienceModal\";\r\nimport useGetExperience from \"../../Hooks/CustomExperienceHooks/useGetExperience\";\r\nimport ExperienceCard from \"./ExperienceCard\";\r\nimport { Badge } from \"@chakra-ui/react\";\r\nimport EmptyList from \"../DashBoardComponents/EmptyList\";\r\n\r\nconst ExperiencePage = () => {\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const { getExperience } = useGetExperience();\r\n  const allExperience = useSelector((store) => store.experience.allExperience);\r\n\r\n  useEffect(() => {\r\n    getExperience();\r\n  }, []);\r\n  return (\r\n    <Layout\r\n      title=\"Experience  Page\"\r\n      keywords=\"Experience, compony, role, info,data,seo,\"\r\n    >\r\n      <div\r\n        style={{ backgroundColor: currentPalette.secondary }}\r\n        className=\"grid grid-cols-12 text-white min-h-svh\"\r\n      >\r\n        <SideBar />\r\n        <div className=\"col-span-11 lg:p-3 w-screen md:w-full  lg:w-full  \">\r\n          <MainHeader />\r\n          <div className=\"lg:p-3 p-1   w-full\">\r\n            <div className=\"flex justify-between rounded-2xl items-center lg:px-12 px-1\">\r\n              <ProfessionalInfoModal type=\"create\" />\r\n\r\n              <Navigation size=\"4\" />\r\n            </div>\r\n          </div>\r\n          <span className=\"text-xs ps-6\">\r\n            {\" \"}\r\n            Experiences ({allExperience?.length || 0})\r\n          </span>\r\n          <div className=\"lg:p-3 p-2 w-full flex flex-wrap gap-2 lg:gap-5 items-center justify-evenly\">\r\n            {allExperience.length === 0 ? (\r\n              <EmptyList message=\"No Experience Found\" />\r\n            ) : (\r\n              <>\r\n                {\" \"}\r\n                {allExperience\r\n                  .slice()\r\n                  .reverse()\r\n                  .map((data) => {\r\n                    return <ExperienceCard key={data._id} data={data} />;\r\n                  })}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ExperiencePage;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setAllExperience } from \"../../Redux/Slices/ExperienceSlice\";\r\n\r\nconst useGetExperience = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const getExperience = async () => {\r\n    try {\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const uid = user?.userId;\r\n      if (!token || !uid) {\r\n        navigate(\"/\");\r\n        return toast.error(\"Please Log In\");\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/experience/${uid}`,\r\n        { headers: { Authorization: token } }\r\n      );\r\n      if (data.success) {\r\n        dispatch(setAllExperience(data.allExperiences));\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\", { position: \"bottom-left\" });\r\n    }\r\n  };\r\n\r\n  return {\r\n    getExperience,\r\n  };\r\n};\r\n\r\nexport default useGetExperience;\r\n","export const formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const options = { day: \"2-digit\", month: \"short\", year: \"2-digit\" };\r\n  const formattedDate = date.toLocaleDateString(\"en-US\", options);\r\n  const [month, day, year] = formattedDate.split(\" \");\r\n  return `${day}${month}-${year}`;\r\n};\r\n"],"names":["_ref","message","_jsxs","className","children","_jsx","src","emptyList","alt","type","experiencState","isOpen","onOpen","onClose","useDisclosure","ExperienceModalBody","React","updateClicked","setUpdateClicked","useState","createClicked","setCreateClicked","currentMode","useSelector","state","themes","currentPalette","palettes","Mode","setMode","timeoutId","setTimeoutId","Tooltip","label","onClick","style","backgroundColor","accent","FcPlus","Button","size","ProfileCardLogos","edit","Modal","colorScheme","scrollBehavior","isCentered","ModalContent","borderRadius","concat","color","ModalHeader","textTransform","title","handleModalBg","MdDarkMode","MdOutlineLightMode","ModalCloseButton","ModalBody","Suspense","fallback","Spinner","experienceState","ModalFooter","loadingText","handleCreate","clearTimeout","setTimeout","handleUpdate","useDeleteExperience","navigate","useNavigate","getExperience","useGetExperience","dispatch","useDispatch","deleteExperience","async","setIsExperienceDeleting","eid","Error","user","JSON","parse","localStorage","getItem","token","uid","userId","toast","error","position","data","axios","delete","process","headers","Authorization","success","startDate","formatDate","endDate","copied","setCopied","primary","company","handleDelete","_id","MdDeleteOutline","handleCopy","textToCopy","role","description","skillsUsed","map","navigator","clipboard","writeText","then","catch","console","FaCopy","FaRegCopy","ExperienceModal","substring","FcApproval","Badge","fontSize","overflowY","scrollbarWidth","msOverflowStyle","overflow","length","i","ExperiencePage","allExperience","store","experience","useEffect","Layout","keywords","secondary","SideBar","MainHeader","ProfessionalInfoModal","Navigation","EmptyList","_Fragment","slice","reverse","ExperienceCard","get","setAllExperience","allExperiences","dateString","formattedDate","Date","toLocaleDateString","day","month","year","split"],"sourceRoot":""}