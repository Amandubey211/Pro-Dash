{"version":3,"file":"static/js/67.aa6ccaaf.chunk.js","mappings":"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","sources":["Hooks/CustomUserInfoHooks/useManagePersonalInfo.js","Components/ModalBodys/UserInfoModal.js","Hooks/CustomUserInfoHooks/useGetUserPersonalInfo.js","Utils/AuthHelper.js"],"sourcesContent":["import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setIsLoading,\r\n  setUserPersonalInfo,\r\n} from \"../../Redux/Slices/UserSlice.js\";\r\nimport { validateEmail, validateMobileNumber } from \"../../Utils/AuthHelper.js\";\r\nimport useGetUserPersonalInfo from \"./useGetUserPersonalInfo.js\";\r\n\r\nconst useManagePersonalInfo = () => {\r\n  const dispatch = useDispatch();\r\n  const { getProfileCompletness } = useGetUserPersonalInfo();\r\n  const validateFields = (personalInfo) => {\r\n    const requiredFields = [\r\n      \"firstName\",\r\n      \"lastName\",\r\n      \"mobNumber\",\r\n      \"city\",\r\n      \"email\",\r\n      \"gender\",\r\n      \"headline\",\r\n    ];\r\n    const missingFields = requiredFields.filter(\r\n      (field) => !personalInfo[field]\r\n    );\r\n\r\n    if (missingFields.length > 0) {\r\n      toast.error(`Missing fields: ${missingFields.join(\", \")}`, {\r\n        position: \"bottom-left \",\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!validateEmail(personalInfo.email)) {\r\n      toast.error(\"Invalid email format\", { position: \"bottom-left \" });\r\n      return false;\r\n    }\r\n\r\n    if (!validateMobileNumber(personalInfo.mobNumber)) {\r\n      toast.error(\"Invalid Number format\", { position: \"bottom-left \" });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const managePersonalInfo = async (personalInfo) => {\r\n    try {\r\n      dispatch(setIsLoading(true));\r\n\r\n      if (!validateFields(personalInfo)) return;\r\n\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const uid = user?.userId;\r\n      const { data } = await axios.post(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/info/manage/${uid}`,\r\n        { personalInfo },\r\n        { headers: { Authorization: token } }\r\n      );\r\n\r\n      if (data?.success) {\r\n        toast.success(data?.message, { position: \"bottom-left\" });\r\n        dispatch(setUserPersonalInfo(data?.userInfo));\r\n        getProfileCompletness(uid);\r\n      } else {\r\n        toast.error(message, { position: \"bottom-left\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\", { position: \"bottom-left\" });\r\n    } finally {\r\n      dispatch(setIsLoading(false));\r\n    }\r\n  };\r\n\r\n  return { managePersonalInfo };\r\n};\r\n\r\nexport default useManagePersonalInfo;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Radio,\r\n  RadioGroup,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\nimport { BsCardHeading } from \"react-icons/bs\";\r\nimport ProfileCardLogos from \"../../Data/DashboardData/ProfileCardLogo\";\r\nimport useManagePersonalInfo from \"../../Hooks/CustomUserInfoHooks/useManagePersonalInfo\";\r\nimport { IoLogoLinkedin } from \"react-icons/io5\";\r\nimport { FcLike } from \"react-icons/fc\";\r\n\r\nconst UserInfoModal = ({\r\n  personalInfoButtonClicked,\r\n  setPersonalInfoButtonClicked,\r\n}) => {\r\n  const user = useSelector((store) => store.user.userDetails);\r\n  const { managePersonalInfo } = useManagePersonalInfo();\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n  const PersonalInfo = useSelector((store) => store.user.userPersonalInfo);\r\n  const [userInfo, setUserInfo] = useState({\r\n    userId: user?.id,\r\n    firstName: PersonalInfo.firstName || \"\",\r\n    lastName: PersonalInfo?.lastName || \"\",\r\n    mobNumber: PersonalInfo?.mobNumber || \"\",\r\n    city: PersonalInfo?.city || \"\",\r\n    email: PersonalInfo?.email || \"\",\r\n    links: PersonalInfo?.links || \"\",\r\n    gender: PersonalInfo?.gender || \"\",\r\n    photo: PersonalInfo?.photo || \"\",\r\n    headline: PersonalInfo?.headline || \"\",\r\n    interests: PersonalInfo?.interests || \"\",\r\n    linkedin: PersonalInfo?.linkedin || \"\",\r\n    about: PersonalInfo?.about || \"\",\r\n  });\r\n\r\n  if (personalInfoButtonClicked) {\r\n    managePersonalInfo(userInfo);\r\n    setPersonalInfoButtonClicked(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-start lg:px-2 sm:px-1 gap-2\">\r\n      <div className=\"flex justify-between items-center \">\r\n        <span className=\"text-[10px]  text-[grey]\">\r\n          ( * ) indicates Required\r\n        </span>\r\n      </div>\r\n      <div className=\"flex gap-2 justify-between items-center \">\r\n        {/* //FirstName */}\r\n        <div className=\"flex flex-col  items\">\r\n          <span className=\"text-[10px] font-bold\">First Name*</span>\r\n          <InputGroup size=\"sm\">\r\n            <InputLeftAddon fontWeight=\"500\" color=\"black\">\r\n              FN\r\n            </InputLeftAddon>\r\n            <Input\r\n              value={userInfo.firstName}\r\n              onChange={(e) =>\r\n                setUserInfo((prevState) => ({\r\n                  ...prevState,\r\n                  firstName: e.target.value,\r\n                }))\r\n              }\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              focusBorderColor={currentPalette.primary}\r\n              placeholder=\"e.g.Tony\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n        {/* //Lastname */}\r\n        <div className=\"flex flex-col  items\">\r\n          <span className=\"text-[10px] font-bold\">Last Name*</span>\r\n          <InputGroup size=\"sm\">\r\n            <InputLeftAddon fontWeight=\"500\" color=\"black\">\r\n              LN\r\n            </InputLeftAddon>\r\n            <Input\r\n              value={userInfo.lastName}\r\n              onChange={(e) =>\r\n                setUserInfo((prevState) => ({\r\n                  ...prevState,\r\n                  lastName: e.target.value,\r\n                }))\r\n              }\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              focusBorderColor={currentPalette.primary}\r\n              placeholder=\"e.g.Stark\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </div>\r\n\r\n      {/* //Headline */}\r\n      <div className=\"flex flex-col  items\">\r\n        <span className=\"text-[10px] font-bold\">Headline*</span>\r\n        <InputGroup size=\"sm\">\r\n          <InputLeftAddon color=\"black\">\r\n            <BsCardHeading />\r\n          </InputLeftAddon>\r\n          <Input\r\n            value={userInfo.headline}\r\n            onChange={(e) =>\r\n              setUserInfo((prevState) => ({\r\n                ...prevState,\r\n                headline: e.target.value,\r\n              }))\r\n            }\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            focusBorderColor={currentPalette.primary}\r\n            placeholder=\"e.g.Software Engineer\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n      {/* //Mobile */}\r\n      <div className=\"flex flex-col  items\">\r\n        <span className=\"text-[10px] font-bold\">Mobile*</span>\r\n        <InputGroup size=\"sm\">\r\n          <InputLeftAddon color=\"black\">{ProfileCardLogos.call}</InputLeftAddon>\r\n          <Input\r\n            value={userInfo.mobNumber}\r\n            onChange={(e) =>\r\n              setUserInfo((prevState) => ({\r\n                ...prevState,\r\n                mobNumber: e.target.value,\r\n              }))\r\n            }\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            focusBorderColor={currentPalette.primary}\r\n            placeholder=\" e.g.7700077000\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n      {/* //Email */}\r\n      <div className=\"flex flex-col  items\">\r\n        <span className=\"text-[10px] font-bold\">Email*</span>\r\n        <InputGroup size=\"sm\">\r\n          <InputLeftAddon color=\"black\">\r\n            {ProfileCardLogos.email}\r\n          </InputLeftAddon>\r\n          <Input\r\n            size=\"sm\"\r\n            value={userInfo.email}\r\n            onChange={(e) =>\r\n              setUserInfo((prevState) => ({\r\n                ...prevState,\r\n                email: e.target.value,\r\n              }))\r\n            }\r\n            variant=\"outline\"\r\n            focusBorderColor={currentPalette.primary}\r\n            placeholder=\"e.g.xyz@gmail.com\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n\r\n      {/* //city */}\r\n      <div className=\"flex flex-col  items\">\r\n        <span className=\"text-[10px] font-bold\">City/State*</span>\r\n        <InputGroup size=\"sm\">\r\n          <InputLeftAddon color=\"black\">\r\n            {ProfileCardLogos.location}\r\n          </InputLeftAddon>\r\n          <Input\r\n            value={userInfo.city}\r\n            onChange={(e) =>\r\n              setUserInfo((prevState) => ({\r\n                ...prevState,\r\n                city: e.target.value,\r\n              }))\r\n            }\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            focusBorderColor={currentPalette.primary}\r\n            placeholder=\"e.g.Mumbai/Maharashtra\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n\r\n      {/* //Gender */}\r\n      <RadioGroup\r\n        name=\"gender\"\r\n        onChange={(val) =>\r\n          setUserInfo((prevState) => ({ ...prevState, gender: val }))\r\n        }\r\n        value={userInfo.gender}\r\n      >\r\n        <span className=\"text-[10px] font-bold\">Gender</span>\r\n        <div className=\"flex bg- rounded-lg p-3 gap-4 items-center\">\r\n          <Radio colorScheme={currentPalette.colorScheme} value=\"Male\">\r\n            Male\r\n          </Radio>\r\n          <Radio colorScheme={currentPalette.colorScheme} value=\"Female\">\r\n            Female\r\n          </Radio>\r\n          <Radio colorScheme={currentPalette.colorScheme} value=\"Other\">\r\n            Other\r\n          </Radio>\r\n        </div>\r\n      </RadioGroup>\r\n      {/* //Intrests */}\r\n      <div className=\"flex flex-col  items\">\r\n        <span className=\"text-[10px] font-bold\">Intrests*</span>\r\n        <InputGroup size=\"sm\">\r\n          <InputLeftAddon color=\"black\">\r\n            {ProfileCardLogos.intrest}\r\n          </InputLeftAddon>\r\n          <Input\r\n            value={userInfo.interests}\r\n            onChange={(e) =>\r\n              setUserInfo((prevState) => ({\r\n                ...prevState,\r\n                interests: e.target.value,\r\n              }))\r\n            }\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            focusBorderColor={currentPalette.primary}\r\n            placeholder=\"e.g.coding,writing,gaming,meditation\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col items\">\r\n        <span className=\"text-[10px] font-bold\">Linkedin Link</span>\r\n        <InputGroup size=\"sm\">\r\n          <InputLeftAddon color=\"black\">\r\n            <IoLogoLinkedin />\r\n          </InputLeftAddon>\r\n          <Input\r\n            value={userInfo.linkedin}\r\n            onChange={(e) =>\r\n              setUserInfo((prevState) => ({\r\n                ...prevState,\r\n                linkedin: e.target.value,\r\n              }))\r\n            }\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            focusBorderColor={currentPalette.secondary}\r\n            placeholder=\"Linkedin Profile Link\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n      <div className=\"flex flex-col gap-1\">\r\n        <span className=\"text-xs font-bold\">\r\n          About{\" \"}\r\n          <span\r\n            className={`font-semibold ${\r\n              userInfo.about?.length > 1000 && \"text-red-500\"\r\n            }`}\r\n          >\r\n            {userInfo.about?.length}/1000\r\n          </span>\r\n        </span>\r\n        <Textarea\r\n          value={userInfo.about}\r\n          onChange={(e) =>\r\n            setUserInfo((prevState) => ({\r\n              ...prevState,\r\n              about: e.target.value,\r\n            }))\r\n          }\r\n          focusBorderColor={currentPalette.secondary}\r\n          placeholder=\"Introduce yourself\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex gap-1 items-center justify-center\">\r\n        <FcLike /> <span>thanks for your time...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfoModal;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setUserPersonalInfo } from \"../../Redux/Slices/UserSlice\";\r\n\r\nconst useGetUserPersonalInfo = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const getPersonalInfo = async () => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const uid = user?.userId;\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      if (!token || !uid) {\r\n        toast.error(\"No user found\", { position: \"bottom-left\" });\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/info/${uid}`,\r\n        { headers: { Authorization: token } }\r\n      );\r\n\r\n      if (data.success) {\r\n        dispatch(setUserPersonalInfo(data.userInfo));\r\n      }\r\n    } catch (error) {\r\n      console.info(\"Error fetching user information:\");\r\n    }\r\n  };\r\n\r\n  return { getPersonalInfo };\r\n};\r\n\r\nexport default useGetUserPersonalInfo;\r\n","// emailvalidation\r\nexport const validateEmail = (email) => {\r\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return re.test(email);\r\n};\r\n\r\n//password Validation\r\nexport const validatePassword = (password) => {\r\n  return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()\\-_=+{};:,<.>]).{8,}$/.test(\r\n    password\r\n  );\r\n};\r\n\r\nexport const validateMobileNumber = (mobileNumber) => {\r\n  return /^\\d{10}$/.test(mobileNumber);\r\n};\r\n//user name validation\r\nexport const validateUsername = (userName) => {\r\n  return /^[a-zA-Z0-9_]{3,20}$/.test(userName);\r\n};\r\n"],"names":["useManagePersonalInfo","dispatch","useDispatch","getProfileCompletness","useGetUserPersonalInfo","managePersonalInfo","async","setIsLoading","personalInfo","missingFields","filter","field","length","toast","error","concat","join","position","validateEmail","email","validateMobileNumber","mobNumber","validateFields","token","JSON","parse","localStorage","getItem","user","uid","userId","data","axios","post","process","headers","Authorization","success","message","setUserPersonalInfo","userInfo","console","_ref","_userInfo$about","_userInfo$about2","personalInfoButtonClicked","setPersonalInfoButtonClicked","useSelector","store","userDetails","currentPalette","state","themes","palettes","PersonalInfo","userPersonalInfo","setUserInfo","useState","id","firstName","lastName","city","links","gender","photo","headline","interests","linkedin","about","_jsxs","className","children","_jsx","InputGroup","size","InputLeftAddon","fontWeight","color","Input","value","onChange","e","prevState","target","variant","focusBorderColor","primary","placeholder","BsCardHeading","ProfileCardLogos","call","location","RadioGroup","name","val","Radio","colorScheme","intrest","IoLogoLinkedin","secondary","Textarea","FcLike","navigate","useNavigate","getPersonalInfo","get","info","test","validatePassword","password","mobileNumber","validateUsername","userName"],"sourceRoot":""}