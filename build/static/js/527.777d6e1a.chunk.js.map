{"version":3,"file":"static/js/527.777d6e1a.chunk.js","mappings":"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","sources":["Hooks/CustomTaskHooks/useCreateTask.js","Hooks/CustomTaskHooks/useUpdateTask.js","Components/ModalBodys/TaskModalBody.js"],"sourcesContent":["import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setIsTaskCreating, setTaskData } from \"../../Redux/Slices/TaskSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useGetTask from \"./useGetTask\";\r\n\r\nconst useCreateTask = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { getAllTask } = useGetTask();\r\n\r\n  const createTask = async (task) => {\r\n    try {\r\n      dispatch(setIsTaskCreating(true));\r\n\r\n      const token = localStorage.getItem(\"jwt_Token\");\r\n\r\n      if (!token) {\r\n        navigate(\"/\");\r\n        throw new Error(\"No token found\");\r\n      }\r\n      const { userId, title, description, taskPriority, dueDate } = task;\r\n      if (!userId || !title || !description || !taskPriority || !dueDate) {\r\n        const missingFields = [];\r\n        if (!userId) missingFields.push(\"userId\");\r\n        if (!title) missingFields.push(\"title\");\r\n        if (!description) missingFields.push(\"description\");\r\n        if (!taskPriority) missingFields.push(\"taskPriority\");\r\n        if (!dueDate) missingFields.push(\"dueDate\");\r\n\r\n        return toast.error(`Missing : ${missingFields.join(\", \")} `, {\r\n          position: \"bottom-left\",\r\n        });\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/task/createtask`,\r\n        { task },\r\n        {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        toast.success(data.message, { position: \"bottom-left\" });\r\n        getAllTask();\r\n      } else {\r\n        toast.error(data.message, { position: \"bottom-left\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error.message || \"Something went wrong\", {\r\n        position: \"bottom-left\",\r\n      });\r\n    } finally {\r\n      dispatch(setIsTaskCreating(false));\r\n    }\r\n  };\r\n\r\n  return { createTask };\r\n};\r\n\r\nexport default useCreateTask;\r\n","import toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useGetTask from \"./useGetTask\";\r\nimport { setIsTaskCreating, setTaskData } from \"../../Redux/Slices/TaskSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst useUpdateTask = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { getAllTask } = useGetTask();\r\n  const updateTask = async (task, tid) => {\r\n    try {\r\n      dispatch(setIsTaskCreating(true));\r\n\r\n      const token = JSON.parse(localStorage.getItem(\"jwt_Token\"));\r\n      if (!tid) {\r\n        throw new Error(\"No taskId found\");\r\n      }\r\n      if (!token) {\r\n        navigate(\"/\");\r\n        throw new Error(\"No token found\");\r\n      }\r\n      const { userId, title, description, taskPriority, dueDate, progress } =\r\n        task;\r\n      if (!userId || !title || !description || !taskPriority || !dueDate) {\r\n        const missingFields = [];\r\n        if (!userId) missingFields.push(\"userId\");\r\n        if (!title) missingFields.push(\"title\");\r\n        if (!description) missingFields.push(\"description\");\r\n        if (!taskPriority) missingFields.push(\"taskPriority\");\r\n        if (!dueDate) missingFields.push(\"dueDate\");\r\n\r\n        return toast.error(`Missing : ${missingFields.join(\", \")} `, {\r\n          position: \"bottom-left\",\r\n        });\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n        `${process.env.REACT_APP_BACKEND_ORIGIN}/api/task/updatemytask/${tid}`,\r\n        { task }, // Request body object\r\n        {\r\n          headers: {\r\n            Authorization: token, // Headers object\r\n            \"Content-Type\": \"application/json\", // Optional content type\r\n          },\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        toast.success(data.message, { position: \"bottom-left\" });\r\n        getAllTask();\r\n      } else {\r\n        toast.error(data.message, { position: \"bottom-left\" });\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"something went wrong\", { position: \"bottom-left\" });\r\n    } finally {\r\n      dispatch(setIsTaskCreating(false));\r\n    }\r\n  };\r\n\r\n  return {\r\n    updateTask,\r\n  };\r\n};\r\n\r\nexport default useUpdateTask;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Radio,\r\n  RadioGroup,\r\n  Slider,\r\n  SliderFilledTrack,\r\n  SliderMark,\r\n  SliderThumb,\r\n  SliderTrack,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\nimport { BsCardHeading } from \"react-icons/bs\";\r\nimport { IoIosTimer } from \"react-icons/io\";\r\nimport useCreateTask from \"../../Hooks/CustomTaskHooks/useCreateTask\";\r\nimport useUpdateTask from \"../../Hooks/CustomTaskHooks/useUpdateTask\";\r\nimport { FcLike } from \"react-icons/fc\";\r\n\r\nconst TaskModalBody = ({\r\n  createClicked,\r\n  setCreateClicked,\r\n\r\n  listState,\r\n  updateClicked,\r\n  setUpdateClicked,\r\n}) => {\r\n  const { createTask } = useCreateTask();\r\n  const { updateTask } = useUpdateTask();\r\n  const user = useSelector((store) => store.user.userDetails);\r\n  const [task, setTask] = useState({\r\n    userId: user?.id,\r\n    title: \"\",\r\n    description: \"\",\r\n    taskPriority: \"medium\",\r\n    progressPercentage: 5,\r\n    dueDate: \"\",\r\n  });\r\n\r\n  const currentPalette = useSelector(\r\n    (state) => state.themes.palettes[state.themes.currentPalette]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (listState) {\r\n      // If listState prop is provided, update task state with listState values\r\n      setTask({\r\n        userId: listState.userId || user?.userId || \"\",\r\n        taskPriority: listState.taskPriority || \"\",\r\n        title: listState.title || \"\",\r\n        description: listState.description || \"\",\r\n        dueDate: listState.dueDate\r\n          ? new Date(listState.dueDate).toISOString().slice(0, 16)\r\n          : \"\",\r\n        progressPercentage: listState.progressPercentage || \"\",\r\n      });\r\n    }\r\n  }, [listState]); // Add listState as dependency\r\n  useEffect(() => {\r\n    if (createClicked) {\r\n      createTask(task);\r\n      setCreateClicked(false);\r\n    }\r\n  }, [createClicked]);\r\n  useEffect(() => {\r\n    if (updateClicked) {\r\n      updateTask(task, listState._id); // use costom hook\r\n      setUpdateClicked(false);\r\n    }\r\n  }, [updateClicked]);\r\n\r\n  const labelStyles = {\r\n    mt: \"2\",\r\n    ml: \"-2.5\",\r\n    fontSize: \"sm\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-start lg:px-2 sm:px-1 gap-2\">\r\n      <div className=\"flex justify-between items-center \">\r\n        <span className=\"text-xs  text-[grey]\">( * ) indicates Required</span>\r\n      </div>\r\n      <div className=\"flex flex-col gap-1 items\">\r\n        <span className=\"text-xs font-bold\">Title*</span>\r\n        <InputGroup>\r\n          <InputLeftAddon color=\"black\">\r\n            <BsCardHeading />\r\n          </InputLeftAddon>\r\n          <Input\r\n            value={task.title}\r\n            onChange={(e) =>\r\n              setTask((prevState) => ({ ...prevState, title: e.target.value }))\r\n            }\r\n            variant=\"outline\"\r\n            size=\"md\"\r\n            focusBorderColor={currentPalette.primary}\r\n            placeholder=\"e.g. Complete 2 DSA problems\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col gap-1\">\r\n        <span className=\"text-xs font-bold\">Description*</span>\r\n        <Textarea\r\n          value={task.description}\r\n          onChange={(e) =>\r\n            setTask((prevState) => ({\r\n              ...prevState,\r\n              description: e.target.value,\r\n            }))\r\n          }\r\n          focusBorderColor={currentPalette.primary}\r\n          placeholder=\"Add some details, about the task\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex flex-col gap-1 items\">\r\n        <span className=\"text-xs font-bold\">Due Date*</span>\r\n        <InputGroup>\r\n          <InputLeftAddon color=\"black\">\r\n            <IoIosTimer />\r\n          </InputLeftAddon>\r\n          <Input\r\n            textTransform=\"uppercase\"\r\n            name=\"duedate\"\r\n            value={task.dueDate}\r\n            onChange={(e) =>\r\n              setTask((prevState) => ({\r\n                ...prevState,\r\n                dueDate: e.target.value,\r\n              }))\r\n            }\r\n            focusBorderColor={currentPalette.primary}\r\n            placeholder=\"Select Date and Time\"\r\n            size=\"md\"\r\n            type=\"datetime-local\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n\r\n      <RadioGroup\r\n        name=\"priority\"\r\n        onChange={(val) =>\r\n          setTask((prevState) => ({ ...prevState, taskPriority: val }))\r\n        }\r\n        value={task.taskPriority}\r\n      >\r\n        <span className=\"text-xs font-bold\">Priority</span>\r\n        <div className=\"flex bg- rounded-lg p-3 gap-4 items-center\">\r\n          <Radio colorScheme={currentPalette.colorScheme} value=\"high\">\r\n            High\r\n          </Radio>\r\n          <Radio colorScheme={currentPalette.colorScheme} value=\"medium\">\r\n            Medium\r\n          </Radio>\r\n          <Radio colorScheme={currentPalette.colorScheme} value=\"low\">\r\n            Low\r\n          </Radio>\r\n        </div>\r\n      </RadioGroup>\r\n\r\n      <div className=\"flex flex-col gap-3\">\r\n        <span className=\"text-xs font-bold\">Progress</span>\r\n        <Box p={4} pt={6}>\r\n          <Slider\r\n            aria-label=\"slider-ex-6\"\r\n            colorScheme={currentPalette.colorScheme}\r\n            value={task.progressPercentage}\r\n            onChange={(value) =>\r\n              setTask((prevState) => ({\r\n                ...prevState,\r\n                progressPercentage: value,\r\n              }))\r\n            }\r\n          >\r\n            <SliderMark colo value={25} {...labelStyles}>\r\n              25%\r\n            </SliderMark>\r\n            <SliderMark value={50} {...labelStyles}>\r\n              50%\r\n            </SliderMark>\r\n            <SliderMark value={75} {...labelStyles}>\r\n              75%\r\n            </SliderMark>\r\n            <SliderMark\r\n              value={task.progressPercentage}\r\n              textAlign=\"center\"\r\n              bg={currentPalette.primary}\r\n              color=\"white\"\r\n              mt=\"-10\"\r\n              ml=\"-5\"\r\n              w=\"12\"\r\n            >\r\n              {task.progressPercentage}%\r\n            </SliderMark>\r\n            <SliderTrack>\r\n              <SliderFilledTrack />\r\n            </SliderTrack>\r\n            <SliderThumb />\r\n          </Slider>\r\n        </Box>\r\n      </div>\r\n      <div className=\"flex gap-1 items-center justify-center\">\r\n        <FcLike /> <span>thanks for your time...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskModalBody;\r\n"],"names":["useCreateTask","dispatch","useDispatch","navigate","useNavigate","getAllTask","useGetTask","createTask","async","setIsTaskCreating","token","localStorage","getItem","Error","userId","title","description","taskPriority","dueDate","task","missingFields","push","toast","error","concat","join","position","data","axios","post","process","headers","Authorization","success","message","console","useUpdateTask","updateTask","tid","JSON","parse","progress","put","_ref","createClicked","setCreateClicked","listState","updateClicked","setUpdateClicked","user","useSelector","store","userDetails","setTask","useState","id","progressPercentage","currentPalette","state","themes","palettes","useEffect","Date","toISOString","slice","_id","labelStyles","mt","ml","fontSize","_jsxs","className","children","_jsx","InputGroup","InputLeftAddon","color","BsCardHeading","Input","value","onChange","e","prevState","target","variant","size","focusBorderColor","primary","placeholder","Textarea","IoIosTimer","textTransform","name","type","RadioGroup","val","Radio","colorScheme","Box","p","pt","Slider","SliderMark","colo","textAlign","bg","w","SliderTrack","SliderFilledTrack","SliderThumb","FcLike"],"sourceRoot":""}